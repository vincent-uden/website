<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="790" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="773.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="773.00"> </text><svg id="frames" x="10" width="1180" total_samples="89507699506"><g><title>[libc.so.6] (16,220,344 samples, 0.02%)</title><rect x="0.0000%" y="709" width="0.0181%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="16220344"/><text x="0.2500%" y="719.50"></text></g><g><title>[libc.so.6] (16,220,344 samples, 0.02%)</title><rect x="0.0000%" y="693" width="0.0181%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="16220344"/><text x="0.2500%" y="703.50"></text></g><g><title>[libglib-2.0.so.0.8400.4] (16,220,344 samples, 0.02%)</title><rect x="0.0000%" y="677" width="0.0181%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="16220344"/><text x="0.2500%" y="687.50"></text></g><g><title>[libpangoft2-1.0.so.0.5600.4] (16,220,344 samples, 0.02%)</title><rect x="0.0000%" y="661" width="0.0181%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="16220344"/><text x="0.2500%" y="671.50"></text></g><g><title>FcInit (13,112,687 samples, 0.01%)</title><rect x="0.0035%" y="645" width="0.0146%" height="15" fill="rgb(208,68,35)" fg:x="3107657" fg:w="13112687"/><text x="0.2535%" y="655.50"></text></g><g><title>[libfontconfig.so.1.16.0] (13,112,687 samples, 0.01%)</title><rect x="0.0035%" y="629" width="0.0146%" height="15" fill="rgb(232,128,0)" fg:x="3107657" fg:w="13112687"/><text x="0.2535%" y="639.50"></text></g><g><title>[libfontconfig.so.1.16.0] (10,080,453 samples, 0.01%)</title><rect x="0.0069%" y="613" width="0.0113%" height="15" fill="rgb(207,160,47)" fg:x="6139891" fg:w="10080453"/><text x="0.2569%" y="623.50"></text></g><g><title>[libfontconfig.so.1.16.0] (10,080,453 samples, 0.01%)</title><rect x="0.0069%" y="597" width="0.0113%" height="15" fill="rgb(228,23,34)" fg:x="6139891" fg:w="10080453"/><text x="0.2569%" y="607.50"></text></g><g><title>[libfontconfig.so.1.16.0] (10,080,453 samples, 0.01%)</title><rect x="0.0069%" y="581" width="0.0113%" height="15" fill="rgb(218,30,26)" fg:x="6139891" fg:w="10080453"/><text x="0.2569%" y="591.50"></text></g><g><title>[pango]_fontcon (22,406,014 samples, 0.03%)</title><rect x="0.0000%" y="725" width="0.0250%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="22406014"/><text x="0.2500%" y="735.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (9,280,111 samples, 0.01%)</title><rect x="0.0353%" y="661" width="0.0104%" height="15" fill="rgb(250,228,42)" fg:x="31617339" fg:w="9280111"/><text x="0.2853%" y="671.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with (9,280,111 samples, 0.01%)</title><rect x="0.0353%" y="645" width="0.0104%" height="15" fill="rgb(240,193,28)" fg:x="31617339" fg:w="9280111"/><text x="0.2853%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (9,280,111 samples, 0.01%)</title><rect x="0.0353%" y="629" width="0.0104%" height="15" fill="rgb(216,20,37)" fg:x="31617339" fg:w="9280111"/><text x="0.2853%" y="639.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with::{{closure}} (9,280,111 samples, 0.01%)</title><rect x="0.0353%" y="613" width="0.0104%" height="15" fill="rgb(206,188,39)" fg:x="31617339" fg:w="9280111"/><text x="0.2853%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_str (9,280,111 samples, 0.01%)</title><rect x="0.0353%" y="597" width="0.0104%" height="15" fill="rgb(217,207,13)" fg:x="31617339" fg:w="9280111"/><text x="0.2853%" y="607.50"></text></g><g><title>&lt;cad::SketchInfo as core::fmt::Debug&gt;::fmt (18,630,710 samples, 0.02%)</title><rect x="0.0302%" y="693" width="0.0208%" height="15" fill="rgb(231,73,38)" fg:x="27026926" fg:w="18630710"/><text x="0.2802%" y="703.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field5_finish (14,040,297 samples, 0.02%)</title><rect x="0.0353%" y="677" width="0.0157%" height="15" fill="rgb(225,20,46)" fg:x="31617339" fg:w="14040297"/><text x="0.2853%" y="687.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::fmt::Debug&gt;::fmt (13,910,201 samples, 0.02%)</title><rect x="0.0510%" y="661" width="0.0155%" height="15" fill="rgb(210,31,41)" fg:x="45657636" fg:w="13910201"/><text x="0.3010%" y="671.50"></text></g><g><title>&lt;nalgebra::base::array_storage::ArrayStorage&lt;T,_,_&gt; as core::fmt::Debug&gt;::fmt (13,910,201 samples, 0.02%)</title><rect x="0.0510%" y="645" width="0.0155%" height="15" fill="rgb(221,200,47)" fg:x="45657636" fg:w="13910201"/><text x="0.3010%" y="655.50"></text></g><g><title>core::array::&lt;impl core::fmt::Debug for [T: N]&gt;::fmt (13,910,201 samples, 0.02%)</title><rect x="0.0510%" y="629" width="0.0155%" height="15" fill="rgb(226,26,5)" fg:x="45657636" fg:w="13910201"/><text x="0.3010%" y="639.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (13,910,201 samples, 0.02%)</title><rect x="0.0510%" y="613" width="0.0155%" height="15" fill="rgb(249,33,26)" fg:x="45657636" fg:w="13910201"/><text x="0.3010%" y="623.50"></text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (13,910,201 samples, 0.02%)</title><rect x="0.0510%" y="597" width="0.0155%" height="15" fill="rgb(235,183,28)" fg:x="45657636" fg:w="13910201"/><text x="0.3010%" y="607.50"></text></g><g><title>core::fmt::builders::DebugList::finish (9,226,282 samples, 0.01%)</title><rect x="0.0562%" y="581" width="0.0103%" height="15" fill="rgb(221,5,38)" fg:x="50341555" fg:w="9226282"/><text x="0.3062%" y="591.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (9,226,282 samples, 0.01%)</title><rect x="0.0562%" y="565" width="0.0103%" height="15" fill="rgb(247,18,42)" fg:x="50341555" fg:w="9226282"/><text x="0.3062%" y="575.50"></text></g><g><title>core::fmt::builders::DebugList::finish::{{closure}} (9,226,282 samples, 0.01%)</title><rect x="0.0562%" y="549" width="0.0103%" height="15" fill="rgb(241,131,45)" fg:x="50341555" fg:w="9226282"/><text x="0.3062%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_str (9,226,282 samples, 0.01%)</title><rect x="0.0562%" y="533" width="0.0103%" height="15" fill="rgb(249,31,29)" fg:x="50341555" fg:w="9226282"/><text x="0.3062%" y="543.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,226,282 samples, 0.01%)</title><rect x="0.0562%" y="517" width="0.0103%" height="15" fill="rgb(225,111,53)" fg:x="50341555" fg:w="9226282"/><text x="0.3062%" y="527.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,226,282 samples, 0.01%)</title><rect x="0.0562%" y="501" width="0.0103%" height="15" fill="rgb(238,160,17)" fg:x="50341555" fg:w="9226282"/><text x="0.3062%" y="511.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,226,282 samples, 0.01%)</title><rect x="0.0562%" y="485" width="0.0103%" height="15" fill="rgb(214,148,48)" fg:x="50341555" fg:w="9226282"/><text x="0.3062%" y="495.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,226,282 samples, 0.01%)</title><rect x="0.0562%" y="469" width="0.0103%" height="15" fill="rgb(232,36,49)" fg:x="50341555" fg:w="9226282"/><text x="0.3062%" y="479.50"></text></g><g><title>&lt;cad::entity::Circle as core::fmt::Debug&gt;::fmt (32,452,643 samples, 0.04%)</title><rect x="0.0510%" y="693" width="0.0363%" height="15" fill="rgb(209,103,24)" fg:x="45657636" fg:w="32452643"/><text x="0.3010%" y="703.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (32,452,643 samples, 0.04%)</title><rect x="0.0510%" y="677" width="0.0363%" height="15" fill="rgb(229,88,8)" fg:x="45657636" fg:w="32452643"/><text x="0.3010%" y="687.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (18,542,442 samples, 0.02%)</title><rect x="0.0666%" y="661" width="0.0207%" height="15" fill="rgb(213,181,19)" fg:x="59567837" fg:w="18542442"/><text x="0.3166%" y="671.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with (18,542,442 samples, 0.02%)</title><rect x="0.0666%" y="645" width="0.0207%" height="15" fill="rgb(254,191,54)" fg:x="59567837" fg:w="18542442"/><text x="0.3166%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (18,542,442 samples, 0.02%)</title><rect x="0.0666%" y="629" width="0.0207%" height="15" fill="rgb(241,83,37)" fg:x="59567837" fg:w="18542442"/><text x="0.3166%" y="639.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with::{{closure}} (18,542,442 samples, 0.02%)</title><rect x="0.0666%" y="613" width="0.0207%" height="15" fill="rgb(233,36,39)" fg:x="59567837" fg:w="18542442"/><text x="0.3166%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_str (18,542,442 samples, 0.02%)</title><rect x="0.0666%" y="597" width="0.0207%" height="15" fill="rgb(226,3,54)" fg:x="59567837" fg:w="18542442"/><text x="0.3166%" y="607.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (18,542,442 samples, 0.02%)</title><rect x="0.0666%" y="581" width="0.0207%" height="15" fill="rgb(245,192,40)" fg:x="59567837" fg:w="18542442"/><text x="0.3166%" y="591.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (18,542,442 samples, 0.02%)</title><rect x="0.0666%" y="565" width="0.0207%" height="15" fill="rgb(238,167,29)" fg:x="59567837" fg:w="18542442"/><text x="0.3166%" y="575.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (13,985,157 samples, 0.02%)</title><rect x="0.0716%" y="549" width="0.0156%" height="15" fill="rgb(232,182,51)" fg:x="64125122" fg:w="13985157"/><text x="0.3216%" y="559.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,299,119 samples, 0.01%)</title><rect x="0.0769%" y="533" width="0.0104%" height="15" fill="rgb(231,60,39)" fg:x="68811160" fg:w="9299119"/><text x="0.3269%" y="543.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (18,943,130 samples, 0.02%)</title><rect x="0.0873%" y="661" width="0.0212%" height="15" fill="rgb(208,69,12)" fg:x="78110279" fg:w="18943130"/><text x="0.3373%" y="671.50"></text></g><g><title>core::fmt::builders::DebugTuple::field_with (18,943,130 samples, 0.02%)</title><rect x="0.0873%" y="645" width="0.0212%" height="15" fill="rgb(235,93,37)" fg:x="78110279" fg:w="18943130"/><text x="0.3373%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (18,943,130 samples, 0.02%)</title><rect x="0.0873%" y="629" width="0.0212%" height="15" fill="rgb(213,116,39)" fg:x="78110279" fg:w="18943130"/><text x="0.3373%" y="639.50"></text></g><g><title>core::fmt::builders::DebugTuple::field_with::{{closure}} (18,943,130 samples, 0.02%)</title><rect x="0.0873%" y="613" width="0.0212%" height="15" fill="rgb(222,207,29)" fg:x="78110279" fg:w="18943130"/><text x="0.3373%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_str (18,943,130 samples, 0.02%)</title><rect x="0.0873%" y="597" width="0.0212%" height="15" fill="rgb(206,96,30)" fg:x="78110279" fg:w="18943130"/><text x="0.3373%" y="607.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (18,943,130 samples, 0.02%)</title><rect x="0.0873%" y="581" width="0.0212%" height="15" fill="rgb(218,138,4)" fg:x="78110279" fg:w="18943130"/><text x="0.3373%" y="591.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (18,943,130 samples, 0.02%)</title><rect x="0.0873%" y="565" width="0.0212%" height="15" fill="rgb(250,191,14)" fg:x="78110279" fg:w="18943130"/><text x="0.3373%" y="575.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (14,110,350 samples, 0.02%)</title><rect x="0.0927%" y="549" width="0.0158%" height="15" fill="rgb(239,60,40)" fg:x="82943059" fg:w="14110350"/><text x="0.3427%" y="559.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (14,110,350 samples, 0.02%)</title><rect x="0.0927%" y="533" width="0.0158%" height="15" fill="rgb(206,27,48)" fg:x="82943059" fg:w="14110350"/><text x="0.3427%" y="543.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (14,110,350 samples, 0.02%)</title><rect x="0.0927%" y="517" width="0.0158%" height="15" fill="rgb(225,35,8)" fg:x="82943059" fg:w="14110350"/><text x="0.3427%" y="527.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,423,787 samples, 0.01%)</title><rect x="0.0979%" y="501" width="0.0105%" height="15" fill="rgb(250,213,24)" fg:x="87629622" fg:w="9423787"/><text x="0.3479%" y="511.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,423,787 samples, 0.01%)</title><rect x="0.0979%" y="485" width="0.0105%" height="15" fill="rgb(247,123,22)" fg:x="87629622" fg:w="9423787"/><text x="0.3479%" y="495.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,423,787 samples, 0.01%)</title><rect x="0.0979%" y="469" width="0.0105%" height="15" fill="rgb(231,138,38)" fg:x="87629622" fg:w="9423787"/><text x="0.3479%" y="479.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (12,207,396 samples, 0.01%)</title><rect x="0.1154%" y="485" width="0.0136%" height="15" fill="rgb(231,145,46)" fg:x="103315132" fg:w="12207396"/><text x="0.3654%" y="495.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (22,436,886 samples, 0.03%)</title><rect x="0.1093%" y="501" width="0.0251%" height="15" fill="rgb(251,118,11)" fg:x="97796003" fg:w="22436886"/><text x="0.3593%" y="511.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish (28,577,230 samples, 0.03%)</title><rect x="0.1084%" y="661" width="0.0319%" height="15" fill="rgb(217,147,25)" fg:x="97053409" fg:w="28577230"/><text x="0.3584%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (28,577,230 samples, 0.03%)</title><rect x="0.1084%" y="645" width="0.0319%" height="15" fill="rgb(247,81,37)" fg:x="97053409" fg:w="28577230"/><text x="0.3584%" y="655.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish::{{closure}} (28,577,230 samples, 0.03%)</title><rect x="0.1084%" y="629" width="0.0319%" height="15" fill="rgb(209,12,38)" fg:x="97053409" fg:w="28577230"/><text x="0.3584%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (28,577,230 samples, 0.03%)</title><rect x="0.1084%" y="613" width="0.0319%" height="15" fill="rgb(227,1,9)" fg:x="97053409" fg:w="28577230"/><text x="0.3584%" y="623.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (28,577,230 samples, 0.03%)</title><rect x="0.1084%" y="597" width="0.0319%" height="15" fill="rgb(248,47,43)" fg:x="97053409" fg:w="28577230"/><text x="0.3584%" y="607.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (28,577,230 samples, 0.03%)</title><rect x="0.1084%" y="581" width="0.0319%" height="15" fill="rgb(221,10,30)" fg:x="97053409" fg:w="28577230"/><text x="0.3584%" y="591.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (28,577,230 samples, 0.03%)</title><rect x="0.1084%" y="565" width="0.0319%" height="15" fill="rgb(210,229,1)" fg:x="97053409" fg:w="28577230"/><text x="0.3584%" y="575.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (28,577,230 samples, 0.03%)</title><rect x="0.1084%" y="549" width="0.0319%" height="15" fill="rgb(222,148,37)" fg:x="97053409" fg:w="28577230"/><text x="0.3584%" y="559.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (28,577,230 samples, 0.03%)</title><rect x="0.1084%" y="533" width="0.0319%" height="15" fill="rgb(234,67,33)" fg:x="97053409" fg:w="28577230"/><text x="0.3584%" y="543.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (28,577,230 samples, 0.03%)</title><rect x="0.1084%" y="517" width="0.0319%" height="15" fill="rgb(247,98,35)" fg:x="97053409" fg:w="28577230"/><text x="0.3584%" y="527.50"></text></g><g><title>&lt;cad::entity::EntityId as core::fmt::Debug&gt;::fmt (54,535,322 samples, 0.06%)</title><rect x="0.0873%" y="693" width="0.0609%" height="15" fill="rgb(247,138,52)" fg:x="78110279" fg:w="54535322"/><text x="0.3373%" y="703.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (54,535,322 samples, 0.06%)</title><rect x="0.0873%" y="677" width="0.0609%" height="15" fill="rgb(213,79,30)" fg:x="78110279" fg:w="54535322"/><text x="0.3373%" y="687.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,495,917 samples, 0.01%)</title><rect x="0.1482%" y="597" width="0.0106%" height="15" fill="rgb(246,177,23)" fg:x="132645601" fg:w="9495917"/><text x="0.3982%" y="607.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,495,917 samples, 0.01%)</title><rect x="0.1482%" y="581" width="0.0106%" height="15" fill="rgb(230,62,27)" fg:x="132645601" fg:w="9495917"/><text x="0.3982%" y="591.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (11,639,261 samples, 0.01%)</title><rect x="0.1588%" y="405" width="0.0130%" height="15" fill="rgb(216,154,8)" fg:x="142141518" fg:w="11639261"/><text x="0.4088%" y="415.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (11,639,261 samples, 0.01%)</title><rect x="0.1588%" y="389" width="0.0130%" height="15" fill="rgb(244,35,45)" fg:x="142141518" fg:w="11639261"/><text x="0.4088%" y="399.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (11,639,261 samples, 0.01%)</title><rect x="0.1588%" y="373" width="0.0130%" height="15" fill="rgb(251,115,12)" fg:x="142141518" fg:w="11639261"/><text x="0.4088%" y="383.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (11,639,261 samples, 0.01%)</title><rect x="0.1588%" y="357" width="0.0130%" height="15" fill="rgb(240,54,50)" fg:x="142141518" fg:w="11639261"/><text x="0.4088%" y="367.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (11,639,261 samples, 0.01%)</title><rect x="0.1588%" y="341" width="0.0130%" height="15" fill="rgb(233,84,52)" fg:x="142141518" fg:w="11639261"/><text x="0.4088%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_str (16,311,724 samples, 0.02%)</title><rect x="0.1588%" y="469" width="0.0182%" height="15" fill="rgb(207,117,47)" fg:x="142141518" fg:w="16311724"/><text x="0.4088%" y="479.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (16,311,724 samples, 0.02%)</title><rect x="0.1588%" y="453" width="0.0182%" height="15" fill="rgb(249,43,39)" fg:x="142141518" fg:w="16311724"/><text x="0.4088%" y="463.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (16,311,724 samples, 0.02%)</title><rect x="0.1588%" y="437" width="0.0182%" height="15" fill="rgb(209,38,44)" fg:x="142141518" fg:w="16311724"/><text x="0.4088%" y="447.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (16,311,724 samples, 0.02%)</title><rect x="0.1588%" y="421" width="0.0182%" height="15" fill="rgb(236,212,23)" fg:x="142141518" fg:w="16311724"/><text x="0.4088%" y="431.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (26,364,643 samples, 0.03%)</title><rect x="0.1588%" y="533" width="0.0295%" height="15" fill="rgb(242,79,21)" fg:x="142141518" fg:w="26364643"/><text x="0.4088%" y="543.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with (26,364,643 samples, 0.03%)</title><rect x="0.1588%" y="517" width="0.0295%" height="15" fill="rgb(211,96,35)" fg:x="142141518" fg:w="26364643"/><text x="0.4088%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (26,364,643 samples, 0.03%)</title><rect x="0.1588%" y="501" width="0.0295%" height="15" fill="rgb(253,215,40)" fg:x="142141518" fg:w="26364643"/><text x="0.4088%" y="511.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with::{{closure}} (26,364,643 samples, 0.03%)</title><rect x="0.1588%" y="485" width="0.0295%" height="15" fill="rgb(211,81,21)" fg:x="142141518" fg:w="26364643"/><text x="0.4088%" y="495.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (10,052,919 samples, 0.01%)</title><rect x="0.1770%" y="469" width="0.0112%" height="15" fill="rgb(208,190,38)" fg:x="158453242" fg:w="10052919"/><text x="0.4270%" y="479.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (10,052,919 samples, 0.01%)</title><rect x="0.1770%" y="453" width="0.0112%" height="15" fill="rgb(235,213,38)" fg:x="158453242" fg:w="10052919"/><text x="0.4270%" y="463.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::fmt::Debug&gt;::fmt (10,052,919 samples, 0.01%)</title><rect x="0.1770%" y="437" width="0.0112%" height="15" fill="rgb(237,122,38)" fg:x="158453242" fg:w="10052919"/><text x="0.4270%" y="447.50"></text></g><g><title>&lt;nalgebra::base::array_storage::ArrayStorage&lt;T,_,_&gt; as core::fmt::Debug&gt;::fmt (10,052,919 samples, 0.01%)</title><rect x="0.1770%" y="421" width="0.0112%" height="15" fill="rgb(244,218,35)" fg:x="158453242" fg:w="10052919"/><text x="0.4270%" y="431.50"></text></g><g><title>core::array::&lt;impl core::fmt::Debug for [T: N]&gt;::fmt (10,052,919 samples, 0.01%)</title><rect x="0.1770%" y="405" width="0.0112%" height="15" fill="rgb(240,68,47)" fg:x="158453242" fg:w="10052919"/><text x="0.4270%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (10,052,919 samples, 0.01%)</title><rect x="0.1770%" y="389" width="0.0112%" height="15" fill="rgb(210,16,53)" fg:x="158453242" fg:w="10052919"/><text x="0.4270%" y="399.50"></text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (10,052,919 samples, 0.01%)</title><rect x="0.1770%" y="373" width="0.0112%" height="15" fill="rgb(235,124,12)" fg:x="158453242" fg:w="10052919"/><text x="0.4270%" y="383.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish (9,488,547 samples, 0.01%)</title><rect x="0.1883%" y="533" width="0.0106%" height="15" fill="rgb(224,169,11)" fg:x="168506161" fg:w="9488547"/><text x="0.4383%" y="543.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (9,488,547 samples, 0.01%)</title><rect x="0.1883%" y="517" width="0.0106%" height="15" fill="rgb(250,166,2)" fg:x="168506161" fg:w="9488547"/><text x="0.4383%" y="527.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish::{{closure}} (9,488,547 samples, 0.01%)</title><rect x="0.1883%" y="501" width="0.0106%" height="15" fill="rgb(242,216,29)" fg:x="168506161" fg:w="9488547"/><text x="0.4383%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (9,488,547 samples, 0.01%)</title><rect x="0.1883%" y="485" width="0.0106%" height="15" fill="rgb(230,116,27)" fg:x="168506161" fg:w="9488547"/><text x="0.4383%" y="495.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,488,547 samples, 0.01%)</title><rect x="0.1883%" y="469" width="0.0106%" height="15" fill="rgb(228,99,48)" fg:x="168506161" fg:w="9488547"/><text x="0.4383%" y="479.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,488,547 samples, 0.01%)</title><rect x="0.1883%" y="453" width="0.0106%" height="15" fill="rgb(253,11,6)" fg:x="168506161" fg:w="9488547"/><text x="0.4383%" y="463.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,488,547 samples, 0.01%)</title><rect x="0.1883%" y="437" width="0.0106%" height="15" fill="rgb(247,143,39)" fg:x="168506161" fg:w="9488547"/><text x="0.4383%" y="447.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,488,547 samples, 0.01%)</title><rect x="0.1883%" y="421" width="0.0106%" height="15" fill="rgb(236,97,10)" fg:x="168506161" fg:w="9488547"/><text x="0.4383%" y="431.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,488,547 samples, 0.01%)</title><rect x="0.1883%" y="405" width="0.0106%" height="15" fill="rgb(233,208,19)" fg:x="168506161" fg:w="9488547"/><text x="0.4383%" y="415.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,488,547 samples, 0.01%)</title><rect x="0.1883%" y="389" width="0.0106%" height="15" fill="rgb(216,164,2)" fg:x="168506161" fg:w="9488547"/><text x="0.4383%" y="399.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,488,547 samples, 0.01%)</title><rect x="0.1883%" y="373" width="0.0106%" height="15" fill="rgb(220,129,5)" fg:x="168506161" fg:w="9488547"/><text x="0.4383%" y="383.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,488,547 samples, 0.01%)</title><rect x="0.1883%" y="357" width="0.0106%" height="15" fill="rgb(242,17,10)" fg:x="168506161" fg:w="9488547"/><text x="0.4383%" y="367.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (54,821,610 samples, 0.06%)</title><rect x="0.1482%" y="661" width="0.0612%" height="15" fill="rgb(242,107,0)" fg:x="132645601" fg:w="54821610"/><text x="0.3982%" y="671.50"></text></g><g><title>core::fmt::builders::DebugTuple::field_with (54,821,610 samples, 0.06%)</title><rect x="0.1482%" y="645" width="0.0612%" height="15" fill="rgb(251,28,31)" fg:x="132645601" fg:w="54821610"/><text x="0.3982%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (54,821,610 samples, 0.06%)</title><rect x="0.1482%" y="629" width="0.0612%" height="15" fill="rgb(233,223,10)" fg:x="132645601" fg:w="54821610"/><text x="0.3982%" y="639.50"></text></g><g><title>core::fmt::builders::DebugTuple::field_with::{{closure}} (54,821,610 samples, 0.06%)</title><rect x="0.1482%" y="613" width="0.0612%" height="15" fill="rgb(215,21,27)" fg:x="132645601" fg:w="54821610"/><text x="0.3982%" y="623.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (45,325,693 samples, 0.05%)</title><rect x="0.1588%" y="597" width="0.0506%" height="15" fill="rgb(232,23,21)" fg:x="142141518" fg:w="45325693"/><text x="0.4088%" y="607.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (45,325,693 samples, 0.05%)</title><rect x="0.1588%" y="581" width="0.0506%" height="15" fill="rgb(244,5,23)" fg:x="142141518" fg:w="45325693"/><text x="0.4088%" y="591.50"></text></g><g><title>&lt;cad::entity::Point as core::fmt::Debug&gt;::fmt (45,325,693 samples, 0.05%)</title><rect x="0.1588%" y="565" width="0.0506%" height="15" fill="rgb(226,81,46)" fg:x="142141518" fg:w="45325693"/><text x="0.4088%" y="575.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field1_finish (45,325,693 samples, 0.05%)</title><rect x="0.1588%" y="549" width="0.0506%" height="15" fill="rgb(247,70,30)" fg:x="142141518" fg:w="45325693"/><text x="0.4088%" y="559.50"></text></g><g><title>core::fmt::builders::debug_struct_new (9,472,503 samples, 0.01%)</title><rect x="0.1989%" y="533" width="0.0106%" height="15" fill="rgb(212,68,19)" fg:x="177994708" fg:w="9472503"/><text x="0.4489%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (9,472,503 samples, 0.01%)</title><rect x="0.1989%" y="517" width="0.0106%" height="15" fill="rgb(240,187,13)" fg:x="177994708" fg:w="9472503"/><text x="0.4489%" y="527.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,472,503 samples, 0.01%)</title><rect x="0.1989%" y="501" width="0.0106%" height="15" fill="rgb(223,113,26)" fg:x="177994708" fg:w="9472503"/><text x="0.4489%" y="511.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,472,503 samples, 0.01%)</title><rect x="0.1989%" y="485" width="0.0106%" height="15" fill="rgb(206,192,2)" fg:x="177994708" fg:w="9472503"/><text x="0.4489%" y="495.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,472,503 samples, 0.01%)</title><rect x="0.1989%" y="469" width="0.0106%" height="15" fill="rgb(241,108,4)" fg:x="177994708" fg:w="9472503"/><text x="0.4489%" y="479.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,472,503 samples, 0.01%)</title><rect x="0.1989%" y="453" width="0.0106%" height="15" fill="rgb(247,173,49)" fg:x="177994708" fg:w="9472503"/><text x="0.4489%" y="463.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,472,503 samples, 0.01%)</title><rect x="0.1989%" y="437" width="0.0106%" height="15" fill="rgb(224,114,35)" fg:x="177994708" fg:w="9472503"/><text x="0.4489%" y="447.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,472,503 samples, 0.01%)</title><rect x="0.1989%" y="421" width="0.0106%" height="15" fill="rgb(245,159,27)" fg:x="177994708" fg:w="9472503"/><text x="0.4489%" y="431.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,472,503 samples, 0.01%)</title><rect x="0.1989%" y="405" width="0.0106%" height="15" fill="rgb(245,172,44)" fg:x="177994708" fg:w="9472503"/><text x="0.4489%" y="415.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,489,610 samples, 0.01%)</title><rect x="0.2252%" y="517" width="0.0106%" height="15" fill="rgb(236,23,11)" fg:x="201547015" fg:w="9489610"/><text x="0.4752%" y="527.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (14,842,070 samples, 0.02%)</title><rect x="0.2199%" y="533" width="0.0166%" height="15" fill="rgb(205,117,38)" fg:x="196845484" fg:w="14842070"/><text x="0.4699%" y="543.50"></text></g><g><title>&lt;cad::entity::FundamentalEntity as core::fmt::Debug&gt;::fmt (83,709,057 samples, 0.09%)</title><rect x="0.1482%" y="693" width="0.0935%" height="15" fill="rgb(237,72,25)" fg:x="132645601" fg:w="83709057"/><text x="0.3982%" y="703.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (83,709,057 samples, 0.09%)</title><rect x="0.1482%" y="677" width="0.0935%" height="15" fill="rgb(244,70,9)" fg:x="132645601" fg:w="83709057"/><text x="0.3982%" y="687.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish (28,887,447 samples, 0.03%)</title><rect x="0.2094%" y="661" width="0.0323%" height="15" fill="rgb(217,125,39)" fg:x="187467211" fg:w="28887447"/><text x="0.4594%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (28,887,447 samples, 0.03%)</title><rect x="0.2094%" y="645" width="0.0323%" height="15" fill="rgb(235,36,10)" fg:x="187467211" fg:w="28887447"/><text x="0.4594%" y="655.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish::{{closure}} (28,887,447 samples, 0.03%)</title><rect x="0.2094%" y="629" width="0.0323%" height="15" fill="rgb(251,123,47)" fg:x="187467211" fg:w="28887447"/><text x="0.4594%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (28,887,447 samples, 0.03%)</title><rect x="0.2094%" y="613" width="0.0323%" height="15" fill="rgb(221,13,13)" fg:x="187467211" fg:w="28887447"/><text x="0.4594%" y="623.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (28,887,447 samples, 0.03%)</title><rect x="0.2094%" y="597" width="0.0323%" height="15" fill="rgb(238,131,9)" fg:x="187467211" fg:w="28887447"/><text x="0.4594%" y="607.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (28,887,447 samples, 0.03%)</title><rect x="0.2094%" y="581" width="0.0323%" height="15" fill="rgb(211,50,8)" fg:x="187467211" fg:w="28887447"/><text x="0.4594%" y="591.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (24,155,860 samples, 0.03%)</title><rect x="0.2147%" y="565" width="0.0270%" height="15" fill="rgb(245,182,24)" fg:x="192198798" fg:w="24155860"/><text x="0.4647%" y="575.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (24,155,860 samples, 0.03%)</title><rect x="0.2147%" y="549" width="0.0270%" height="15" fill="rgb(242,14,37)" fg:x="192198798" fg:w="24155860"/><text x="0.4647%" y="559.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::fmt::Debug&gt;::fmt (9,297,853 samples, 0.01%)</title><rect x="0.2479%" y="661" width="0.0104%" height="15" fill="rgb(246,228,12)" fg:x="221845385" fg:w="9297853"/><text x="0.4979%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_str (9,292,610 samples, 0.01%)</title><rect x="0.2582%" y="597" width="0.0104%" height="15" fill="rgb(213,55,15)" fg:x="231143238" fg:w="9292610"/><text x="0.5082%" y="607.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,292,610 samples, 0.01%)</title><rect x="0.2582%" y="581" width="0.0104%" height="15" fill="rgb(209,9,3)" fg:x="231143238" fg:w="9292610"/><text x="0.5082%" y="591.50"></text></g><g><title>&lt;cad_frontend::ui::viewport::ViewportData as core::fmt::Debug&gt;::fmt (31,579,664 samples, 0.04%)</title><rect x="0.2417%" y="693" width="0.0353%" height="15" fill="rgb(230,59,30)" fg:x="216354658" fg:w="31579664"/><text x="0.4917%" y="703.50"></text></g><g><title>core::fmt::Formatter::debug_struct_fields_finish (31,579,664 samples, 0.04%)</title><rect x="0.2417%" y="677" width="0.0353%" height="15" fill="rgb(209,121,21)" fg:x="216354658" fg:w="31579664"/><text x="0.4917%" y="687.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (16,791,084 samples, 0.02%)</title><rect x="0.2582%" y="661" width="0.0188%" height="15" fill="rgb(220,109,13)" fg:x="231143238" fg:w="16791084"/><text x="0.5082%" y="671.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with (16,791,084 samples, 0.02%)</title><rect x="0.2582%" y="645" width="0.0188%" height="15" fill="rgb(232,18,1)" fg:x="231143238" fg:w="16791084"/><text x="0.5082%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (16,791,084 samples, 0.02%)</title><rect x="0.2582%" y="629" width="0.0188%" height="15" fill="rgb(215,41,42)" fg:x="231143238" fg:w="16791084"/><text x="0.5082%" y="639.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with::{{closure}} (16,791,084 samples, 0.02%)</title><rect x="0.2582%" y="613" width="0.0188%" height="15" fill="rgb(224,123,36)" fg:x="231143238" fg:w="16791084"/><text x="0.5082%" y="623.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (10,243,367 samples, 0.01%)</title><rect x="0.3058%" y="469" width="0.0114%" height="15" fill="rgb(240,125,3)" fg:x="273695969" fg:w="10243367"/><text x="0.5558%" y="479.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (33,158,215 samples, 0.04%)</title><rect x="0.2873%" y="517" width="0.0370%" height="15" fill="rgb(205,98,50)" fg:x="257146455" fg:w="33158215"/><text x="0.5373%" y="527.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (33,158,215 samples, 0.04%)</title><rect x="0.2873%" y="501" width="0.0370%" height="15" fill="rgb(205,185,37)" fg:x="257146455" fg:w="33158215"/><text x="0.5373%" y="511.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (23,731,905 samples, 0.03%)</title><rect x="0.2978%" y="485" width="0.0265%" height="15" fill="rgb(238,207,15)" fg:x="266572765" fg:w="23731905"/><text x="0.5478%" y="495.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (47,030,002 samples, 0.05%)</title><rect x="0.2770%" y="549" width="0.0525%" height="15" fill="rgb(213,199,42)" fg:x="247934322" fg:w="47030002"/><text x="0.5270%" y="559.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (47,030,002 samples, 0.05%)</title><rect x="0.2770%" y="533" width="0.0525%" height="15" fill="rgb(235,201,11)" fg:x="247934322" fg:w="47030002"/><text x="0.5270%" y="543.50"></text></g><g><title>core::fmt::Formatter::debug_list (51,803,746 samples, 0.06%)</title><rect x="0.2770%" y="645" width="0.0579%" height="15" fill="rgb(207,46,11)" fg:x="247934322" fg:w="51803746"/><text x="0.5270%" y="655.50"></text></g><g><title>core::fmt::builders::debug_list_new (51,803,746 samples, 0.06%)</title><rect x="0.2770%" y="629" width="0.0579%" height="15" fill="rgb(241,35,35)" fg:x="247934322" fg:w="51803746"/><text x="0.5270%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (51,803,746 samples, 0.06%)</title><rect x="0.2770%" y="613" width="0.0579%" height="15" fill="rgb(243,32,47)" fg:x="247934322" fg:w="51803746"/><text x="0.5270%" y="623.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (51,803,746 samples, 0.06%)</title><rect x="0.2770%" y="597" width="0.0579%" height="15" fill="rgb(247,202,23)" fg:x="247934322" fg:w="51803746"/><text x="0.5270%" y="607.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (51,803,746 samples, 0.06%)</title><rect x="0.2770%" y="581" width="0.0579%" height="15" fill="rgb(219,102,11)" fg:x="247934322" fg:w="51803746"/><text x="0.5270%" y="591.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (51,803,746 samples, 0.06%)</title><rect x="0.2770%" y="565" width="0.0579%" height="15" fill="rgb(243,110,44)" fg:x="247934322" fg:w="51803746"/><text x="0.5270%" y="575.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (14,591,034 samples, 0.02%)</title><rect x="0.3401%" y="453" width="0.0163%" height="15" fill="rgb(222,74,54)" fg:x="304372388" fg:w="14591034"/><text x="0.5901%" y="463.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (14,591,034 samples, 0.02%)</title><rect x="0.3401%" y="437" width="0.0163%" height="15" fill="rgb(216,99,12)" fg:x="304372388" fg:w="14591034"/><text x="0.5901%" y="447.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (14,591,034 samples, 0.02%)</title><rect x="0.3401%" y="421" width="0.0163%" height="15" fill="rgb(226,22,26)" fg:x="304372388" fg:w="14591034"/><text x="0.5901%" y="431.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,985,219 samples, 0.01%)</title><rect x="0.3452%" y="405" width="0.0112%" height="15" fill="rgb(217,163,10)" fg:x="308978203" fg:w="9985219"/><text x="0.5952%" y="415.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (19,924,763 samples, 0.02%)</title><rect x="0.3349%" y="469" width="0.0223%" height="15" fill="rgb(213,25,53)" fg:x="299738068" fg:w="19924763"/><text x="0.5849%" y="479.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (24,542,548 samples, 0.03%)</title><rect x="0.3349%" y="501" width="0.0274%" height="15" fill="rgb(252,105,26)" fg:x="299738068" fg:w="24542548"/><text x="0.5849%" y="511.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (24,542,548 samples, 0.03%)</title><rect x="0.3349%" y="485" width="0.0274%" height="15" fill="rgb(220,39,43)" fg:x="299738068" fg:w="24542548"/><text x="0.5849%" y="495.50"></text></g><g><title>core::fmt::builders::DebugList::entries (29,171,971 samples, 0.03%)</title><rect x="0.3349%" y="645" width="0.0326%" height="15" fill="rgb(229,68,48)" fg:x="299738068" fg:w="29171971"/><text x="0.5849%" y="655.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (29,171,971 samples, 0.03%)</title><rect x="0.3349%" y="629" width="0.0326%" height="15" fill="rgb(252,8,32)" fg:x="299738068" fg:w="29171971"/><text x="0.5849%" y="639.50"></text></g><g><title>core::fmt::builders::DebugInner::entry_with (29,171,971 samples, 0.03%)</title><rect x="0.3349%" y="613" width="0.0326%" height="15" fill="rgb(223,20,43)" fg:x="299738068" fg:w="29171971"/><text x="0.5849%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (29,171,971 samples, 0.03%)</title><rect x="0.3349%" y="597" width="0.0326%" height="15" fill="rgb(229,81,49)" fg:x="299738068" fg:w="29171971"/><text x="0.5849%" y="607.50"></text></g><g><title>core::fmt::builders::DebugInner::entry_with::{{closure}} (29,171,971 samples, 0.03%)</title><rect x="0.3349%" y="581" width="0.0326%" height="15" fill="rgb(236,28,36)" fg:x="299738068" fg:w="29171971"/><text x="0.5849%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (29,171,971 samples, 0.03%)</title><rect x="0.3349%" y="565" width="0.0326%" height="15" fill="rgb(249,185,26)" fg:x="299738068" fg:w="29171971"/><text x="0.5849%" y="575.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (29,171,971 samples, 0.03%)</title><rect x="0.3349%" y="549" width="0.0326%" height="15" fill="rgb(249,174,33)" fg:x="299738068" fg:w="29171971"/><text x="0.5849%" y="559.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (29,171,971 samples, 0.03%)</title><rect x="0.3349%" y="533" width="0.0326%" height="15" fill="rgb(233,201,37)" fg:x="299738068" fg:w="29171971"/><text x="0.5849%" y="543.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (29,171,971 samples, 0.03%)</title><rect x="0.3349%" y="517" width="0.0326%" height="15" fill="rgb(221,78,26)" fg:x="299738068" fg:w="29171971"/><text x="0.5849%" y="527.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (19,191,004 samples, 0.02%)</title><rect x="0.3683%" y="437" width="0.0214%" height="15" fill="rgb(250,127,30)" fg:x="329658489" fg:w="19191004"/><text x="0.6183%" y="447.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (24,842,833 samples, 0.03%)</title><rect x="0.3683%" y="469" width="0.0278%" height="15" fill="rgb(230,49,44)" fg:x="329658489" fg:w="24842833"/><text x="0.6183%" y="479.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (24,842,833 samples, 0.03%)</title><rect x="0.3683%" y="453" width="0.0278%" height="15" fill="rgb(229,67,23)" fg:x="329658489" fg:w="24842833"/><text x="0.6183%" y="463.50"></text></g><g><title>core::array::&lt;impl core::fmt::Debug for [T: N]&gt;::fmt (107,234,591 samples, 0.12%)</title><rect x="0.2770%" y="693" width="0.1198%" height="15" fill="rgb(249,83,47)" fg:x="247934322" fg:w="107234591"/><text x="0.5270%" y="703.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (107,234,591 samples, 0.12%)</title><rect x="0.2770%" y="677" width="0.1198%" height="15" fill="rgb(215,43,3)" fg:x="247934322" fg:w="107234591"/><text x="0.5270%" y="687.50"></text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (107,234,591 samples, 0.12%)</title><rect x="0.2770%" y="661" width="0.1198%" height="15" fill="rgb(238,154,13)" fg:x="247934322" fg:w="107234591"/><text x="0.5270%" y="671.50"></text></g><g><title>core::fmt::builders::DebugList::finish (26,258,874 samples, 0.03%)</title><rect x="0.3675%" y="645" width="0.0293%" height="15" fill="rgb(219,56,2)" fg:x="328910039" fg:w="26258874"/><text x="0.6175%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (26,258,874 samples, 0.03%)</title><rect x="0.3675%" y="629" width="0.0293%" height="15" fill="rgb(233,0,4)" fg:x="328910039" fg:w="26258874"/><text x="0.6175%" y="639.50"></text></g><g><title>core::fmt::builders::DebugList::finish::{{closure}} (26,258,874 samples, 0.03%)</title><rect x="0.3675%" y="613" width="0.0293%" height="15" fill="rgb(235,30,7)" fg:x="328910039" fg:w="26258874"/><text x="0.6175%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_str (26,258,874 samples, 0.03%)</title><rect x="0.3675%" y="597" width="0.0293%" height="15" fill="rgb(250,79,13)" fg:x="328910039" fg:w="26258874"/><text x="0.6175%" y="607.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (26,258,874 samples, 0.03%)</title><rect x="0.3675%" y="581" width="0.0293%" height="15" fill="rgb(211,146,34)" fg:x="328910039" fg:w="26258874"/><text x="0.6175%" y="591.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (26,258,874 samples, 0.03%)</title><rect x="0.3675%" y="565" width="0.0293%" height="15" fill="rgb(228,22,38)" fg:x="328910039" fg:w="26258874"/><text x="0.6175%" y="575.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (25,510,424 samples, 0.03%)</title><rect x="0.3683%" y="549" width="0.0285%" height="15" fill="rgb(235,168,5)" fg:x="329658489" fg:w="25510424"/><text x="0.6183%" y="559.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (25,510,424 samples, 0.03%)</title><rect x="0.3683%" y="533" width="0.0285%" height="15" fill="rgb(221,155,16)" fg:x="329658489" fg:w="25510424"/><text x="0.6183%" y="543.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (25,510,424 samples, 0.03%)</title><rect x="0.3683%" y="517" width="0.0285%" height="15" fill="rgb(215,215,53)" fg:x="329658489" fg:w="25510424"/><text x="0.6183%" y="527.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (25,510,424 samples, 0.03%)</title><rect x="0.3683%" y="501" width="0.0285%" height="15" fill="rgb(223,4,10)" fg:x="329658489" fg:w="25510424"/><text x="0.6183%" y="511.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (25,510,424 samples, 0.03%)</title><rect x="0.3683%" y="485" width="0.0285%" height="15" fill="rgb(234,103,6)" fg:x="329658489" fg:w="25510424"/><text x="0.6183%" y="495.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (15,333,516 samples, 0.02%)</title><rect x="0.4132%" y="565" width="0.0171%" height="15" fill="rgb(227,97,0)" fg:x="369809105" fg:w="15333516"/><text x="0.6632%" y="575.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (14,719,271 samples, 0.02%)</title><rect x="0.4138%" y="549" width="0.0164%" height="15" fill="rgb(234,150,53)" fg:x="370423350" fg:w="14719271"/><text x="0.6638%" y="559.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (10,122,468 samples, 0.01%)</title><rect x="0.4190%" y="533" width="0.0113%" height="15" fill="rgb(228,201,54)" fg:x="375020153" fg:w="10122468"/><text x="0.6690%" y="543.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (10,122,468 samples, 0.01%)</title><rect x="0.4190%" y="517" width="0.0113%" height="15" fill="rgb(222,22,37)" fg:x="375020153" fg:w="10122468"/><text x="0.6690%" y="527.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (10,122,468 samples, 0.01%)</title><rect x="0.4190%" y="501" width="0.0113%" height="15" fill="rgb(237,53,32)" fg:x="375020153" fg:w="10122468"/><text x="0.6690%" y="511.50"></text></g><g><title>core::slice::memchr::memchr (9,469,296 samples, 0.01%)</title><rect x="0.4197%" y="485" width="0.0106%" height="15" fill="rgb(233,25,53)" fg:x="375673325" fg:w="9469296"/><text x="0.6697%" y="495.50"></text></g><g><title>core::slice::memchr::memchr_naive (9,469,296 samples, 0.01%)</title><rect x="0.4197%" y="469" width="0.0106%" height="15" fill="rgb(210,40,34)" fg:x="375673325" fg:w="9469296"/><text x="0.6697%" y="479.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (21,019,984 samples, 0.02%)</title><rect x="0.4074%" y="613" width="0.0235%" height="15" fill="rgb(241,220,44)" fg:x="364624141" fg:w="21019984"/><text x="0.6574%" y="623.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (21,019,984 samples, 0.02%)</title><rect x="0.4074%" y="597" width="0.0235%" height="15" fill="rgb(235,28,35)" fg:x="364624141" fg:w="21019984"/><text x="0.6574%" y="607.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (16,384,633 samples, 0.02%)</title><rect x="0.4125%" y="581" width="0.0183%" height="15" fill="rgb(210,56,17)" fg:x="369259492" fg:w="16384633"/><text x="0.6625%" y="591.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (35,282,014 samples, 0.04%)</title><rect x="0.3968%" y="677" width="0.0394%" height="15" fill="rgb(224,130,29)" fg:x="355168913" fg:w="35282014"/><text x="0.6468%" y="687.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (35,282,014 samples, 0.04%)</title><rect x="0.3968%" y="661" width="0.0394%" height="15" fill="rgb(235,212,8)" fg:x="355168913" fg:w="35282014"/><text x="0.6468%" y="671.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (35,282,014 samples, 0.04%)</title><rect x="0.3968%" y="645" width="0.0394%" height="15" fill="rgb(223,33,50)" fg:x="355168913" fg:w="35282014"/><text x="0.6468%" y="655.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (30,466,963 samples, 0.03%)</title><rect x="0.4022%" y="629" width="0.0340%" height="15" fill="rgb(219,149,13)" fg:x="359983964" fg:w="30466963"/><text x="0.6522%" y="639.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (368,830,302 samples, 0.41%)</title><rect x="0.0250%" y="709" width="0.4121%" height="15" fill="rgb(250,156,29)" fg:x="22406014" fg:w="368830302"/><text x="0.2750%" y="719.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::Debug for u16&gt;::fmt (36,067,403 samples, 0.04%)</title><rect x="0.3968%" y="693" width="0.0403%" height="15" fill="rgb(216,193,19)" fg:x="355168913" fg:w="36067403"/><text x="0.6468%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (17,322,620 samples, 0.02%)</title><rect x="0.4371%" y="709" width="0.0194%" height="15" fill="rgb(216,135,14)" fg:x="391236316" fg:w="17322620"/><text x="0.6871%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_str (13,953,273 samples, 0.02%)</title><rect x="0.4724%" y="613" width="0.0156%" height="15" fill="rgb(241,47,5)" fg:x="422801293" fg:w="13953273"/><text x="0.7224%" y="623.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (13,953,273 samples, 0.02%)</title><rect x="0.4724%" y="597" width="0.0156%" height="15" fill="rgb(233,42,35)" fg:x="422801293" fg:w="13953273"/><text x="0.7224%" y="607.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (13,953,273 samples, 0.02%)</title><rect x="0.4724%" y="581" width="0.0156%" height="15" fill="rgb(231,13,6)" fg:x="422801293" fg:w="13953273"/><text x="0.7224%" y="591.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (13,953,273 samples, 0.02%)</title><rect x="0.4724%" y="565" width="0.0156%" height="15" fill="rgb(207,181,40)" fg:x="422801293" fg:w="13953273"/><text x="0.7224%" y="575.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,323,217 samples, 0.01%)</title><rect x="0.4775%" y="549" width="0.0104%" height="15" fill="rgb(254,173,49)" fg:x="427431349" fg:w="9323217"/><text x="0.7275%" y="559.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (9,323,217 samples, 0.01%)</title><rect x="0.4775%" y="533" width="0.0104%" height="15" fill="rgb(221,1,38)" fg:x="427431349" fg:w="9323217"/><text x="0.7275%" y="543.50"></text></g><g><title>&lt;cad::sketch::Sketch as core::fmt::Debug&gt;::fmt (21,493,270 samples, 0.02%)</title><rect x="0.4713%" y="709" width="0.0240%" height="15" fill="rgb(206,124,46)" fg:x="421858419" fg:w="21493270"/><text x="0.7213%" y="719.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field5_finish (21,493,270 samples, 0.02%)</title><rect x="0.4713%" y="693" width="0.0240%" height="15" fill="rgb(249,21,11)" fg:x="421858419" fg:w="21493270"/><text x="0.7213%" y="703.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (20,550,396 samples, 0.02%)</title><rect x="0.4724%" y="677" width="0.0230%" height="15" fill="rgb(222,201,40)" fg:x="422801293" fg:w="20550396"/><text x="0.7224%" y="687.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with (20,550,396 samples, 0.02%)</title><rect x="0.4724%" y="661" width="0.0230%" height="15" fill="rgb(235,61,29)" fg:x="422801293" fg:w="20550396"/><text x="0.7224%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (20,550,396 samples, 0.02%)</title><rect x="0.4724%" y="645" width="0.0230%" height="15" fill="rgb(219,207,3)" fg:x="422801293" fg:w="20550396"/><text x="0.7224%" y="655.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with::{{closure}} (20,550,396 samples, 0.02%)</title><rect x="0.4724%" y="629" width="0.0230%" height="15" fill="rgb(222,56,46)" fg:x="422801293" fg:w="20550396"/><text x="0.7224%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14,262,039 samples, 0.02%)</title><rect x="0.4953%" y="709" width="0.0159%" height="15" fill="rgb(239,76,54)" fg:x="443351689" fg:w="14262039"/><text x="0.7453%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,348,952 samples, 0.01%)</title><rect x="0.5113%" y="693" width="0.0104%" height="15" fill="rgb(231,124,27)" fg:x="457613728" fg:w="9348952"/><text x="0.7613%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (9,348,952 samples, 0.01%)</title><rect x="0.5113%" y="677" width="0.0104%" height="15" fill="rgb(249,195,6)" fg:x="457613728" fg:w="9348952"/><text x="0.7613%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9,348,952 samples, 0.01%)</title><rect x="0.5113%" y="661" width="0.0104%" height="15" fill="rgb(237,174,47)" fg:x="457613728" fg:w="9348952"/><text x="0.7613%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9,348,952 samples, 0.01%)</title><rect x="0.5113%" y="645" width="0.0104%" height="15" fill="rgb(206,201,31)" fg:x="457613728" fg:w="9348952"/><text x="0.7613%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9,348,952 samples, 0.01%)</title><rect x="0.5113%" y="629" width="0.0104%" height="15" fill="rgb(231,57,52)" fg:x="457613728" fg:w="9348952"/><text x="0.7613%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9,348,952 samples, 0.01%)</title><rect x="0.5113%" y="613" width="0.0104%" height="15" fill="rgb(248,177,22)" fg:x="457613728" fg:w="9348952"/><text x="0.7613%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14,113,879 samples, 0.02%)</title><rect x="0.5113%" y="709" width="0.0158%" height="15" fill="rgb(215,211,37)" fg:x="457613728" fg:w="14113879"/><text x="0.7613%" y="719.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (9,369,348 samples, 0.01%)</title><rect x="0.5299%" y="709" width="0.0105%" height="15" fill="rgb(241,128,51)" fg:x="474311644" fg:w="9369348"/><text x="0.7799%" y="719.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (9,369,348 samples, 0.01%)</title><rect x="0.5299%" y="693" width="0.0105%" height="15" fill="rgb(227,165,31)" fg:x="474311644" fg:w="9369348"/><text x="0.7799%" y="703.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (9,369,348 samples, 0.01%)</title><rect x="0.5299%" y="677" width="0.0105%" height="15" fill="rgb(228,167,24)" fg:x="474311644" fg:w="9369348"/><text x="0.7799%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (9,369,348 samples, 0.01%)</title><rect x="0.5299%" y="661" width="0.0105%" height="15" fill="rgb(228,143,12)" fg:x="474311644" fg:w="9369348"/><text x="0.7799%" y="671.50"></text></g><g><title>core::fmt::write (9,369,348 samples, 0.01%)</title><rect x="0.5299%" y="645" width="0.0105%" height="15" fill="rgb(249,149,8)" fg:x="474311644" fg:w="9369348"/><text x="0.7799%" y="655.50"></text></g><g><title>&lt;rust_ui::geometry::Vector&lt;T&gt; as core::fmt::Debug&gt;::fmt (14,782,415 samples, 0.02%)</title><rect x="0.5455%" y="709" width="0.0165%" height="15" fill="rgb(243,35,44)" fg:x="488260184" fg:w="14782415"/><text x="0.7955%" y="719.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (10,152,899 samples, 0.01%)</title><rect x="0.5507%" y="693" width="0.0113%" height="15" fill="rgb(246,89,9)" fg:x="492889700" fg:w="10152899"/><text x="0.8007%" y="703.50"></text></g><g><title>[unknown] (17,799,836 samples, 0.02%)</title><rect x="0.5620%" y="661" width="0.0199%" height="15" fill="rgb(233,213,13)" fg:x="503042599" fg:w="17799836"/><text x="0.8120%" y="671.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (17,799,836 samples, 0.02%)</title><rect x="0.5620%" y="645" width="0.0199%" height="15" fill="rgb(233,141,41)" fg:x="503042599" fg:w="17799836"/><text x="0.8120%" y="655.50"></text></g><g><title>&lt;cad::entity::EntityId as core::fmt::Debug&gt;::fmt (17,799,836 samples, 0.02%)</title><rect x="0.5620%" y="629" width="0.0199%" height="15" fill="rgb(239,167,4)" fg:x="503042599" fg:w="17799836"/><text x="0.8120%" y="639.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (17,799,836 samples, 0.02%)</title><rect x="0.5620%" y="613" width="0.0199%" height="15" fill="rgb(209,217,16)" fg:x="503042599" fg:w="17799836"/><text x="0.8120%" y="623.50"></text></g><g><title>core::fmt::builders::debug_tuple_new (12,310,045 samples, 0.01%)</title><rect x="0.5681%" y="597" width="0.0138%" height="15" fill="rgb(219,88,35)" fg:x="508532390" fg:w="12310045"/><text x="0.8181%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_str (12,310,045 samples, 0.01%)</title><rect x="0.5681%" y="581" width="0.0138%" height="15" fill="rgb(220,193,23)" fg:x="508532390" fg:w="12310045"/><text x="0.8181%" y="591.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (12,310,045 samples, 0.01%)</title><rect x="0.5681%" y="565" width="0.0138%" height="15" fill="rgb(230,90,52)" fg:x="508532390" fg:w="12310045"/><text x="0.8181%" y="575.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (12,310,045 samples, 0.01%)</title><rect x="0.5681%" y="549" width="0.0138%" height="15" fill="rgb(252,106,19)" fg:x="508532390" fg:w="12310045"/><text x="0.8181%" y="559.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (11,595,106 samples, 0.01%)</title><rect x="0.5689%" y="533" width="0.0130%" height="15" fill="rgb(206,74,20)" fg:x="509247329" fg:w="11595106"/><text x="0.8189%" y="543.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (11,595,106 samples, 0.01%)</title><rect x="0.5689%" y="517" width="0.0130%" height="15" fill="rgb(230,138,44)" fg:x="509247329" fg:w="11595106"/><text x="0.8189%" y="527.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (11,595,106 samples, 0.01%)</title><rect x="0.5689%" y="501" width="0.0130%" height="15" fill="rgb(235,182,43)" fg:x="509247329" fg:w="11595106"/><text x="0.8189%" y="511.50"></text></g><g><title>core::fmt::builders::DebugMap::entries (23,867,988 samples, 0.03%)</title><rect x="0.5620%" y="693" width="0.0267%" height="15" fill="rgb(242,16,51)" fg:x="503042599" fg:w="23867988"/><text x="0.8120%" y="703.50"></text></g><g><title>core::fmt::builders::DebugMap::entry (23,867,988 samples, 0.03%)</title><rect x="0.5620%" y="677" width="0.0267%" height="15" fill="rgb(248,9,4)" fg:x="503042599" fg:w="23867988"/><text x="0.8120%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::fmt::Debug&gt;::fmt (28,602,934 samples, 0.03%)</title><rect x="0.5620%" y="709" width="0.0320%" height="15" fill="rgb(210,31,22)" fg:x="503042599" fg:w="28602934"/><text x="0.8120%" y="719.50"></text></g><g><title>&lt;taffy::geometry::Rect&lt;T&gt; as taffy::util::resolve::ResolveOrZero&lt;core::option::Option&lt;f32&gt;,taffy::geometry::Rect&lt;Out&gt;&gt;&gt;::resolve_or_zero (9,416,871 samples, 0.01%)</title><rect x="0.5965%" y="709" width="0.0105%" height="15" fill="rgb(239,54,39)" fg:x="533938373" fg:w="9416871"/><text x="0.8465%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (23,146,730 samples, 0.03%)</title><rect x="0.6437%" y="677" width="0.0259%" height="15" fill="rgb(230,99,41)" fg:x="576148126" fg:w="23146730"/><text x="0.8937%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (23,146,730 samples, 0.03%)</title><rect x="0.6437%" y="661" width="0.0259%" height="15" fill="rgb(253,106,12)" fg:x="576148126" fg:w="23146730"/><text x="0.8937%" y="671.50"></text></g><g><title>&lt;&amp;core::option::Option&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (9,353,990 samples, 0.01%)</title><rect x="0.6591%" y="645" width="0.0105%" height="15" fill="rgb(213,46,41)" fg:x="589940866" fg:w="9353990"/><text x="0.9091%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::iter (9,353,990 samples, 0.01%)</title><rect x="0.6591%" y="629" width="0.0105%" height="15" fill="rgb(215,133,35)" fg:x="589940866" fg:w="9353990"/><text x="0.9091%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (9,353,990 samples, 0.01%)</title><rect x="0.6591%" y="613" width="0.0105%" height="15" fill="rgb(213,28,5)" fg:x="589940866" fg:w="9353990"/><text x="0.9091%" y="623.50"></text></g><g><title>&lt;taffy::tree::taffy_tree::TaffyView&lt;NodeContext,MeasureFunction&gt; as taffy::tree::traits::CacheTree&gt;::cache_get (60,644,212 samples, 0.07%)</title><rect x="0.6070%" y="709" width="0.0678%" height="15" fill="rgb(215,77,49)" fg:x="543355244" fg:w="60644212"/><text x="0.8570%" y="719.50"></text></g><g><title>taffy::tree::cache::Cache::get (60,644,212 samples, 0.07%)</title><rect x="0.6070%" y="693" width="0.0678%" height="15" fill="rgb(248,100,22)" fg:x="543355244" fg:w="60644212"/><text x="0.8570%" y="703.50"></text></g><g><title>&lt;taffy::tree::taffy_tree::TaffyView&lt;NodeContext,MeasureFunction&gt; as taffy::tree::traits::LayoutPartialTree&gt;::compute_child_layout::{{closure}} (9,350,348 samples, 0.01%)</title><rect x="0.6748%" y="709" width="0.0104%" height="15" fill="rgb(208,67,9)" fg:x="603999456" fg:w="9350348"/><text x="0.9248%" y="719.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (9,361,875 samples, 0.01%)</title><rect x="0.6852%" y="693" width="0.0105%" height="15" fill="rgb(219,133,21)" fg:x="613349804" fg:w="9361875"/><text x="0.9352%" y="703.50"></text></g><g><title>core::fmt::builders::DebugList::entries (9,312,008 samples, 0.01%)</title><rect x="0.7010%" y="437" width="0.0104%" height="15" fill="rgb(246,46,29)" fg:x="627433704" fg:w="9312008"/><text x="0.9510%" y="447.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (9,312,008 samples, 0.01%)</title><rect x="0.7010%" y="421" width="0.0104%" height="15" fill="rgb(246,185,52)" fg:x="627433704" fg:w="9312008"/><text x="0.9510%" y="431.50"></text></g><g><title>core::fmt::builders::DebugInner::entry_with (9,312,008 samples, 0.01%)</title><rect x="0.7010%" y="405" width="0.0104%" height="15" fill="rgb(252,136,11)" fg:x="627433704" fg:w="9312008"/><text x="0.9510%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (9,312,008 samples, 0.01%)</title><rect x="0.7010%" y="389" width="0.0104%" height="15" fill="rgb(219,138,53)" fg:x="627433704" fg:w="9312008"/><text x="0.9510%" y="399.50"></text></g><g><title>core::fmt::builders::DebugInner::entry_with::{{closure}} (9,312,008 samples, 0.01%)</title><rect x="0.7010%" y="373" width="0.0104%" height="15" fill="rgb(211,51,23)" fg:x="627433704" fg:w="9312008"/><text x="0.9510%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (9,312,008 samples, 0.01%)</title><rect x="0.7010%" y="357" width="0.0104%" height="15" fill="rgb(247,221,28)" fg:x="627433704" fg:w="9312008"/><text x="0.9510%" y="367.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,312,008 samples, 0.01%)</title><rect x="0.7010%" y="341" width="0.0104%" height="15" fill="rgb(251,222,45)" fg:x="627433704" fg:w="9312008"/><text x="0.9510%" y="351.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,312,008 samples, 0.01%)</title><rect x="0.7010%" y="325" width="0.0104%" height="15" fill="rgb(217,162,53)" fg:x="627433704" fg:w="9312008"/><text x="0.9510%" y="335.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,312,008 samples, 0.01%)</title><rect x="0.7010%" y="309" width="0.0104%" height="15" fill="rgb(229,93,14)" fg:x="627433704" fg:w="9312008"/><text x="0.9510%" y="319.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,312,008 samples, 0.01%)</title><rect x="0.7010%" y="293" width="0.0104%" height="15" fill="rgb(209,67,49)" fg:x="627433704" fg:w="9312008"/><text x="0.9510%" y="303.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,312,008 samples, 0.01%)</title><rect x="0.7010%" y="277" width="0.0104%" height="15" fill="rgb(213,87,29)" fg:x="627433704" fg:w="9312008"/><text x="0.9510%" y="287.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,312,008 samples, 0.01%)</title><rect x="0.7010%" y="261" width="0.0104%" height="15" fill="rgb(205,151,52)" fg:x="627433704" fg:w="9312008"/><text x="0.9510%" y="271.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,312,008 samples, 0.01%)</title><rect x="0.7010%" y="245" width="0.0104%" height="15" fill="rgb(253,215,39)" fg:x="627433704" fg:w="9312008"/><text x="0.9510%" y="255.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,312,008 samples, 0.01%)</title><rect x="0.7010%" y="229" width="0.0104%" height="15" fill="rgb(221,220,41)" fg:x="627433704" fg:w="9312008"/><text x="0.9510%" y="239.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,312,008 samples, 0.01%)</title><rect x="0.7010%" y="213" width="0.0104%" height="15" fill="rgb(218,133,21)" fg:x="627433704" fg:w="9312008"/><text x="0.9510%" y="223.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,312,008 samples, 0.01%)</title><rect x="0.7010%" y="197" width="0.0104%" height="15" fill="rgb(221,193,43)" fg:x="627433704" fg:w="9312008"/><text x="0.9510%" y="207.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::fmt::Debug&gt;::fmt (15,977,321 samples, 0.02%)</title><rect x="0.7010%" y="517" width="0.0179%" height="15" fill="rgb(240,128,52)" fg:x="627433704" fg:w="15977321"/><text x="0.9510%" y="527.50"></text></g><g><title>&lt;nalgebra::base::array_storage::ArrayStorage&lt;T,_,_&gt; as core::fmt::Debug&gt;::fmt (15,977,321 samples, 0.02%)</title><rect x="0.7010%" y="501" width="0.0179%" height="15" fill="rgb(253,114,12)" fg:x="627433704" fg:w="15977321"/><text x="0.9510%" y="511.50"></text></g><g><title>core::array::&lt;impl core::fmt::Debug for [T: N]&gt;::fmt (15,977,321 samples, 0.02%)</title><rect x="0.7010%" y="485" width="0.0179%" height="15" fill="rgb(215,223,47)" fg:x="627433704" fg:w="15977321"/><text x="0.9510%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (15,977,321 samples, 0.02%)</title><rect x="0.7010%" y="469" width="0.0179%" height="15" fill="rgb(248,225,23)" fg:x="627433704" fg:w="15977321"/><text x="0.9510%" y="479.50"></text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (15,977,321 samples, 0.02%)</title><rect x="0.7010%" y="453" width="0.0179%" height="15" fill="rgb(250,108,0)" fg:x="627433704" fg:w="15977321"/><text x="0.9510%" y="463.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,378,548 samples, 0.01%)</title><rect x="0.7249%" y="325" width="0.0105%" height="15" fill="rgb(228,208,7)" fg:x="648797547" fg:w="9378548"/><text x="0.9749%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_str (15,256,525 samples, 0.02%)</title><rect x="0.7188%" y="453" width="0.0170%" height="15" fill="rgb(244,45,10)" fg:x="643411025" fg:w="15256525"/><text x="0.9688%" y="463.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (15,256,525 samples, 0.02%)</title><rect x="0.7188%" y="437" width="0.0170%" height="15" fill="rgb(207,125,25)" fg:x="643411025" fg:w="15256525"/><text x="0.9688%" y="447.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (15,256,525 samples, 0.02%)</title><rect x="0.7188%" y="421" width="0.0170%" height="15" fill="rgb(210,195,18)" fg:x="643411025" fg:w="15256525"/><text x="0.9688%" y="431.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (15,256,525 samples, 0.02%)</title><rect x="0.7188%" y="405" width="0.0170%" height="15" fill="rgb(249,80,12)" fg:x="643411025" fg:w="15256525"/><text x="0.9688%" y="415.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (15,256,525 samples, 0.02%)</title><rect x="0.7188%" y="389" width="0.0170%" height="15" fill="rgb(221,65,9)" fg:x="643411025" fg:w="15256525"/><text x="0.9688%" y="399.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (15,256,525 samples, 0.02%)</title><rect x="0.7188%" y="373" width="0.0170%" height="15" fill="rgb(235,49,36)" fg:x="643411025" fg:w="15256525"/><text x="0.9688%" y="383.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (15,256,525 samples, 0.02%)</title><rect x="0.7188%" y="357" width="0.0170%" height="15" fill="rgb(225,32,20)" fg:x="643411025" fg:w="15256525"/><text x="0.9688%" y="367.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (14,524,959 samples, 0.02%)</title><rect x="0.7197%" y="341" width="0.0162%" height="15" fill="rgb(215,141,46)" fg:x="644142591" fg:w="14524959"/><text x="0.9697%" y="351.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (10,066,188 samples, 0.01%)</title><rect x="0.7465%" y="245" width="0.0112%" height="15" fill="rgb(250,160,47)" fg:x="668146946" fg:w="10066188"/><text x="0.9965%" y="255.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (10,066,188 samples, 0.01%)</title><rect x="0.7465%" y="229" width="0.0112%" height="15" fill="rgb(216,222,40)" fg:x="668146946" fg:w="10066188"/><text x="0.9965%" y="239.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (10,066,188 samples, 0.01%)</title><rect x="0.7465%" y="213" width="0.0112%" height="15" fill="rgb(234,217,39)" fg:x="668146946" fg:w="10066188"/><text x="0.9965%" y="223.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (35,598,657 samples, 0.04%)</title><rect x="0.7188%" y="517" width="0.0398%" height="15" fill="rgb(207,178,40)" fg:x="643411025" fg:w="35598657"/><text x="0.9688%" y="527.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with (35,598,657 samples, 0.04%)</title><rect x="0.7188%" y="501" width="0.0398%" height="15" fill="rgb(221,136,13)" fg:x="643411025" fg:w="35598657"/><text x="0.9688%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (35,598,657 samples, 0.04%)</title><rect x="0.7188%" y="485" width="0.0398%" height="15" fill="rgb(249,199,10)" fg:x="643411025" fg:w="35598657"/><text x="0.9688%" y="495.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with::{{closure}} (35,598,657 samples, 0.04%)</title><rect x="0.7188%" y="469" width="0.0398%" height="15" fill="rgb(249,222,13)" fg:x="643411025" fg:w="35598657"/><text x="0.9688%" y="479.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (20,342,132 samples, 0.02%)</title><rect x="0.7359%" y="453" width="0.0227%" height="15" fill="rgb(244,185,38)" fg:x="658667550" fg:w="20342132"/><text x="0.9859%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (20,342,132 samples, 0.02%)</title><rect x="0.7359%" y="437" width="0.0227%" height="15" fill="rgb(236,202,9)" fg:x="658667550" fg:w="20342132"/><text x="0.9859%" y="447.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::fmt::Debug&gt;::fmt (20,342,132 samples, 0.02%)</title><rect x="0.7359%" y="421" width="0.0227%" height="15" fill="rgb(250,229,37)" fg:x="658667550" fg:w="20342132"/><text x="0.9859%" y="431.50"></text></g><g><title>&lt;nalgebra::base::array_storage::ArrayStorage&lt;T,_,_&gt; as core::fmt::Debug&gt;::fmt (20,342,132 samples, 0.02%)</title><rect x="0.7359%" y="405" width="0.0227%" height="15" fill="rgb(206,174,23)" fg:x="658667550" fg:w="20342132"/><text x="0.9859%" y="415.50"></text></g><g><title>core::array::&lt;impl core::fmt::Debug for [T: N]&gt;::fmt (20,342,132 samples, 0.02%)</title><rect x="0.7359%" y="389" width="0.0227%" height="15" fill="rgb(211,33,43)" fg:x="658667550" fg:w="20342132"/><text x="0.9859%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (20,342,132 samples, 0.02%)</title><rect x="0.7359%" y="373" width="0.0227%" height="15" fill="rgb(245,58,50)" fg:x="658667550" fg:w="20342132"/><text x="0.9859%" y="383.50"></text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (20,342,132 samples, 0.02%)</title><rect x="0.7359%" y="357" width="0.0227%" height="15" fill="rgb(244,68,36)" fg:x="658667550" fg:w="20342132"/><text x="0.9859%" y="367.50"></text></g><g><title>core::fmt::builders::DebugList::finish (10,862,736 samples, 0.01%)</title><rect x="0.7465%" y="341" width="0.0121%" height="15" fill="rgb(232,229,15)" fg:x="668146946" fg:w="10862736"/><text x="0.9965%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (10,862,736 samples, 0.01%)</title><rect x="0.7465%" y="325" width="0.0121%" height="15" fill="rgb(254,30,23)" fg:x="668146946" fg:w="10862736"/><text x="0.9965%" y="335.50"></text></g><g><title>core::fmt::builders::DebugList::finish::{{closure}} (10,862,736 samples, 0.01%)</title><rect x="0.7465%" y="309" width="0.0121%" height="15" fill="rgb(235,160,14)" fg:x="668146946" fg:w="10862736"/><text x="0.9965%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_str (10,862,736 samples, 0.01%)</title><rect x="0.7465%" y="293" width="0.0121%" height="15" fill="rgb(212,155,44)" fg:x="668146946" fg:w="10862736"/><text x="0.9965%" y="303.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (10,862,736 samples, 0.01%)</title><rect x="0.7465%" y="277" width="0.0121%" height="15" fill="rgb(226,2,50)" fg:x="668146946" fg:w="10862736"/><text x="0.9965%" y="287.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (10,862,736 samples, 0.01%)</title><rect x="0.7465%" y="261" width="0.0121%" height="15" fill="rgb(234,177,6)" fg:x="668146946" fg:w="10862736"/><text x="0.9965%" y="271.50"></text></g><g><title>[cad-frontend] (61,135,635 samples, 0.07%)</title><rect x="0.6957%" y="693" width="0.0683%" height="15" fill="rgb(217,24,9)" fg:x="622711679" fg:w="61135635"/><text x="0.9457%" y="703.50"></text></g><g><title>[cad-frontend] (61,135,635 samples, 0.07%)</title><rect x="0.6957%" y="677" width="0.0683%" height="15" fill="rgb(220,13,46)" fg:x="622711679" fg:w="61135635"/><text x="0.9457%" y="687.50"></text></g><g><title>[cad-frontend] (56,413,610 samples, 0.06%)</title><rect x="0.7010%" y="661" width="0.0630%" height="15" fill="rgb(239,221,27)" fg:x="627433704" fg:w="56413610"/><text x="0.9510%" y="671.50"></text></g><g><title>[cad-frontend] (56,413,610 samples, 0.06%)</title><rect x="0.7010%" y="645" width="0.0630%" height="15" fill="rgb(222,198,25)" fg:x="627433704" fg:w="56413610"/><text x="0.9510%" y="655.50"></text></g><g><title>[cad-frontend] (56,413,610 samples, 0.06%)</title><rect x="0.7010%" y="629" width="0.0630%" height="15" fill="rgb(211,99,13)" fg:x="627433704" fg:w="56413610"/><text x="0.9510%" y="639.50"></text></g><g><title>[cad-frontend] (56,413,610 samples, 0.06%)</title><rect x="0.7010%" y="613" width="0.0630%" height="15" fill="rgb(232,111,31)" fg:x="627433704" fg:w="56413610"/><text x="0.9510%" y="623.50"></text></g><g><title>[cad-frontend] (56,413,610 samples, 0.06%)</title><rect x="0.7010%" y="597" width="0.0630%" height="15" fill="rgb(245,82,37)" fg:x="627433704" fg:w="56413610"/><text x="0.9510%" y="607.50"></text></g><g><title>[cad-frontend] (56,413,610 samples, 0.06%)</title><rect x="0.7010%" y="581" width="0.0630%" height="15" fill="rgb(227,149,46)" fg:x="627433704" fg:w="56413610"/><text x="0.9510%" y="591.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (56,413,610 samples, 0.06%)</title><rect x="0.7010%" y="565" width="0.0630%" height="15" fill="rgb(218,36,50)" fg:x="627433704" fg:w="56413610"/><text x="0.9510%" y="575.50"></text></g><g><title>&lt;cad::entity::Line as core::fmt::Debug&gt;::fmt (56,413,610 samples, 0.06%)</title><rect x="0.7010%" y="549" width="0.0630%" height="15" fill="rgb(226,80,48)" fg:x="627433704" fg:w="56413610"/><text x="0.9510%" y="559.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (56,413,610 samples, 0.06%)</title><rect x="0.7010%" y="533" width="0.0630%" height="15" fill="rgb(238,224,15)" fg:x="627433704" fg:w="56413610"/><text x="0.9510%" y="543.50"></text></g><g><title>[cad-frontend] (88,431,343 samples, 0.10%)</title><rect x="0.6852%" y="709" width="0.0988%" height="15" fill="rgb(241,136,10)" fg:x="613349804" fg:w="88431343"/><text x="0.9352%" y="719.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (35,748,850 samples, 0.04%)</title><rect x="0.7904%" y="709" width="0.0399%" height="15" fill="rgb(208,32,45)" fg:x="707462676" fg:w="35748850"/><text x="1.0404%" y="719.50"></text></g><g><title>[libGLdispatch.so.0.0.0] (59,642,193 samples, 0.07%)</title><rect x="0.8303%" y="709" width="0.0666%" height="15" fill="rgb(207,135,9)" fg:x="743211526" fg:w="59642193"/><text x="1.0803%" y="719.50"></text></g><g><title>[libc.so.6] (23,278,719 samples, 0.03%)</title><rect x="1.0436%" y="693" width="0.0260%" height="15" fill="rgb(206,86,44)" fg:x="934117026" fg:w="23278719"/><text x="1.2936%" y="703.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (13,995,803 samples, 0.02%)</title><rect x="1.0540%" y="677" width="0.0156%" height="15" fill="rgb(245,177,15)" fg:x="943399942" fg:w="13995803"/><text x="1.3040%" y="687.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (13,995,803 samples, 0.02%)</title><rect x="1.0540%" y="661" width="0.0156%" height="15" fill="rgb(206,64,50)" fg:x="943399942" fg:w="13995803"/><text x="1.3040%" y="671.50"></text></g><g><title>core::intrinsics::likely (14,091,355 samples, 0.02%)</title><rect x="1.0958%" y="597" width="0.0157%" height="15" fill="rgb(234,36,40)" fg:x="980791594" fg:w="14091355"/><text x="1.3458%" y="607.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (46,813,679 samples, 0.05%)</title><rect x="1.0696%" y="693" width="0.0523%" height="15" fill="rgb(213,64,8)" fg:x="957395745" fg:w="46813679"/><text x="1.3196%" y="703.50"></text></g><g><title>rust_ui::render::text::TextRenderer::get_or_create_atlas (42,014,624 samples, 0.05%)</title><rect x="1.0750%" y="677" width="0.0469%" height="15" fill="rgb(210,75,36)" fg:x="962194800" fg:w="42014624"/><text x="1.3250%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (37,394,515 samples, 0.04%)</title><rect x="1.0801%" y="661" width="0.0418%" height="15" fill="rgb(229,88,21)" fg:x="966814909" fg:w="37394515"/><text x="1.3301%" y="671.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (37,394,515 samples, 0.04%)</title><rect x="1.0801%" y="645" width="0.0418%" height="15" fill="rgb(252,204,47)" fg:x="966814909" fg:w="37394515"/><text x="1.3301%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (32,707,000 samples, 0.04%)</title><rect x="1.0854%" y="629" width="0.0365%" height="15" fill="rgb(208,77,27)" fg:x="971502424" fg:w="32707000"/><text x="1.3354%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (28,093,843 samples, 0.03%)</title><rect x="1.0905%" y="613" width="0.0314%" height="15" fill="rgb(221,76,26)" fg:x="976115581" fg:w="28093843"/><text x="1.3405%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (9,326,475 samples, 0.01%)</title><rect x="1.1115%" y="597" width="0.0104%" height="15" fill="rgb(225,139,18)" fg:x="994882949" fg:w="9326475"/><text x="1.3615%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (18,553,033 samples, 0.02%)</title><rect x="1.9098%" y="613" width="0.0207%" height="15" fill="rgb(230,137,11)" fg:x="1709456755" fg:w="18553033"/><text x="2.1598%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (115,095,009 samples, 0.13%)</title><rect x="1.8468%" y="629" width="0.1286%" height="15" fill="rgb(212,28,1)" fg:x="1652999286" fg:w="115095009"/><text x="2.0968%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (40,084,507 samples, 0.04%)</title><rect x="1.9306%" y="613" width="0.0448%" height="15" fill="rgb(248,164,17)" fg:x="1728009788" fg:w="40084507"/><text x="2.1806%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (194,685,987 samples, 0.22%)</title><rect x="2.0692%" y="613" width="0.2175%" height="15" fill="rgb(222,171,42)" fg:x="1852119656" fg:w="194685987"/><text x="2.3192%" y="623.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (611,635,814 samples, 0.68%)</title><rect x="1.7436%" y="677" width="0.6833%" height="15" fill="rgb(243,84,45)" fg:x="1560677310" fg:w="611635814"/><text x="1.9936%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (611,635,814 samples, 0.68%)</title><rect x="1.7436%" y="661" width="0.6833%" height="15" fill="rgb(252,49,23)" fg:x="1560677310" fg:w="611635814"/><text x="1.9936%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (611,635,814 samples, 0.68%)</title><rect x="1.7436%" y="645" width="0.6833%" height="15" fill="rgb(215,19,7)" fg:x="1560677310" fg:w="611635814"/><text x="1.9936%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (404,218,829 samples, 0.45%)</title><rect x="1.9754%" y="629" width="0.4516%" height="15" fill="rgb(238,81,41)" fg:x="1768094295" fg:w="404218829"/><text x="2.2254%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (125,507,481 samples, 0.14%)</title><rect x="2.2867%" y="613" width="0.1402%" height="15" fill="rgb(210,199,37)" fg:x="2046805643" fg:w="125507481"/><text x="2.5367%" y="623.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (139,101,624 samples, 0.16%)</title><rect x="2.4270%" y="677" width="0.1554%" height="15" fill="rgb(244,192,49)" fg:x="2172313124" fg:w="139101624"/><text x="2.6770%" y="687.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (68,826,659 samples, 0.08%)</title><rect x="2.5055%" y="661" width="0.0769%" height="15" fill="rgb(226,211,11)" fg:x="2242588089" fg:w="68826659"/><text x="2.7555%" y="671.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (68,826,659 samples, 0.08%)</title><rect x="2.5055%" y="645" width="0.0769%" height="15" fill="rgb(236,162,54)" fg:x="2242588089" fg:w="68826659"/><text x="2.7555%" y="655.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (68,826,659 samples, 0.08%)</title><rect x="2.5055%" y="629" width="0.0769%" height="15" fill="rgb(220,229,9)" fg:x="2242588089" fg:w="68826659"/><text x="2.7555%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (36,556,350 samples, 0.04%)</title><rect x="2.5824%" y="597" width="0.0408%" height="15" fill="rgb(250,87,22)" fg:x="2311414748" fg:w="36556350"/><text x="2.8324%" y="607.50"></text></g><g><title>core::hash::sip::u8to64_le (36,556,350 samples, 0.04%)</title><rect x="2.5824%" y="581" width="0.0408%" height="15" fill="rgb(239,43,17)" fg:x="2311414748" fg:w="36556350"/><text x="2.8324%" y="591.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (82,765,322 samples, 0.09%)</title><rect x="2.5824%" y="629" width="0.0925%" height="15" fill="rgb(231,177,25)" fg:x="2311414748" fg:w="82765322"/><text x="2.8324%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (82,765,322 samples, 0.09%)</title><rect x="2.5824%" y="613" width="0.0925%" height="15" fill="rgb(219,179,1)" fg:x="2311414748" fg:w="82765322"/><text x="2.8324%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (46,208,972 samples, 0.05%)</title><rect x="2.6232%" y="597" width="0.0516%" height="15" fill="rgb(238,219,53)" fg:x="2347971098" fg:w="46208972"/><text x="2.8732%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (46,208,972 samples, 0.05%)</title><rect x="2.6232%" y="581" width="0.0516%" height="15" fill="rgb(232,167,36)" fg:x="2347971098" fg:w="46208972"/><text x="2.8732%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (46,208,972 samples, 0.05%)</title><rect x="2.6232%" y="565" width="0.0516%" height="15" fill="rgb(244,19,51)" fg:x="2347971098" fg:w="46208972"/><text x="2.8732%" y="575.50"></text></g><g><title>core::hash::Hasher::write_u32 (46,208,972 samples, 0.05%)</title><rect x="2.6232%" y="549" width="0.0516%" height="15" fill="rgb(224,6,22)" fg:x="2347971098" fg:w="46208972"/><text x="2.8732%" y="559.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (46,208,972 samples, 0.05%)</title><rect x="2.6232%" y="533" width="0.0516%" height="15" fill="rgb(224,145,5)" fg:x="2347971098" fg:w="46208972"/><text x="2.8732%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (46,208,972 samples, 0.05%)</title><rect x="2.6232%" y="517" width="0.0516%" height="15" fill="rgb(234,130,49)" fg:x="2347971098" fg:w="46208972"/><text x="2.8732%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,422,660,497 samples, 1.59%)</title><rect x="1.1219%" y="693" width="1.5894%" height="15" fill="rgb(254,6,2)" fg:x="1004209424" fg:w="1422660497"/><text x="1.3719%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (115,455,173 samples, 0.13%)</title><rect x="2.5824%" y="677" width="0.1290%" height="15" fill="rgb(208,96,46)" fg:x="2311414748" fg:w="115455173"/><text x="2.8324%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (115,455,173 samples, 0.13%)</title><rect x="2.5824%" y="661" width="0.1290%" height="15" fill="rgb(239,3,39)" fg:x="2311414748" fg:w="115455173"/><text x="2.8324%" y="671.50"></text></g><g><title>core::hash::Hasher::write_u32 (115,455,173 samples, 0.13%)</title><rect x="2.5824%" y="645" width="0.1290%" height="15" fill="rgb(233,210,1)" fg:x="2311414748" fg:w="115455173"/><text x="2.8324%" y="655.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (32,689,851 samples, 0.04%)</title><rect x="2.6748%" y="629" width="0.0365%" height="15" fill="rgb(244,137,37)" fg:x="2394180070" fg:w="32689851"/><text x="2.9248%" y="639.50"></text></g><g><title>[libc.so.6] (181,329,470 samples, 0.20%)</title><rect x="2.7114%" y="469" width="0.2026%" height="15" fill="rgb(240,136,2)" fg:x="2426869921" fg:w="181329470"/><text x="2.9614%" y="479.50"></text></g><g><title>[libc.so.6] (111,606,294 samples, 0.12%)</title><rect x="2.7892%" y="453" width="0.1247%" height="15" fill="rgb(239,18,37)" fg:x="2496593097" fg:w="111606294"/><text x="3.0392%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (212,617,927 samples, 0.24%)</title><rect x="2.7114%" y="613" width="0.2375%" height="15" fill="rgb(218,185,22)" fg:x="2426869921" fg:w="212617927"/><text x="2.9614%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (212,617,927 samples, 0.24%)</title><rect x="2.7114%" y="597" width="0.2375%" height="15" fill="rgb(225,218,4)" fg:x="2426869921" fg:w="212617927"/><text x="2.9614%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (212,617,927 samples, 0.24%)</title><rect x="2.7114%" y="581" width="0.2375%" height="15" fill="rgb(230,182,32)" fg:x="2426869921" fg:w="212617927"/><text x="2.9614%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (212,617,927 samples, 0.24%)</title><rect x="2.7114%" y="565" width="0.2375%" height="15" fill="rgb(242,56,43)" fg:x="2426869921" fg:w="212617927"/><text x="2.9614%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (212,617,927 samples, 0.24%)</title><rect x="2.7114%" y="549" width="0.2375%" height="15" fill="rgb(233,99,24)" fg:x="2426869921" fg:w="212617927"/><text x="2.9614%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (212,617,927 samples, 0.24%)</title><rect x="2.7114%" y="533" width="0.2375%" height="15" fill="rgb(234,209,42)" fg:x="2426869921" fg:w="212617927"/><text x="2.9614%" y="543.50"></text></g><g><title>alloc::alloc::alloc (212,617,927 samples, 0.24%)</title><rect x="2.7114%" y="517" width="0.2375%" height="15" fill="rgb(227,7,12)" fg:x="2426869921" fg:w="212617927"/><text x="2.9614%" y="527.50"></text></g><g><title>__rustc::__rdl_alloc (212,617,927 samples, 0.24%)</title><rect x="2.7114%" y="501" width="0.2375%" height="15" fill="rgb(245,203,43)" fg:x="2426869921" fg:w="212617927"/><text x="2.9614%" y="511.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (212,617,927 samples, 0.24%)</title><rect x="2.7114%" y="485" width="0.2375%" height="15" fill="rgb(238,205,33)" fg:x="2426869921" fg:w="212617927"/><text x="2.9614%" y="495.50"></text></g><g><title>malloc (31,288,457 samples, 0.03%)</title><rect x="2.9139%" y="469" width="0.0350%" height="15" fill="rgb(231,56,7)" fg:x="2608199391" fg:w="31288457"/><text x="3.1639%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (221,773,896 samples, 0.25%)</title><rect x="2.7114%" y="677" width="0.2478%" height="15" fill="rgb(244,186,29)" fg:x="2426869921" fg:w="221773896"/><text x="2.9614%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (221,773,896 samples, 0.25%)</title><rect x="2.7114%" y="661" width="0.2478%" height="15" fill="rgb(234,111,31)" fg:x="2426869921" fg:w="221773896"/><text x="2.9614%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (221,773,896 samples, 0.25%)</title><rect x="2.7114%" y="645" width="0.2478%" height="15" fill="rgb(241,149,10)" fg:x="2426869921" fg:w="221773896"/><text x="2.9614%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (221,773,896 samples, 0.25%)</title><rect x="2.7114%" y="629" width="0.2478%" height="15" fill="rgb(249,206,44)" fg:x="2426869921" fg:w="221773896"/><text x="2.9614%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (9,155,969 samples, 0.01%)</title><rect x="2.9489%" y="613" width="0.0102%" height="15" fill="rgb(251,153,30)" fg:x="2639487848" fg:w="9155969"/><text x="3.1989%" y="623.50"></text></g><g><title>core::ptr::copy_nonoverlapping (9,155,969 samples, 0.01%)</title><rect x="2.9489%" y="597" width="0.0102%" height="15" fill="rgb(239,152,38)" fg:x="2639487848" fg:w="9155969"/><text x="3.1989%" y="607.50"></text></g><g><title>[libc.so.6] (9,155,969 samples, 0.01%)</title><rect x="2.9489%" y="581" width="0.0102%" height="15" fill="rgb(249,139,47)" fg:x="2639487848" fg:w="9155969"/><text x="3.1989%" y="591.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (23,352,365 samples, 0.03%)</title><rect x="2.9591%" y="677" width="0.0261%" height="15" fill="rgb(244,64,35)" fg:x="2648643817" fg:w="23352365"/><text x="3.2091%" y="687.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (23,352,365 samples, 0.03%)</title><rect x="2.9591%" y="661" width="0.0261%" height="15" fill="rgb(216,46,15)" fg:x="2648643817" fg:w="23352365"/><text x="3.2091%" y="671.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (23,352,365 samples, 0.03%)</title><rect x="2.9591%" y="645" width="0.0261%" height="15" fill="rgb(250,74,19)" fg:x="2648643817" fg:w="23352365"/><text x="3.2091%" y="655.50"></text></g><g><title>[libc.so.6] (64,520,978 samples, 0.07%)</title><rect x="2.9952%" y="533" width="0.0721%" height="15" fill="rgb(249,42,33)" fg:x="2680969936" fg:w="64520978"/><text x="3.2452%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (97,800,807 samples, 0.11%)</title><rect x="2.9852%" y="597" width="0.1093%" height="15" fill="rgb(242,149,17)" fg:x="2671996182" fg:w="97800807"/><text x="3.2352%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (97,800,807 samples, 0.11%)</title><rect x="2.9852%" y="581" width="0.1093%" height="15" fill="rgb(244,29,21)" fg:x="2671996182" fg:w="97800807"/><text x="3.2352%" y="591.50"></text></g><g><title>__rustc::__rdl_dealloc (97,800,807 samples, 0.11%)</title><rect x="2.9852%" y="565" width="0.1093%" height="15" fill="rgb(220,130,37)" fg:x="2671996182" fg:w="97800807"/><text x="3.2352%" y="575.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (97,800,807 samples, 0.11%)</title><rect x="2.9852%" y="549" width="0.1093%" height="15" fill="rgb(211,67,2)" fg:x="2671996182" fg:w="97800807"/><text x="3.2352%" y="559.50"></text></g><g><title>cfree (24,306,075 samples, 0.03%)</title><rect x="3.0673%" y="533" width="0.0272%" height="15" fill="rgb(235,68,52)" fg:x="2745490914" fg:w="24306075"/><text x="3.3173%" y="543.50"></text></g><g><title>rust_ui::render::text::TextRenderer::layout_text_explicit (347,326,676 samples, 0.39%)</title><rect x="2.7114%" y="693" width="0.3880%" height="15" fill="rgb(246,142,3)" fg:x="2426869921" fg:w="347326676"/><text x="2.9614%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (102,200,415 samples, 0.11%)</title><rect x="2.9852%" y="677" width="0.1142%" height="15" fill="rgb(241,25,7)" fg:x="2671996182" fg:w="102200415"/><text x="3.2352%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (102,200,415 samples, 0.11%)</title><rect x="2.9852%" y="661" width="0.1142%" height="15" fill="rgb(242,119,39)" fg:x="2671996182" fg:w="102200415"/><text x="3.2352%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (102,200,415 samples, 0.11%)</title><rect x="2.9852%" y="645" width="0.1142%" height="15" fill="rgb(241,98,45)" fg:x="2671996182" fg:w="102200415"/><text x="3.2352%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (102,200,415 samples, 0.11%)</title><rect x="2.9852%" y="629" width="0.1142%" height="15" fill="rgb(254,28,30)" fg:x="2671996182" fg:w="102200415"/><text x="3.2352%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (102,200,415 samples, 0.11%)</title><rect x="2.9852%" y="613" width="0.1142%" height="15" fill="rgb(241,142,54)" fg:x="2671996182" fg:w="102200415"/><text x="3.2352%" y="623.50"></text></g><g><title>rust_ui::style::hex (13,902,271 samples, 0.02%)</title><rect x="3.0994%" y="693" width="0.0155%" height="15" fill="rgb(222,85,15)" fg:x="2774196597" fg:w="13902271"/><text x="3.3494%" y="703.50"></text></g><g><title>[libc.so.6] (1,989,863,120 samples, 2.22%)</title><rect x="0.8970%" y="709" width="2.2231%" height="15" fill="rgb(210,85,47)" fg:x="802853719" fg:w="1989863120"/><text x="1.1470%" y="719.50">[..</text></g><g><title>[libnvidia-eglcore.so.580.82.09] (41,717,771 samples, 0.05%)</title><rect x="3.6809%" y="693" width="0.0466%" height="15" fill="rgb(224,206,25)" fg:x="3294727631" fg:w="41717771"/><text x="3.9309%" y="703.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (9,272,761 samples, 0.01%)</title><rect x="3.7328%" y="677" width="0.0104%" height="15" fill="rgb(243,201,19)" fg:x="3341185038" fg:w="9272761"/><text x="3.9828%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9,272,761 samples, 0.01%)</title><rect x="3.7328%" y="661" width="0.0104%" height="15" fill="rgb(236,59,4)" fg:x="3341185038" fg:w="9272761"/><text x="3.9828%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9,272,761 samples, 0.01%)</title><rect x="3.7328%" y="645" width="0.0104%" height="15" fill="rgb(254,179,45)" fg:x="3341185038" fg:w="9272761"/><text x="3.9828%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9,272,761 samples, 0.01%)</title><rect x="3.7328%" y="629" width="0.0104%" height="15" fill="rgb(226,14,10)" fg:x="3341185038" fg:w="9272761"/><text x="3.9828%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9,272,761 samples, 0.01%)</title><rect x="3.7328%" y="613" width="0.0104%" height="15" fill="rgb(244,27,41)" fg:x="3341185038" fg:w="9272761"/><text x="3.9828%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13,843,725 samples, 0.02%)</title><rect x="3.7328%" y="693" width="0.0155%" height="15" fill="rgb(235,35,32)" fg:x="3341185038" fg:w="13843725"/><text x="3.9828%" y="703.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (564,511,757 samples, 0.63%)</title><rect x="3.1282%" y="709" width="0.6307%" height="15" fill="rgb(218,68,31)" fg:x="2800015183" fg:w="564511757"/><text x="3.3782%" y="719.50"></text></g><g><title>rust_ui::render::rect::RectRenderer::draw (9,498,177 samples, 0.01%)</title><rect x="3.7483%" y="693" width="0.0106%" height="15" fill="rgb(207,120,37)" fg:x="3355028763" fg:w="9498177"/><text x="3.9983%" y="703.50"></text></g><g><title>rust_ui::shader::Shader::use_shader (9,498,177 samples, 0.01%)</title><rect x="3.7483%" y="677" width="0.0106%" height="15" fill="rgb(227,98,0)" fg:x="3355028763" fg:w="9498177"/><text x="3.9983%" y="687.50"></text></g><g><title>gl::UseProgram (9,498,177 samples, 0.01%)</title><rect x="3.7483%" y="661" width="0.0106%" height="15" fill="rgb(207,7,3)" fg:x="3355028763" fg:w="9498177"/><text x="3.9983%" y="671.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,498,177 samples, 0.01%)</title><rect x="3.7483%" y="645" width="0.0106%" height="15" fill="rgb(206,98,19)" fg:x="3355028763" fg:w="9498177"/><text x="3.9983%" y="655.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,498,177 samples, 0.01%)</title><rect x="3.7483%" y="629" width="0.0106%" height="15" fill="rgb(217,5,26)" fg:x="3355028763" fg:w="9498177"/><text x="3.9983%" y="639.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,498,177 samples, 0.01%)</title><rect x="3.7483%" y="613" width="0.0106%" height="15" fill="rgb(235,190,38)" fg:x="3355028763" fg:w="9498177"/><text x="3.9983%" y="623.50"></text></g><g><title>&lt;cad::SketchInfo as core::fmt::Debug&gt;::fmt (15,740,432 samples, 0.02%)</title><rect x="3.7954%" y="677" width="0.0176%" height="15" fill="rgb(247,86,24)" fg:x="3397184068" fg:w="15740432"/><text x="4.0454%" y="687.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field5_finish (9,349,654 samples, 0.01%)</title><rect x="3.8025%" y="661" width="0.0104%" height="15" fill="rgb(205,101,16)" fg:x="3403574846" fg:w="9349654"/><text x="4.0525%" y="671.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish (9,349,654 samples, 0.01%)</title><rect x="3.8025%" y="645" width="0.0104%" height="15" fill="rgb(246,168,33)" fg:x="3403574846" fg:w="9349654"/><text x="4.0525%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (9,349,654 samples, 0.01%)</title><rect x="3.8025%" y="629" width="0.0104%" height="15" fill="rgb(231,114,1)" fg:x="3403574846" fg:w="9349654"/><text x="4.0525%" y="639.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish::{{closure}} (9,349,654 samples, 0.01%)</title><rect x="3.8025%" y="613" width="0.0104%" height="15" fill="rgb(207,184,53)" fg:x="3403574846" fg:w="9349654"/><text x="4.0525%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_str (9,349,654 samples, 0.01%)</title><rect x="3.8025%" y="597" width="0.0104%" height="15" fill="rgb(224,95,51)" fg:x="3403574846" fg:w="9349654"/><text x="4.0525%" y="607.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,349,654 samples, 0.01%)</title><rect x="3.8025%" y="581" width="0.0104%" height="15" fill="rgb(212,188,45)" fg:x="3403574846" fg:w="9349654"/><text x="4.0525%" y="591.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (10,680,267 samples, 0.01%)</title><rect x="3.8262%" y="501" width="0.0119%" height="15" fill="rgb(223,154,38)" fg:x="3424765351" fg:w="10680267"/><text x="4.0762%" y="511.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (10,680,267 samples, 0.01%)</title><rect x="3.8262%" y="485" width="0.0119%" height="15" fill="rgb(251,22,52)" fg:x="3424765351" fg:w="10680267"/><text x="4.0762%" y="495.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (10,680,267 samples, 0.01%)</title><rect x="3.8262%" y="469" width="0.0119%" height="15" fill="rgb(229,209,22)" fg:x="3424765351" fg:w="10680267"/><text x="4.0762%" y="479.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,928,804 samples, 0.01%)</title><rect x="3.8271%" y="453" width="0.0111%" height="15" fill="rgb(234,138,34)" fg:x="3425516814" fg:w="9928804"/><text x="4.0771%" y="463.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9,259,168 samples, 0.01%)</title><rect x="3.8278%" y="437" width="0.0103%" height="15" fill="rgb(212,95,11)" fg:x="3426186450" fg:w="9259168"/><text x="4.0778%" y="447.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,259,168 samples, 0.01%)</title><rect x="3.8278%" y="421" width="0.0103%" height="15" fill="rgb(240,179,47)" fg:x="3426186450" fg:w="9259168"/><text x="4.0778%" y="431.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (9,259,168 samples, 0.01%)</title><rect x="3.8278%" y="405" width="0.0103%" height="15" fill="rgb(240,163,11)" fg:x="3426186450" fg:w="9259168"/><text x="4.0778%" y="415.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (9,259,168 samples, 0.01%)</title><rect x="3.8278%" y="389" width="0.0103%" height="15" fill="rgb(236,37,12)" fg:x="3426186450" fg:w="9259168"/><text x="4.0778%" y="399.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (15,454,478 samples, 0.02%)</title><rect x="3.8262%" y="517" width="0.0173%" height="15" fill="rgb(232,164,16)" fg:x="3424765351" fg:w="15454478"/><text x="4.0762%" y="527.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field1_finish (29,442,933 samples, 0.03%)</title><rect x="3.8158%" y="661" width="0.0329%" height="15" fill="rgb(244,205,15)" fg:x="3415439008" fg:w="29442933"/><text x="4.0658%" y="671.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (29,442,933 samples, 0.03%)</title><rect x="3.8158%" y="645" width="0.0329%" height="15" fill="rgb(223,117,47)" fg:x="3415439008" fg:w="29442933"/><text x="4.0658%" y="655.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with (29,442,933 samples, 0.03%)</title><rect x="3.8158%" y="629" width="0.0329%" height="15" fill="rgb(244,107,35)" fg:x="3415439008" fg:w="29442933"/><text x="4.0658%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (29,442,933 samples, 0.03%)</title><rect x="3.8158%" y="613" width="0.0329%" height="15" fill="rgb(205,140,8)" fg:x="3415439008" fg:w="29442933"/><text x="4.0658%" y="623.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with::{{closure}} (29,442,933 samples, 0.03%)</title><rect x="3.8158%" y="597" width="0.0329%" height="15" fill="rgb(228,84,46)" fg:x="3415439008" fg:w="29442933"/><text x="4.0658%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_str (29,442,933 samples, 0.03%)</title><rect x="3.8158%" y="581" width="0.0329%" height="15" fill="rgb(254,188,9)" fg:x="3415439008" fg:w="29442933"/><text x="4.0658%" y="591.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (29,442,933 samples, 0.03%)</title><rect x="3.8158%" y="565" width="0.0329%" height="15" fill="rgb(206,112,54)" fg:x="3415439008" fg:w="29442933"/><text x="4.0658%" y="575.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (24,802,588 samples, 0.03%)</title><rect x="3.8210%" y="549" width="0.0277%" height="15" fill="rgb(216,84,49)" fg:x="3420079353" fg:w="24802588"/><text x="4.0710%" y="559.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (24,802,588 samples, 0.03%)</title><rect x="3.8210%" y="533" width="0.0277%" height="15" fill="rgb(214,194,35)" fg:x="3420079353" fg:w="24802588"/><text x="4.0710%" y="543.50"></text></g><g><title>&lt;cad::entity::EntityId as core::fmt::Debug&gt;::fmt (11,209,699 samples, 0.01%)</title><rect x="3.8487%" y="645" width="0.0125%" height="15" fill="rgb(249,28,3)" fg:x="3444881941" fg:w="11209699"/><text x="4.0987%" y="655.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (11,209,699 samples, 0.01%)</title><rect x="3.8487%" y="629" width="0.0125%" height="15" fill="rgb(222,56,52)" fg:x="3444881941" fg:w="11209699"/><text x="4.0987%" y="639.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish (11,209,699 samples, 0.01%)</title><rect x="3.8487%" y="613" width="0.0125%" height="15" fill="rgb(245,217,50)" fg:x="3444881941" fg:w="11209699"/><text x="4.0987%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (11,209,699 samples, 0.01%)</title><rect x="3.8487%" y="597" width="0.0125%" height="15" fill="rgb(213,201,24)" fg:x="3444881941" fg:w="11209699"/><text x="4.0987%" y="607.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish::{{closure}} (11,209,699 samples, 0.01%)</title><rect x="3.8487%" y="581" width="0.0125%" height="15" fill="rgb(248,116,28)" fg:x="3444881941" fg:w="11209699"/><text x="4.0987%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (11,209,699 samples, 0.01%)</title><rect x="3.8487%" y="565" width="0.0125%" height="15" fill="rgb(219,72,43)" fg:x="3444881941" fg:w="11209699"/><text x="4.0987%" y="575.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (10,512,479 samples, 0.01%)</title><rect x="3.8495%" y="549" width="0.0117%" height="15" fill="rgb(209,138,14)" fg:x="3445579161" fg:w="10512479"/><text x="4.0995%" y="559.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (10,512,479 samples, 0.01%)</title><rect x="3.8495%" y="533" width="0.0117%" height="15" fill="rgb(222,18,33)" fg:x="3445579161" fg:w="10512479"/><text x="4.0995%" y="543.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (10,512,479 samples, 0.01%)</title><rect x="3.8495%" y="517" width="0.0117%" height="15" fill="rgb(213,199,7)" fg:x="3445579161" fg:w="10512479"/><text x="4.0995%" y="527.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (10,512,479 samples, 0.01%)</title><rect x="3.8495%" y="501" width="0.0117%" height="15" fill="rgb(250,110,10)" fg:x="3445579161" fg:w="10512479"/><text x="4.0995%" y="511.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (10,512,479 samples, 0.01%)</title><rect x="3.8495%" y="485" width="0.0117%" height="15" fill="rgb(248,123,6)" fg:x="3445579161" fg:w="10512479"/><text x="4.0995%" y="495.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (10,512,479 samples, 0.01%)</title><rect x="3.8495%" y="469" width="0.0117%" height="15" fill="rgb(206,91,31)" fg:x="3445579161" fg:w="10512479"/><text x="4.0995%" y="479.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (14,483,673 samples, 0.02%)</title><rect x="3.8971%" y="437" width="0.0162%" height="15" fill="rgb(211,154,13)" fg:x="3488204108" fg:w="14483673"/><text x="4.1471%" y="447.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (23,854,202 samples, 0.03%)</title><rect x="3.8918%" y="453" width="0.0267%" height="15" fill="rgb(225,148,7)" fg:x="3483485234" fg:w="23854202"/><text x="4.1418%" y="463.50"></text></g><g><title>&lt;cad::entity::GuidedEntity as core::fmt::Debug&gt;::fmt (95,122,860 samples, 0.11%)</title><rect x="3.8130%" y="677" width="0.1063%" height="15" fill="rgb(220,160,43)" fg:x="3412924500" fg:w="95122860"/><text x="4.0630%" y="687.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field3_finish (63,165,419 samples, 0.07%)</title><rect x="3.8487%" y="661" width="0.0706%" height="15" fill="rgb(213,52,39)" fg:x="3444881941" fg:w="63165419"/><text x="4.0987%" y="671.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (51,337,126 samples, 0.06%)</title><rect x="3.8619%" y="645" width="0.0574%" height="15" fill="rgb(243,137,7)" fg:x="3456710234" fg:w="51337126"/><text x="4.1119%" y="655.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with (51,337,126 samples, 0.06%)</title><rect x="3.8619%" y="629" width="0.0574%" height="15" fill="rgb(230,79,13)" fg:x="3456710234" fg:w="51337126"/><text x="4.1119%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (51,337,126 samples, 0.06%)</title><rect x="3.8619%" y="613" width="0.0574%" height="15" fill="rgb(247,105,23)" fg:x="3456710234" fg:w="51337126"/><text x="4.1119%" y="623.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with::{{closure}} (51,337,126 samples, 0.06%)</title><rect x="3.8619%" y="597" width="0.0574%" height="15" fill="rgb(223,179,41)" fg:x="3456710234" fg:w="51337126"/><text x="4.1119%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_str (51,337,126 samples, 0.06%)</title><rect x="3.8619%" y="581" width="0.0574%" height="15" fill="rgb(218,9,34)" fg:x="3456710234" fg:w="51337126"/><text x="4.1119%" y="591.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (51,337,126 samples, 0.06%)</title><rect x="3.8619%" y="565" width="0.0574%" height="15" fill="rgb(222,106,8)" fg:x="3456710234" fg:w="51337126"/><text x="4.1119%" y="575.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (51,337,126 samples, 0.06%)</title><rect x="3.8619%" y="549" width="0.0574%" height="15" fill="rgb(211,220,0)" fg:x="3456710234" fg:w="51337126"/><text x="4.1119%" y="559.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (50,602,164 samples, 0.06%)</title><rect x="3.8627%" y="533" width="0.0565%" height="15" fill="rgb(229,52,16)" fg:x="3457445196" fg:w="50602164"/><text x="4.1127%" y="543.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (46,023,248 samples, 0.05%)</title><rect x="3.8679%" y="517" width="0.0514%" height="15" fill="rgb(212,155,18)" fg:x="3462024112" fg:w="46023248"/><text x="4.1179%" y="527.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (38,926,310 samples, 0.04%)</title><rect x="3.8758%" y="501" width="0.0435%" height="15" fill="rgb(242,21,14)" fg:x="3469121050" fg:w="38926310"/><text x="4.1258%" y="511.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (38,926,310 samples, 0.04%)</title><rect x="3.8758%" y="485" width="0.0435%" height="15" fill="rgb(222,19,48)" fg:x="3469121050" fg:w="38926310"/><text x="4.1258%" y="495.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (38,926,310 samples, 0.04%)</title><rect x="3.8758%" y="469" width="0.0435%" height="15" fill="rgb(232,45,27)" fg:x="3469121050" fg:w="38926310"/><text x="4.1258%" y="479.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (14,970,982 samples, 0.02%)</title><rect x="3.9201%" y="549" width="0.0167%" height="15" fill="rgb(249,103,42)" fg:x="3508751355" fg:w="14970982"/><text x="4.1701%" y="559.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (17,425,864 samples, 0.02%)</title><rect x="3.9193%" y="581" width="0.0195%" height="15" fill="rgb(246,81,33)" fg:x="3508047360" fg:w="17425864"/><text x="4.1693%" y="591.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (16,721,869 samples, 0.02%)</title><rect x="3.9201%" y="565" width="0.0187%" height="15" fill="rgb(252,33,42)" fg:x="3508751355" fg:w="16721869"/><text x="4.1701%" y="575.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (22,151,411 samples, 0.02%)</title><rect x="3.9193%" y="613" width="0.0247%" height="15" fill="rgb(209,212,41)" fg:x="3508047360" fg:w="22151411"/><text x="4.1693%" y="623.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (22,151,411 samples, 0.02%)</title><rect x="3.9193%" y="597" width="0.0247%" height="15" fill="rgb(207,154,6)" fg:x="3508047360" fg:w="22151411"/><text x="4.1693%" y="607.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (26,966,937 samples, 0.03%)</title><rect x="3.9193%" y="661" width="0.0301%" height="15" fill="rgb(223,64,47)" fg:x="3508047360" fg:w="26966937"/><text x="4.1693%" y="671.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (26,966,937 samples, 0.03%)</title><rect x="3.9193%" y="645" width="0.0301%" height="15" fill="rgb(211,161,38)" fg:x="3508047360" fg:w="26966937"/><text x="4.1693%" y="655.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (26,966,937 samples, 0.03%)</title><rect x="3.9193%" y="629" width="0.0301%" height="15" fill="rgb(219,138,40)" fg:x="3508047360" fg:w="26966937"/><text x="4.1693%" y="639.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (147,192,212 samples, 0.16%)</title><rect x="3.7903%" y="693" width="0.1644%" height="15" fill="rgb(241,228,46)" fg:x="3392587654" fg:w="147192212"/><text x="4.0403%" y="703.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::Debug for u16&gt;::fmt (31,732,506 samples, 0.04%)</title><rect x="3.9193%" y="677" width="0.0355%" height="15" fill="rgb(223,209,38)" fg:x="3508047360" fg:w="31732506"/><text x="4.1693%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (14,177,441 samples, 0.02%)</title><rect x="3.9599%" y="533" width="0.0158%" height="15" fill="rgb(236,164,45)" fg:x="3544393411" fg:w="14177441"/><text x="4.2099%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (14,177,441 samples, 0.02%)</title><rect x="3.9599%" y="517" width="0.0158%" height="15" fill="rgb(231,15,5)" fg:x="3544393411" fg:w="14177441"/><text x="4.2099%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (14,177,441 samples, 0.02%)</title><rect x="3.9599%" y="501" width="0.0158%" height="15" fill="rgb(252,35,15)" fg:x="3544393411" fg:w="14177441"/><text x="4.2099%" y="511.50"></text></g><g><title>alloc::alloc::realloc (14,177,441 samples, 0.02%)</title><rect x="3.9599%" y="485" width="0.0158%" height="15" fill="rgb(248,181,18)" fg:x="3544393411" fg:w="14177441"/><text x="4.2099%" y="495.50"></text></g><g><title>__rustc::__rdl_realloc (14,177,441 samples, 0.02%)</title><rect x="3.9599%" y="469" width="0.0158%" height="15" fill="rgb(233,39,42)" fg:x="3544393411" fg:w="14177441"/><text x="4.2099%" y="479.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (14,177,441 samples, 0.02%)</title><rect x="3.9599%" y="453" width="0.0158%" height="15" fill="rgb(238,110,33)" fg:x="3544393411" fg:w="14177441"/><text x="4.2099%" y="463.50"></text></g><g><title>realloc (14,177,441 samples, 0.02%)</title><rect x="3.9599%" y="437" width="0.0158%" height="15" fill="rgb(233,195,10)" fg:x="3544393411" fg:w="14177441"/><text x="4.2099%" y="447.50"></text></g><g><title>[libc.so.6] (9,467,067 samples, 0.01%)</title><rect x="3.9651%" y="421" width="0.0106%" height="15" fill="rgb(254,105,3)" fg:x="3549103785" fg:w="9467067"/><text x="4.2151%" y="431.50"></text></g><g><title>[libc.so.6] (9,467,067 samples, 0.01%)</title><rect x="3.9651%" y="405" width="0.0106%" height="15" fill="rgb(221,225,9)" fg:x="3549103785" fg:w="9467067"/><text x="4.2151%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (23,413,199 samples, 0.03%)</title><rect x="3.9547%" y="693" width="0.0262%" height="15" fill="rgb(224,227,45)" fg:x="3539779866" fg:w="23413199"/><text x="4.2047%" y="703.50"></text></g><g><title>alloc::string::String::push_str (18,799,654 samples, 0.02%)</title><rect x="3.9599%" y="677" width="0.0210%" height="15" fill="rgb(229,198,43)" fg:x="3544393411" fg:w="18799654"/><text x="4.2099%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (18,799,654 samples, 0.02%)</title><rect x="3.9599%" y="661" width="0.0210%" height="15" fill="rgb(206,209,35)" fg:x="3544393411" fg:w="18799654"/><text x="4.2099%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (18,799,654 samples, 0.02%)</title><rect x="3.9599%" y="645" width="0.0210%" height="15" fill="rgb(245,195,53)" fg:x="3544393411" fg:w="18799654"/><text x="4.2099%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (18,799,654 samples, 0.02%)</title><rect x="3.9599%" y="629" width="0.0210%" height="15" fill="rgb(240,92,26)" fg:x="3544393411" fg:w="18799654"/><text x="4.2099%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18,799,654 samples, 0.02%)</title><rect x="3.9599%" y="613" width="0.0210%" height="15" fill="rgb(207,40,23)" fg:x="3544393411" fg:w="18799654"/><text x="4.2099%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18,799,654 samples, 0.02%)</title><rect x="3.9599%" y="597" width="0.0210%" height="15" fill="rgb(223,111,35)" fg:x="3544393411" fg:w="18799654"/><text x="4.2099%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (18,799,654 samples, 0.02%)</title><rect x="3.9599%" y="581" width="0.0210%" height="15" fill="rgb(229,147,28)" fg:x="3544393411" fg:w="18799654"/><text x="4.2099%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (18,799,654 samples, 0.02%)</title><rect x="3.9599%" y="565" width="0.0210%" height="15" fill="rgb(211,29,28)" fg:x="3544393411" fg:w="18799654"/><text x="4.2099%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (18,799,654 samples, 0.02%)</title><rect x="3.9599%" y="549" width="0.0210%" height="15" fill="rgb(228,72,33)" fg:x="3544393411" fg:w="18799654"/><text x="4.2099%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10,225,658,228 samples, 11.42%)</title><rect x="3.9827%" y="693" width="11.4243%" height="15" fill="rgb(205,214,31)" fg:x="3564855127" fg:w="10225658228"/><text x="4.2327%" y="703.50">&lt;core::hash::sip:..</text></g><g><title>core::hash::sip::u8to64_le (3,868,585,621 samples, 4.32%)</title><rect x="11.0850%" y="677" width="4.3221%" height="15" fill="rgb(224,111,15)" fg:x="9921927734" fg:w="3868585621"/><text x="11.3350%" y="687.50">core:..</text></g><g><title>core::ptr::copy_nonoverlapping (14,013,775 samples, 0.02%)</title><rect x="15.3914%" y="661" width="0.0157%" height="15" fill="rgb(253,21,26)" fg:x="13776499580" fg:w="14013775"/><text x="15.6414%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,330,375 samples, 0.01%)</title><rect x="15.4122%" y="677" width="0.0104%" height="15" fill="rgb(245,139,43)" fg:x="13795070177" fg:w="9330375"/><text x="15.6622%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (9,330,375 samples, 0.01%)</title><rect x="15.4122%" y="661" width="0.0104%" height="15" fill="rgb(252,170,7)" fg:x="13795070177" fg:w="9330375"/><text x="15.6622%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9,330,375 samples, 0.01%)</title><rect x="15.4122%" y="645" width="0.0104%" height="15" fill="rgb(231,118,14)" fg:x="13795070177" fg:w="9330375"/><text x="15.6622%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9,330,375 samples, 0.01%)</title><rect x="15.4122%" y="629" width="0.0104%" height="15" fill="rgb(238,83,0)" fg:x="13795070177" fg:w="9330375"/><text x="15.6622%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9,330,375 samples, 0.01%)</title><rect x="15.4122%" y="613" width="0.0104%" height="15" fill="rgb(221,39,39)" fg:x="13795070177" fg:w="9330375"/><text x="15.6622%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9,330,375 samples, 0.01%)</title><rect x="15.4122%" y="597" width="0.0104%" height="15" fill="rgb(222,119,46)" fg:x="13795070177" fg:w="9330375"/><text x="15.6622%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (9,330,375 samples, 0.01%)</title><rect x="15.4122%" y="581" width="0.0104%" height="15" fill="rgb(222,165,49)" fg:x="13795070177" fg:w="9330375"/><text x="15.6622%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (9,330,375 samples, 0.01%)</title><rect x="15.4122%" y="565" width="0.0104%" height="15" fill="rgb(219,113,52)" fg:x="13795070177" fg:w="9330375"/><text x="15.6622%" y="575.50"></text></g><g><title>taffy::compute::flexbox::generate_anonymous_flex_items::{{closure}} (9,330,375 samples, 0.01%)</title><rect x="15.4122%" y="549" width="0.0104%" height="15" fill="rgb(214,7,15)" fg:x="13795070177" fg:w="9330375"/><text x="15.6622%" y="559.50"></text></g><g><title>&lt;taffy::tree::taffy_tree::TaffyView&lt;NodeContext,MeasureFunction&gt; as taffy::tree::traits::LayoutFlexboxContainer&gt;::get_flexbox_child_style (9,330,375 samples, 0.01%)</title><rect x="15.4122%" y="533" width="0.0104%" height="15" fill="rgb(235,32,4)" fg:x="13795070177" fg:w="9330375"/><text x="15.6622%" y="543.50"></text></g><g><title>&lt;slotmap::basic::SlotMap&lt;K,V&gt; as core::ops::index::Index&lt;K&gt;&gt;::index (9,330,375 samples, 0.01%)</title><rect x="15.4122%" y="517" width="0.0104%" height="15" fill="rgb(238,90,54)" fg:x="13795070177" fg:w="9330375"/><text x="15.6622%" y="527.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get (9,330,375 samples, 0.01%)</title><rect x="15.4122%" y="501" width="0.0104%" height="15" fill="rgb(213,208,19)" fg:x="13795070177" fg:w="9330375"/><text x="15.6622%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::filter (9,330,375 samples, 0.01%)</title><rect x="15.4122%" y="485" width="0.0104%" height="15" fill="rgb(233,156,4)" fg:x="13795070177" fg:w="9330375"/><text x="15.6622%" y="495.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get::{{closure}} (9,330,375 samples, 0.01%)</title><rect x="15.4122%" y="469" width="0.0104%" height="15" fill="rgb(207,194,5)" fg:x="13795070177" fg:w="9330375"/><text x="15.6622%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18,489,127 samples, 0.02%)</title><rect x="15.4071%" y="693" width="0.0207%" height="15" fill="rgb(206,111,30)" fg:x="13790513355" fg:w="18489127"/><text x="15.6571%" y="703.50"></text></g><g><title>&lt;slotmap::basic::Slot&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13,973,439 samples, 0.02%)</title><rect x="15.4421%" y="693" width="0.0156%" height="15" fill="rgb(243,70,54)" fg:x="13821886087" fg:w="13973439"/><text x="15.6921%" y="703.50"></text></g><g><title>&lt;taffy::tree::taffy_tree::TaffyView&lt;NodeContext,MeasureFunction&gt; as taffy::tree::traits::LayoutPartialTree&gt;::compute_child_layout::{{closure}} (32,266,223 samples, 0.04%)</title><rect x="15.4680%" y="693" width="0.0360%" height="15" fill="rgb(242,28,8)" fg:x="13845084315" fg:w="32266223"/><text x="15.7180%" y="703.50"></text></g><g><title>taffy::compute::leaf::compute_leaf_layout (9,482,202 samples, 0.01%)</title><rect x="15.4935%" y="677" width="0.0106%" height="15" fill="rgb(219,106,18)" fg:x="13867868336" fg:w="9482202"/><text x="15.7435%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (14,720,411 samples, 0.02%)</title><rect x="15.5093%" y="677" width="0.0164%" height="15" fill="rgb(244,222,10)" fg:x="13881985069" fg:w="14720411"/><text x="15.7593%" y="687.50"></text></g><g><title>[cad-frontend] (23,964,064 samples, 0.03%)</title><rect x="15.5041%" y="693" width="0.0268%" height="15" fill="rgb(236,179,52)" fg:x="13877350538" fg:w="23964064"/><text x="15.7541%" y="703.50"></text></g><g><title>[libc.so.6] (85,473,577 samples, 0.10%)</title><rect x="15.5309%" y="693" width="0.0955%" height="15" fill="rgb(213,23,39)" fg:x="13901314602" fg:w="85473577"/><text x="15.7809%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (9,931,266 samples, 0.01%)</title><rect x="15.9289%" y="613" width="0.0111%" height="15" fill="rgb(238,48,10)" fg:x="14257584377" fg:w="9931266"/><text x="16.1789%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9,931,266 samples, 0.01%)</title><rect x="15.9289%" y="597" width="0.0111%" height="15" fill="rgb(251,196,23)" fg:x="14257584377" fg:w="9931266"/><text x="16.1789%" y="607.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (13,932,165 samples, 0.02%)</title><rect x="15.9556%" y="581" width="0.0156%" height="15" fill="rgb(250,152,24)" fg:x="14281504651" fg:w="13932165"/><text x="16.2056%" y="591.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (13,932,165 samples, 0.02%)</title><rect x="15.9556%" y="565" width="0.0156%" height="15" fill="rgb(209,150,17)" fg:x="14281504651" fg:w="13932165"/><text x="16.2056%" y="575.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (13,932,165 samples, 0.02%)</title><rect x="15.9556%" y="549" width="0.0156%" height="15" fill="rgb(234,202,34)" fg:x="14281504651" fg:w="13932165"/><text x="16.2056%" y="559.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros (13,932,165 samples, 0.02%)</title><rect x="15.9556%" y="533" width="0.0156%" height="15" fill="rgb(253,148,53)" fg:x="14281504651" fg:w="13932165"/><text x="16.2056%" y="543.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (18,772,542 samples, 0.02%)</title><rect x="15.9712%" y="581" width="0.0210%" height="15" fill="rgb(218,129,16)" fg:x="14295436816" fg:w="18772542"/><text x="16.2212%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (18,772,542 samples, 0.02%)</title><rect x="15.9712%" y="565" width="0.0210%" height="15" fill="rgb(216,85,19)" fg:x="14295436816" fg:w="18772542"/><text x="16.2212%" y="575.50"></text></g><g><title>hashbrown::control::tag::Tag::full (18,773,728 samples, 0.02%)</title><rect x="15.9922%" y="581" width="0.0210%" height="15" fill="rgb(235,228,7)" fg:x="14314209358" fg:w="18773728"/><text x="16.2422%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (9,352,954 samples, 0.01%)</title><rect x="16.0131%" y="581" width="0.0104%" height="15" fill="rgb(245,175,0)" fg:x="14332983086" fg:w="9352954"/><text x="16.2631%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (9,352,954 samples, 0.01%)</title><rect x="16.0131%" y="565" width="0.0104%" height="15" fill="rgb(208,168,36)" fg:x="14332983086" fg:w="9352954"/><text x="16.2631%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (9,352,954 samples, 0.01%)</title><rect x="16.0131%" y="549" width="0.0104%" height="15" fill="rgb(246,171,24)" fg:x="14332983086" fg:w="9352954"/><text x="16.2631%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (9,352,954 samples, 0.01%)</title><rect x="16.0131%" y="533" width="0.0104%" height="15" fill="rgb(215,142,24)" fg:x="14332983086" fg:w="9352954"/><text x="16.2631%" y="543.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (369,493,758 samples, 0.41%)</title><rect x="15.6264%" y="693" width="0.4128%" height="15" fill="rgb(250,187,7)" fg:x="13986788179" fg:w="369493758"/><text x="15.8764%" y="703.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (122,050,510 samples, 0.14%)</title><rect x="15.9028%" y="677" width="0.1364%" height="15" fill="rgb(228,66,33)" fg:x="14234231427" fg:w="122050510"/><text x="16.1528%" y="687.50"></text></g><g><title>rust_ui::render::text::TextRenderer::get_or_create_atlas (122,050,510 samples, 0.14%)</title><rect x="15.9028%" y="661" width="0.1364%" height="15" fill="rgb(234,215,21)" fg:x="14234231427" fg:w="122050510"/><text x="16.1528%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (117,288,286 samples, 0.13%)</title><rect x="15.9081%" y="645" width="0.1310%" height="15" fill="rgb(222,191,20)" fg:x="14238993651" fg:w="117288286"/><text x="16.1581%" y="655.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (117,288,286 samples, 0.13%)</title><rect x="15.9081%" y="629" width="0.1310%" height="15" fill="rgb(245,79,54)" fg:x="14238993651" fg:w="117288286"/><text x="16.1581%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (88,766,294 samples, 0.10%)</title><rect x="15.9400%" y="613" width="0.0992%" height="15" fill="rgb(240,10,37)" fg:x="14267515643" fg:w="88766294"/><text x="16.1900%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (74,777,286 samples, 0.08%)</title><rect x="15.9556%" y="597" width="0.0835%" height="15" fill="rgb(214,192,32)" fg:x="14281504651" fg:w="74777286"/><text x="16.2056%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (13,945,897 samples, 0.02%)</title><rect x="16.0236%" y="581" width="0.0156%" height="15" fill="rgb(209,36,54)" fg:x="14342336040" fg:w="13945897"/><text x="16.2736%" y="591.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (14,123,817 samples, 0.02%)</title><rect x="16.0392%" y="677" width="0.0158%" height="15" fill="rgb(220,10,11)" fg:x="14356281937" fg:w="14123817"/><text x="16.2892%" y="687.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (13,881,581 samples, 0.02%)</title><rect x="16.0549%" y="661" width="0.0155%" height="15" fill="rgb(221,106,17)" fg:x="14370405754" fg:w="13881581"/><text x="16.3049%" y="671.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (13,881,581 samples, 0.02%)</title><rect x="16.0549%" y="645" width="0.0155%" height="15" fill="rgb(251,142,44)" fg:x="14370405754" fg:w="13881581"/><text x="16.3049%" y="655.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (9,228,069 samples, 0.01%)</title><rect x="16.0601%" y="629" width="0.0103%" height="15" fill="rgb(238,13,15)" fg:x="14375059266" fg:w="9228069"/><text x="16.3101%" y="639.50"></text></g><g><title>core::slice::memchr::memchr (9,228,069 samples, 0.01%)</title><rect x="16.0601%" y="613" width="0.0103%" height="15" fill="rgb(208,107,27)" fg:x="14375059266" fg:w="9228069"/><text x="16.3101%" y="623.50"></text></g><g><title>core::slice::memchr::memchr_aligned (9,228,069 samples, 0.01%)</title><rect x="16.0601%" y="597" width="0.0103%" height="15" fill="rgb(205,136,37)" fg:x="14375059266" fg:w="9228069"/><text x="16.3101%" y="607.50"></text></g><g><title>core::slice::memchr::memchr_aligned::runtime (9,228,069 samples, 0.01%)</title><rect x="16.0601%" y="581" width="0.0103%" height="15" fill="rgb(250,205,27)" fg:x="14375059266" fg:w="9228069"/><text x="16.3101%" y="591.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_whitespace (13,992,084 samples, 0.02%)</title><rect x="16.1278%" y="645" width="0.0156%" height="15" fill="rgb(210,80,43)" fg:x="14435580106" fg:w="13992084"/><text x="16.3778%" y="655.50"></text></g><g><title>rust_ui::render::text::TextRenderer::layout_text_explicit (83,844,668 samples, 0.09%)</title><rect x="16.0549%" y="677" width="0.0937%" height="15" fill="rgb(247,160,36)" fg:x="14370405754" fg:w="83844668"/><text x="16.3049%" y="687.50"></text></g><g><title>rust_ui::render::text::split_preserve_leading_whitespace (69,963,087 samples, 0.08%)</title><rect x="16.0704%" y="661" width="0.0782%" height="15" fill="rgb(234,13,49)" fg:x="14384287335" fg:w="69963087"/><text x="16.3204%" y="671.50"></text></g><g><title>cad_frontend::sketch_renderer::SketchPicker::compute_pick_locations (39,218,402 samples, 0.04%)</title><rect x="16.1539%" y="613" width="0.0438%" height="15" fill="rgb(234,122,0)" fg:x="14458988089" fg:w="39218402"/><text x="16.4039%" y="623.50"></text></g><g><title>rust_ui::shader::Shader::use_shader (25,112,999 samples, 0.03%)</title><rect x="16.1697%" y="597" width="0.0281%" height="15" fill="rgb(207,146,38)" fg:x="14473093492" fg:w="25112999"/><text x="16.4197%" y="607.50"></text></g><g><title>gl::UseProgram (25,112,999 samples, 0.03%)</title><rect x="16.1697%" y="581" width="0.0281%" height="15" fill="rgb(207,177,25)" fg:x="14473093492" fg:w="25112999"/><text x="16.4197%" y="591.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (25,112,999 samples, 0.03%)</title><rect x="16.1697%" y="565" width="0.0281%" height="15" fill="rgb(211,178,42)" fg:x="14473093492" fg:w="25112999"/><text x="16.4197%" y="575.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (25,112,999 samples, 0.03%)</title><rect x="16.1697%" y="549" width="0.0281%" height="15" fill="rgb(230,69,54)" fg:x="14473093492" fg:w="25112999"/><text x="16.4197%" y="559.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (25,112,999 samples, 0.03%)</title><rect x="16.1697%" y="533" width="0.0281%" height="15" fill="rgb(214,135,41)" fg:x="14473093492" fg:w="25112999"/><text x="16.4197%" y="543.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (20,356,505 samples, 0.02%)</title><rect x="16.1750%" y="517" width="0.0227%" height="15" fill="rgb(237,67,25)" fg:x="14477849986" fg:w="20356505"/><text x="16.4250%" y="527.50"></text></g><g><title>gl::BindFramebuffer (20,803,485 samples, 0.02%)</title><rect x="16.1977%" y="581" width="0.0232%" height="15" fill="rgb(222,189,50)" fg:x="14498206491" fg:w="20803485"/><text x="16.4477%" y="591.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (20,803,485 samples, 0.02%)</title><rect x="16.1977%" y="565" width="0.0232%" height="15" fill="rgb(245,148,34)" fg:x="14498206491" fg:w="20803485"/><text x="16.4477%" y="575.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (20,803,485 samples, 0.02%)</title><rect x="16.1977%" y="549" width="0.0232%" height="15" fill="rgb(222,29,6)" fg:x="14498206491" fg:w="20803485"/><text x="16.4477%" y="559.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (20,803,485 samples, 0.02%)</title><rect x="16.1977%" y="533" width="0.0232%" height="15" fill="rgb(221,189,43)" fg:x="14498206491" fg:w="20803485"/><text x="16.4477%" y="543.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (20,803,485 samples, 0.02%)</title><rect x="16.1977%" y="517" width="0.0232%" height="15" fill="rgb(207,36,27)" fg:x="14498206491" fg:w="20803485"/><text x="16.4477%" y="527.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (20,803,485 samples, 0.02%)</title><rect x="16.1977%" y="501" width="0.0232%" height="15" fill="rgb(217,90,24)" fg:x="14498206491" fg:w="20803485"/><text x="16.4477%" y="511.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (15,281,054 samples, 0.02%)</title><rect x="16.2039%" y="485" width="0.0171%" height="15" fill="rgb(224,66,35)" fg:x="14503728922" fg:w="15281054"/><text x="16.4539%" y="495.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (32,908,145 samples, 0.04%)</title><rect x="16.3815%" y="357" width="0.0368%" height="15" fill="rgb(221,13,50)" fg:x="14662676775" fg:w="32908145"/><text x="16.6315%" y="367.50"></text></g><g><title>clock_gettime (23,555,784 samples, 0.03%)</title><rect x="16.3919%" y="341" width="0.0263%" height="15" fill="rgb(236,68,49)" fg:x="14672029136" fg:w="23555784"/><text x="16.6419%" y="351.50"></text></g><g><title>__vdso_clock_gettime (23,555,784 samples, 0.03%)</title><rect x="16.3919%" y="325" width="0.0263%" height="15" fill="rgb(229,146,28)" fg:x="14672029136" fg:w="23555784"/><text x="16.6419%" y="335.50"></text></g><g><title>cad_frontend::sketch_renderer::SketchPicker::hovered (216,015,196 samples, 0.24%)</title><rect x="16.1977%" y="613" width="0.2413%" height="15" fill="rgb(225,31,38)" fg:x="14498206491" fg:w="216015196"/><text x="16.4477%" y="623.50"></text></g><g><title>cad_frontend::entity_picker::EntityPicker::read_pixel (216,015,196 samples, 0.24%)</title><rect x="16.1977%" y="597" width="0.2413%" height="15" fill="rgb(250,208,3)" fg:x="14498206491" fg:w="216015196"/><text x="16.4477%" y="607.50"></text></g><g><title>gl::ReadPixels (190,508,827 samples, 0.21%)</title><rect x="16.2262%" y="581" width="0.2128%" height="15" fill="rgb(246,54,23)" fg:x="14523712860" fg:w="190508827"/><text x="16.4762%" y="591.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (190,508,827 samples, 0.21%)</title><rect x="16.2262%" y="565" width="0.2128%" height="15" fill="rgb(243,76,11)" fg:x="14523712860" fg:w="190508827"/><text x="16.4762%" y="575.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (190,508,827 samples, 0.21%)</title><rect x="16.2262%" y="549" width="0.2128%" height="15" fill="rgb(245,21,50)" fg:x="14523712860" fg:w="190508827"/><text x="16.4762%" y="559.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (189,824,671 samples, 0.21%)</title><rect x="16.2270%" y="533" width="0.2121%" height="15" fill="rgb(228,9,43)" fg:x="14524397016" fg:w="189824671"/><text x="16.4770%" y="543.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (189,824,671 samples, 0.21%)</title><rect x="16.2270%" y="517" width="0.2121%" height="15" fill="rgb(208,100,47)" fg:x="14524397016" fg:w="189824671"/><text x="16.4770%" y="527.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (180,508,823 samples, 0.20%)</title><rect x="16.2374%" y="501" width="0.2017%" height="15" fill="rgb(232,26,8)" fg:x="14533712864" fg:w="180508823"/><text x="16.4874%" y="511.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (157,110,141 samples, 0.18%)</title><rect x="16.2635%" y="485" width="0.1755%" height="15" fill="rgb(216,166,38)" fg:x="14557111546" fg:w="157110141"/><text x="16.5135%" y="495.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (156,389,829 samples, 0.17%)</title><rect x="16.2643%" y="469" width="0.1747%" height="15" fill="rgb(251,202,51)" fg:x="14557831858" fg:w="156389829"/><text x="16.5143%" y="479.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (141,312,604 samples, 0.16%)</title><rect x="16.2812%" y="453" width="0.1579%" height="15" fill="rgb(254,216,34)" fg:x="14572909083" fg:w="141312604"/><text x="16.5312%" y="463.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (141,312,604 samples, 0.16%)</title><rect x="16.2812%" y="437" width="0.1579%" height="15" fill="rgb(251,32,27)" fg:x="14572909083" fg:w="141312604"/><text x="16.5312%" y="447.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (131,826,311 samples, 0.15%)</title><rect x="16.2918%" y="421" width="0.1473%" height="15" fill="rgb(208,127,28)" fg:x="14582395376" fg:w="131826311"/><text x="16.5418%" y="431.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (131,826,311 samples, 0.15%)</title><rect x="16.2918%" y="405" width="0.1473%" height="15" fill="rgb(224,137,22)" fg:x="14582395376" fg:w="131826311"/><text x="16.5418%" y="415.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (108,304,925 samples, 0.12%)</title><rect x="16.3181%" y="389" width="0.1210%" height="15" fill="rgb(254,70,32)" fg:x="14605916762" fg:w="108304925"/><text x="16.5681%" y="399.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (79,994,972 samples, 0.09%)</title><rect x="16.3497%" y="373" width="0.0894%" height="15" fill="rgb(229,75,37)" fg:x="14634226715" fg:w="79994972"/><text x="16.5997%" y="383.50"></text></g><g><title>clock_gettime (18,636,767 samples, 0.02%)</title><rect x="16.4182%" y="357" width="0.0208%" height="15" fill="rgb(252,64,23)" fg:x="14695584920" fg:w="18636767"/><text x="16.6682%" y="367.50"></text></g><g><title>__vdso_clock_gettime (13,952,267 samples, 0.02%)</title><rect x="16.4235%" y="341" width="0.0156%" height="15" fill="rgb(232,162,48)" fg:x="14700269420" fg:w="13952267"/><text x="16.6735%" y="351.50"></text></g><g><title>cad_frontend::app::App::draw_special_areas (269,327,585 samples, 0.30%)</title><rect x="16.1539%" y="629" width="0.3009%" height="15" fill="rgb(246,160,12)" fg:x="14458988089" fg:w="269327585"/><text x="16.4039%" y="639.50"></text></g><g><title>gl::Clear (49,281,706 samples, 0.06%)</title><rect x="16.4641%" y="629" width="0.0551%" height="15" fill="rgb(247,166,0)" fg:x="14736673492" fg:w="49281706"/><text x="16.7141%" y="639.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (49,281,706 samples, 0.06%)</title><rect x="16.4641%" y="613" width="0.0551%" height="15" fill="rgb(249,219,21)" fg:x="14736673492" fg:w="49281706"/><text x="16.7141%" y="623.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (47,472,130 samples, 0.05%)</title><rect x="16.4662%" y="597" width="0.0530%" height="15" fill="rgb(205,209,3)" fg:x="14738483068" fg:w="47472130"/><text x="16.7162%" y="607.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (42,806,080 samples, 0.05%)</title><rect x="16.4714%" y="581" width="0.0478%" height="15" fill="rgb(243,44,1)" fg:x="14743149118" fg:w="42806080"/><text x="16.7214%" y="591.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (14,950,290 samples, 0.02%)</title><rect x="16.5025%" y="565" width="0.0167%" height="15" fill="rgb(206,159,16)" fg:x="14771004908" fg:w="14950290"/><text x="16.7525%" y="575.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (13,894,856 samples, 0.02%)</title><rect x="16.5037%" y="549" width="0.0155%" height="15" fill="rgb(244,77,30)" fg:x="14772060342" fg:w="13894856"/><text x="16.7537%" y="559.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,219,116 samples, 0.01%)</title><rect x="16.5089%" y="533" width="0.0103%" height="15" fill="rgb(218,69,12)" fg:x="14776736082" fg:w="9219116"/><text x="16.7589%" y="543.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,219,116 samples, 0.01%)</title><rect x="16.5089%" y="517" width="0.0103%" height="15" fill="rgb(212,87,7)" fg:x="14776736082" fg:w="9219116"/><text x="16.7589%" y="527.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (13,957,661 samples, 0.02%)</title><rect x="16.5799%" y="469" width="0.0156%" height="15" fill="rgb(245,114,25)" fg:x="14840285047" fg:w="13957661"/><text x="16.8299%" y="479.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (9,266,132 samples, 0.01%)</title><rect x="16.5851%" y="453" width="0.0104%" height="15" fill="rgb(210,61,42)" fg:x="14844976576" fg:w="9266132"/><text x="16.8351%" y="463.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (15,231,084 samples, 0.02%)</title><rect x="16.5799%" y="485" width="0.0170%" height="15" fill="rgb(211,52,33)" fg:x="14840285047" fg:w="15231084"/><text x="16.8299%" y="495.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (24,324,189 samples, 0.03%)</title><rect x="16.5748%" y="501" width="0.0272%" height="15" fill="rgb(234,58,33)" fg:x="14835727166" fg:w="24324189"/><text x="16.8248%" y="511.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (26,840,659 samples, 0.03%)</title><rect x="16.6287%" y="421" width="0.0300%" height="15" fill="rgb(220,115,36)" fg:x="14883973879" fg:w="26840659"/><text x="16.8787%" y="431.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (22,110,910 samples, 0.02%)</title><rect x="16.6340%" y="405" width="0.0247%" height="15" fill="rgb(243,153,54)" fg:x="14888703628" fg:w="22110910"/><text x="16.8840%" y="415.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (22,110,910 samples, 0.02%)</title><rect x="16.6340%" y="389" width="0.0247%" height="15" fill="rgb(251,47,18)" fg:x="14888703628" fg:w="22110910"/><text x="16.8840%" y="399.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (17,495,471 samples, 0.02%)</title><rect x="16.6391%" y="373" width="0.0195%" height="15" fill="rgb(242,102,42)" fg:x="14893319067" fg:w="17495471"/><text x="16.8891%" y="383.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (55,442,668 samples, 0.06%)</title><rect x="16.6020%" y="469" width="0.0619%" height="15" fill="rgb(234,31,38)" fg:x="14860051355" fg:w="55442668"/><text x="16.8520%" y="479.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (55,442,668 samples, 0.06%)</title><rect x="16.6020%" y="453" width="0.0619%" height="15" fill="rgb(221,117,51)" fg:x="14860051355" fg:w="55442668"/><text x="16.8520%" y="463.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (50,871,417 samples, 0.06%)</title><rect x="16.6071%" y="437" width="0.0568%" height="15" fill="rgb(212,20,18)" fg:x="14864622606" fg:w="50871417"/><text x="16.8571%" y="447.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (103,623,076 samples, 0.12%)</title><rect x="16.5533%" y="565" width="0.1158%" height="15" fill="rgb(245,133,36)" fg:x="14816472724" fg:w="103623076"/><text x="16.8033%" y="575.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (103,623,076 samples, 0.12%)</title><rect x="16.5533%" y="549" width="0.1158%" height="15" fill="rgb(212,6,19)" fg:x="14816472724" fg:w="103623076"/><text x="16.8033%" y="559.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (98,966,657 samples, 0.11%)</title><rect x="16.5585%" y="533" width="0.1106%" height="15" fill="rgb(218,1,36)" fg:x="14821129143" fg:w="98966657"/><text x="16.8085%" y="543.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (89,683,150 samples, 0.10%)</title><rect x="16.5689%" y="517" width="0.1002%" height="15" fill="rgb(246,84,54)" fg:x="14830412650" fg:w="89683150"/><text x="16.8189%" y="527.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (60,044,445 samples, 0.07%)</title><rect x="16.6020%" y="501" width="0.0671%" height="15" fill="rgb(242,110,6)" fg:x="14860051355" fg:w="60044445"/><text x="16.8520%" y="511.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (60,044,445 samples, 0.07%)</title><rect x="16.6020%" y="485" width="0.0671%" height="15" fill="rgb(214,47,5)" fg:x="14860051355" fg:w="60044445"/><text x="16.8520%" y="495.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (14,811,139 samples, 0.02%)</title><rect x="16.6848%" y="485" width="0.0165%" height="15" fill="rgb(218,159,25)" fg:x="14934178331" fg:w="14811139"/><text x="16.9348%" y="495.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (10,040,230 samples, 0.01%)</title><rect x="16.6901%" y="469" width="0.0112%" height="15" fill="rgb(215,211,28)" fg:x="14938949240" fg:w="10040230"/><text x="16.9401%" y="479.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (24,133,146 samples, 0.03%)</title><rect x="16.6795%" y="501" width="0.0270%" height="15" fill="rgb(238,59,32)" fg:x="14929438963" fg:w="24133146"/><text x="16.9295%" y="511.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (33,537,947 samples, 0.04%)</title><rect x="16.6744%" y="517" width="0.0375%" height="15" fill="rgb(226,82,3)" fg:x="14924851198" fg:w="33537947"/><text x="16.9244%" y="527.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (34,317,221 samples, 0.04%)</title><rect x="16.6744%" y="549" width="0.0383%" height="15" fill="rgb(240,164,32)" fg:x="14924851198" fg:w="34317221"/><text x="16.9244%" y="559.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (34,317,221 samples, 0.04%)</title><rect x="16.6744%" y="533" width="0.0383%" height="15" fill="rgb(232,46,7)" fg:x="14924851198" fg:w="34317221"/><text x="16.9244%" y="543.50"></text></g><g><title>wl_display_dispatch_queue (24,512,599 samples, 0.03%)</title><rect x="16.7135%" y="549" width="0.0274%" height="15" fill="rgb(229,129,53)" fg:x="14959869241" fg:w="24512599"/><text x="16.9635%" y="559.50"></text></g><g><title>wl_display_dispatch_queue_timeout (24,512,599 samples, 0.03%)</title><rect x="16.7135%" y="533" width="0.0274%" height="15" fill="rgb(234,188,29)" fg:x="14959869241" fg:w="24512599"/><text x="16.9635%" y="543.50"></text></g><g><title>wl_display_read_events (15,252,056 samples, 0.02%)</title><rect x="16.7238%" y="517" width="0.0170%" height="15" fill="rgb(246,141,4)" fg:x="14969129784" fg:w="15252056"/><text x="16.9738%" y="527.50"></text></g><g><title>wl_display_roundtrip_queue (10,152,413 samples, 0.01%)</title><rect x="16.7409%" y="549" width="0.0113%" height="15" fill="rgb(229,23,39)" fg:x="14984381840" fg:w="10152413"/><text x="16.9909%" y="559.50"></text></g><g><title>wl_display_dispatch_queue (10,152,413 samples, 0.01%)</title><rect x="16.7409%" y="533" width="0.0113%" height="15" fill="rgb(206,12,3)" fg:x="14984381840" fg:w="10152413"/><text x="16.9909%" y="543.50"></text></g><g><title>wl_display_dispatch_queue_timeout (10,152,413 samples, 0.01%)</title><rect x="16.7409%" y="517" width="0.0113%" height="15" fill="rgb(252,226,20)" fg:x="14984381840" fg:w="10152413"/><text x="16.9909%" y="527.50"></text></g><g><title>[libwayland-client.so.0.24.0] (9,593,636 samples, 0.01%)</title><rect x="16.7522%" y="533" width="0.0107%" height="15" fill="rgb(216,123,35)" fg:x="14994534253" fg:w="9593636"/><text x="17.0022%" y="543.50"></text></g><g><title>[libnvidia-egl-wayland.so.1.1.20] (88,625,077 samples, 0.10%)</title><rect x="16.6691%" y="565" width="0.0990%" height="15" fill="rgb(212,68,40)" fg:x="14920095800" fg:w="88625077"/><text x="16.9191%" y="575.50"></text></g><g><title>wl_proxy_marshal_flags (14,186,624 samples, 0.02%)</title><rect x="16.7522%" y="549" width="0.0158%" height="15" fill="rgb(254,125,32)" fg:x="14994534253" fg:w="14186624"/><text x="17.0022%" y="559.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (222,763,400 samples, 0.25%)</title><rect x="16.5244%" y="613" width="0.2489%" height="15" fill="rgb(253,97,22)" fg:x="14790639162" fg:w="222763400"/><text x="16.7744%" y="623.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (222,763,400 samples, 0.25%)</title><rect x="16.5244%" y="597" width="0.2489%" height="15" fill="rgb(241,101,14)" fg:x="14790639162" fg:w="222763400"/><text x="16.7744%" y="607.50"></text></g><g><title>[libnvidia-egl-wayland.so.1.1.20] (211,993,764 samples, 0.24%)</title><rect x="16.5365%" y="581" width="0.2368%" height="15" fill="rgb(238,103,29)" fg:x="14801408798" fg:w="211993764"/><text x="16.7865%" y="591.50"></text></g><g><title>glfw::Context::swap_buffers (232,773,996 samples, 0.26%)</title><rect x="16.5192%" y="629" width="0.2601%" height="15" fill="rgb(233,195,47)" fg:x="14785955198" fg:w="232773996"/><text x="16.7692%" y="639.50"></text></g><g><title>wl_display_dispatch_queue_pending (14,970,661 samples, 0.02%)</title><rect x="16.7886%" y="581" width="0.0167%" height="15" fill="rgb(246,218,30)" fg:x="15027133588" fg:w="14970661"/><text x="17.0386%" y="591.50"></text></g><g><title>[libwayland-client.so.0.24.0] (14,970,661 samples, 0.02%)</title><rect x="16.7886%" y="565" width="0.0167%" height="15" fill="rgb(219,145,47)" fg:x="15027133588" fg:w="14970661"/><text x="17.0386%" y="575.50"></text></g><g><title>[libwayland-client.so.0.24.0] (14,970,661 samples, 0.02%)</title><rect x="16.7886%" y="549" width="0.0167%" height="15" fill="rgb(243,12,26)" fg:x="15027133588" fg:w="14970661"/><text x="17.0386%" y="559.50"></text></g><g><title>ffi_call (14,970,661 samples, 0.02%)</title><rect x="16.7886%" y="533" width="0.0167%" height="15" fill="rgb(214,87,16)" fg:x="15027133588" fg:w="14970661"/><text x="17.0386%" y="543.50"></text></g><g><title>[libffi.so.8.2.0] (14,970,661 samples, 0.02%)</title><rect x="16.7886%" y="517" width="0.0167%" height="15" fill="rgb(208,99,42)" fg:x="15027133588" fg:w="14970661"/><text x="17.0386%" y="527.50"></text></g><g><title>[libffi.so.8.2.0] (14,970,661 samples, 0.02%)</title><rect x="16.7886%" y="501" width="0.0167%" height="15" fill="rgb(253,99,2)" fg:x="15027133588" fg:w="14970661"/><text x="17.0386%" y="511.50"></text></g><g><title>[libglfw.so.3.4] (9,341,097 samples, 0.01%)</title><rect x="16.7949%" y="485" width="0.0104%" height="15" fill="rgb(220,168,23)" fg:x="15032763152" fg:w="9341097"/><text x="17.0449%" y="495.50"></text></g><g><title>glfw::Glfw::poll_events (24,035,514 samples, 0.03%)</title><rect x="16.7793%" y="629" width="0.0269%" height="15" fill="rgb(242,38,24)" fg:x="15018729194" fg:w="24035514"/><text x="17.0293%" y="639.50"></text></g><g><title>[libglfw.so.3.4] (24,035,514 samples, 0.03%)</title><rect x="16.7793%" y="613" width="0.0269%" height="15" fill="rgb(225,182,9)" fg:x="15018729194" fg:w="24035514"/><text x="17.0293%" y="623.50"></text></g><g><title>[libglfw.so.3.4] (24,035,514 samples, 0.03%)</title><rect x="16.7793%" y="597" width="0.0269%" height="15" fill="rgb(243,178,37)" fg:x="15018729194" fg:w="24035514"/><text x="17.0293%" y="607.50"></text></g><g><title>&lt;rust_ui::render::Text as core::clone::Clone&gt;::clone (9,379,346 samples, 0.01%)</title><rect x="16.8186%" y="597" width="0.0105%" height="15" fill="rgb(232,139,19)" fg:x="15053948835" fg:w="9379346"/><text x="17.0686%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9,379,346 samples, 0.01%)</title><rect x="16.8186%" y="581" width="0.0105%" height="15" fill="rgb(225,201,24)" fg:x="15053948835" fg:w="9379346"/><text x="17.0686%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,379,346 samples, 0.01%)</title><rect x="16.8186%" y="565" width="0.0105%" height="15" fill="rgb(221,47,46)" fg:x="15053948835" fg:w="9379346"/><text x="17.0686%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,379,346 samples, 0.01%)</title><rect x="16.8186%" y="549" width="0.0105%" height="15" fill="rgb(249,23,13)" fg:x="15053948835" fg:w="9379346"/><text x="17.0686%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (9,379,346 samples, 0.01%)</title><rect x="16.8186%" y="533" width="0.0105%" height="15" fill="rgb(219,9,5)" fg:x="15053948835" fg:w="9379346"/><text x="17.0686%" y="543.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (14,128,722 samples, 0.02%)</title><rect x="16.8601%" y="485" width="0.0158%" height="15" fill="rgb(254,171,16)" fg:x="15091067210" fg:w="14128722"/><text x="17.1101%" y="495.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (14,128,722 samples, 0.02%)</title><rect x="16.8601%" y="469" width="0.0158%" height="15" fill="rgb(230,171,20)" fg:x="15091067210" fg:w="14128722"/><text x="17.1101%" y="479.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,437,086 samples, 0.01%)</title><rect x="16.8653%" y="453" width="0.0105%" height="15" fill="rgb(210,71,41)" fg:x="15095758846" fg:w="9437086"/><text x="17.1153%" y="463.50"></text></g><g><title>gl::BufferData (23,505,106 samples, 0.03%)</title><rect x="16.8550%" y="581" width="0.0263%" height="15" fill="rgb(206,173,20)" fg:x="15086482491" fg:w="23505106"/><text x="17.1050%" y="591.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (23,505,106 samples, 0.03%)</title><rect x="16.8550%" y="565" width="0.0263%" height="15" fill="rgb(233,88,34)" fg:x="15086482491" fg:w="23505106"/><text x="17.1050%" y="575.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (23,505,106 samples, 0.03%)</title><rect x="16.8550%" y="549" width="0.0263%" height="15" fill="rgb(223,209,46)" fg:x="15086482491" fg:w="23505106"/><text x="17.1050%" y="559.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (23,505,106 samples, 0.03%)</title><rect x="16.8550%" y="533" width="0.0263%" height="15" fill="rgb(250,43,18)" fg:x="15086482491" fg:w="23505106"/><text x="17.1050%" y="543.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (23,505,106 samples, 0.03%)</title><rect x="16.8550%" y="517" width="0.0263%" height="15" fill="rgb(208,13,10)" fg:x="15086482491" fg:w="23505106"/><text x="17.1050%" y="527.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (23,505,106 samples, 0.03%)</title><rect x="16.8550%" y="501" width="0.0263%" height="15" fill="rgb(212,200,36)" fg:x="15086482491" fg:w="23505106"/><text x="17.1050%" y="511.50"></text></g><g><title>rust_ui::render::sprite::SpriteRenderer&lt;K&gt;::draw (41,003,226 samples, 0.05%)</title><rect x="16.8497%" y="597" width="0.0458%" height="15" fill="rgb(225,90,30)" fg:x="15081818359" fg:w="41003226"/><text x="17.0997%" y="607.50"></text></g><g><title>rust_ui::render::renderer::Renderer&lt;T&gt;::render (91,364,538 samples, 0.10%)</title><rect x="16.8061%" y="629" width="0.1021%" height="15" fill="rgb(236,182,39)" fg:x="15042764708" fg:w="91364538"/><text x="17.0561%" y="639.50"></text></g><g><title>rust_ui::render::renderer::Renderer&lt;T&gt;::render_tree (86,686,362 samples, 0.10%)</title><rect x="16.8113%" y="613" width="0.0968%" height="15" fill="rgb(212,144,35)" fg:x="15047442884" fg:w="86686362"/><text x="17.0613%" y="623.50"></text></g><g><title>taffy::tree::taffy_tree::TaffyTree&lt;NodeContext&gt;::layout (10,713,243 samples, 0.01%)</title><rect x="16.8962%" y="597" width="0.0120%" height="15" fill="rgb(228,63,44)" fg:x="15123416003" fg:w="10713243"/><text x="17.1462%" y="607.50"></text></g><g><title>&lt;slotmap::basic::SlotMap&lt;K,V&gt; as core::ops::index::Index&lt;K&gt;&gt;::index (10,713,243 samples, 0.01%)</title><rect x="16.8962%" y="581" width="0.0120%" height="15" fill="rgb(228,109,6)" fg:x="15123416003" fg:w="10713243"/><text x="17.1462%" y="591.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get (10,713,243 samples, 0.01%)</title><rect x="16.8962%" y="565" width="0.0120%" height="15" fill="rgb(238,117,24)" fg:x="15123416003" fg:w="10713243"/><text x="17.1462%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::filter (10,713,243 samples, 0.01%)</title><rect x="16.8962%" y="549" width="0.0120%" height="15" fill="rgb(242,26,26)" fg:x="15123416003" fg:w="10713243"/><text x="17.1462%" y="559.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get::{{closure}} (10,713,243 samples, 0.01%)</title><rect x="16.8962%" y="533" width="0.0120%" height="15" fill="rgb(221,92,48)" fg:x="15123416003" fg:w="10713243"/><text x="17.1462%" y="543.50"></text></g><g><title>&lt;cad_frontend::app::App as rust_ui::render::renderer::AppState&gt;::generate_layout (9,991,196 samples, 0.01%)</title><rect x="16.9082%" y="597" width="0.0112%" height="15" fill="rgb(209,209,32)" fg:x="15134129246" fg:w="9991196"/><text x="17.1582%" y="607.50"></text></g><g><title>cad_frontend::app::App::base_layer (9,991,196 samples, 0.01%)</title><rect x="16.9082%" y="581" width="0.0112%" height="15" fill="rgb(221,70,22)" fg:x="15134129246" fg:w="9991196"/><text x="17.1582%" y="591.50"></text></g><g><title>rust_ui::render::renderer::Renderer&lt;T&gt;::collect_event_listeners (39,834,855 samples, 0.04%)</title><rect x="16.9193%" y="597" width="0.0445%" height="15" fill="rgb(248,145,5)" fg:x="15144120442" fg:w="39834855"/><text x="17.1693%" y="607.50"></text></g><g><title>taffy::tree::taffy_tree::TaffyTree&lt;NodeContext&gt;::get_node_context (18,611,540 samples, 0.02%)</title><rect x="16.9431%" y="581" width="0.0208%" height="15" fill="rgb(226,116,26)" fg:x="15165343757" fg:w="18611540"/><text x="17.1931%" y="591.50"></text></g><g><title>slotmap::sparse_secondary::SparseSecondaryMap&lt;K,V,S&gt;::get (18,611,540 samples, 0.02%)</title><rect x="16.9431%" y="565" width="0.0208%" height="15" fill="rgb(244,5,17)" fg:x="15165343757" fg:w="18611540"/><text x="17.1931%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (18,611,540 samples, 0.02%)</title><rect x="16.9431%" y="549" width="0.0208%" height="15" fill="rgb(252,159,33)" fg:x="15165343757" fg:w="18611540"/><text x="17.1931%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (18,611,540 samples, 0.02%)</title><rect x="16.9431%" y="533" width="0.0208%" height="15" fill="rgb(206,71,0)" fg:x="15165343757" fg:w="18611540"/><text x="17.1931%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (18,611,540 samples, 0.02%)</title><rect x="16.9431%" y="517" width="0.0208%" height="15" fill="rgb(233,118,54)" fg:x="15165343757" fg:w="18611540"/><text x="17.1931%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13,929,120 samples, 0.02%)</title><rect x="16.9483%" y="501" width="0.0156%" height="15" fill="rgb(234,83,48)" fg:x="15170026177" fg:w="13929120"/><text x="17.1983%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13,929,120 samples, 0.02%)</title><rect x="16.9483%" y="485" width="0.0156%" height="15" fill="rgb(228,3,54)" fg:x="15170026177" fg:w="13929120"/><text x="17.1983%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (13,929,120 samples, 0.02%)</title><rect x="16.9483%" y="469" width="0.0156%" height="15" fill="rgb(226,155,13)" fg:x="15170026177" fg:w="13929120"/><text x="17.1983%" y="479.50"></text></g><g><title>core::intrinsics::likely (13,929,120 samples, 0.02%)</title><rect x="16.9483%" y="453" width="0.0156%" height="15" fill="rgb(241,28,37)" fg:x="15170026177" fg:w="13929120"/><text x="17.1983%" y="463.50"></text></g><g><title>rust_ui::render::renderer::Renderer&lt;T&gt;::update (54,620,533 samples, 0.06%)</title><rect x="16.9082%" y="629" width="0.0610%" height="15" fill="rgb(233,93,10)" fg:x="15134129246" fg:w="54620533"/><text x="17.1582%" y="639.50"></text></g><g><title>rust_ui::render::renderer::Renderer&lt;T&gt;::compute_layout (54,620,533 samples, 0.06%)</title><rect x="16.9082%" y="613" width="0.0610%" height="15" fill="rgb(225,113,19)" fg:x="15134129246" fg:w="54620533"/><text x="17.1582%" y="623.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;4_usize&gt;,nalgebra::base::dimension::Const&lt;4_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,4_usize,4_usize&gt;&gt; as rust_ui::shader::UniformValue&gt;::set_uniform (9,290,601 samples, 0.01%)</title><rect x="16.9692%" y="613" width="0.0104%" height="15" fill="rgb(241,2,18)" fg:x="15188749779" fg:w="9290601"/><text x="17.2192%" y="623.50"></text></g><g><title>gl::UniformMatrix4fv (9,290,601 samples, 0.01%)</title><rect x="16.9692%" y="597" width="0.0104%" height="15" fill="rgb(228,207,21)" fg:x="15188749779" fg:w="9290601"/><text x="17.2192%" y="607.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,290,601 samples, 0.01%)</title><rect x="16.9692%" y="581" width="0.0104%" height="15" fill="rgb(213,211,35)" fg:x="15188749779" fg:w="9290601"/><text x="17.2192%" y="591.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,290,601 samples, 0.01%)</title><rect x="16.9692%" y="565" width="0.0104%" height="15" fill="rgb(209,83,10)" fg:x="15188749779" fg:w="9290601"/><text x="17.2192%" y="575.50"></text></g><g><title>rust_ui::shader::Shader::set_uniform (23,420,432 samples, 0.03%)</title><rect x="16.9692%" y="629" width="0.0262%" height="15" fill="rgb(209,164,1)" fg:x="15188749779" fg:w="23420432"/><text x="17.2192%" y="639.50"></text></g><g><title>rust_ui::shader::Shader::find (14,129,831 samples, 0.02%)</title><rect x="16.9796%" y="613" width="0.0158%" height="15" fill="rgb(213,184,43)" fg:x="15198040380" fg:w="14129831"/><text x="17.2296%" y="623.50"></text></g><g><title>gl::GetUniformLocation (14,129,831 samples, 0.02%)</title><rect x="16.9796%" y="597" width="0.0158%" height="15" fill="rgb(231,61,34)" fg:x="15198040380" fg:w="14129831"/><text x="17.2296%" y="607.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (14,129,831 samples, 0.02%)</title><rect x="16.9796%" y="581" width="0.0158%" height="15" fill="rgb(235,75,3)" fg:x="15198040380" fg:w="14129831"/><text x="17.2296%" y="591.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (14,129,831 samples, 0.02%)</title><rect x="16.9796%" y="565" width="0.0158%" height="15" fill="rgb(220,106,47)" fg:x="15198040380" fg:w="14129831"/><text x="17.2296%" y="575.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (14,022,294 samples, 0.02%)</title><rect x="16.9954%" y="597" width="0.0157%" height="15" fill="rgb(210,196,33)" fg:x="15212170211" fg:w="14022294"/><text x="17.2454%" y="607.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,423,185 samples, 0.01%)</title><rect x="17.0005%" y="581" width="0.0105%" height="15" fill="rgb(229,154,42)" fg:x="15216769320" fg:w="9423185"/><text x="17.2505%" y="591.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,423,185 samples, 0.01%)</title><rect x="17.0005%" y="565" width="0.0105%" height="15" fill="rgb(228,114,26)" fg:x="15216769320" fg:w="9423185"/><text x="17.2505%" y="575.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (781,234,579 samples, 0.87%)</title><rect x="16.1539%" y="677" width="0.8728%" height="15" fill="rgb(208,144,1)" fg:x="14458988089" fg:w="781234579"/><text x="16.4039%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (781,234,579 samples, 0.87%)</title><rect x="16.1539%" y="661" width="0.8728%" height="15" fill="rgb(239,112,37)" fg:x="14458988089" fg:w="781234579"/><text x="16.4039%" y="671.50"></text></g><g><title>cad_frontend::main (781,234,579 samples, 0.87%)</title><rect x="16.1539%" y="645" width="0.8728%" height="15" fill="rgb(210,96,50)" fg:x="14458988089" fg:w="781234579"/><text x="16.4039%" y="655.50"></text></g><g><title>rust_ui::shader::Shader::use_shader (28,052,457 samples, 0.03%)</title><rect x="16.9954%" y="629" width="0.0313%" height="15" fill="rgb(222,178,2)" fg:x="15212170211" fg:w="28052457"/><text x="17.2454%" y="639.50"></text></g><g><title>gl::UseProgram (28,052,457 samples, 0.03%)</title><rect x="16.9954%" y="613" width="0.0313%" height="15" fill="rgb(226,74,18)" fg:x="15212170211" fg:w="28052457"/><text x="17.2454%" y="623.50"></text></g><g><title>_glUseProgram (14,030,163 samples, 0.02%)</title><rect x="17.0110%" y="597" width="0.0157%" height="15" fill="rgb(225,67,54)" fg:x="15226192505" fg:w="14030163"/><text x="17.2610%" y="607.50"></text></g><g><title>[unknown] (887,393,874 samples, 0.99%)</title><rect x="16.0392%" y="693" width="0.9914%" height="15" fill="rgb(251,92,32)" fg:x="14356281937" fg:w="887393874"/><text x="16.2892%" y="703.50"></text></g><g><title>__tls_get_addr (13,927,679 samples, 0.02%)</title><rect x="17.0311%" y="693" width="0.0156%" height="15" fill="rgb(228,149,22)" fg:x="15244154112" fg:w="13927679"/><text x="17.2811%" y="703.50"></text></g><g><title>alloc::ffi::c_str::CString::_from_vec_unchecked (18,588,447 samples, 0.02%)</title><rect x="17.0569%" y="693" width="0.0208%" height="15" fill="rgb(243,54,13)" fg:x="15267275936" fg:w="18588447"/><text x="17.3069%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (36,691,307 samples, 0.04%)</title><rect x="17.0777%" y="693" width="0.0410%" height="15" fill="rgb(243,180,28)" fg:x="15285864383" fg:w="36691307"/><text x="17.3277%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (14,085,428 samples, 0.02%)</title><rect x="17.1187%" y="693" width="0.0157%" height="15" fill="rgb(208,167,24)" fg:x="15322555690" fg:w="14085428"/><text x="17.3687%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (179,264,072 samples, 0.20%)</title><rect x="17.1360%" y="693" width="0.2003%" height="15" fill="rgb(245,73,45)" fg:x="15338023261" fg:w="179264072"/><text x="17.3860%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (151,492,442 samples, 0.17%)</title><rect x="17.1670%" y="677" width="0.1693%" height="15" fill="rgb(237,203,48)" fg:x="15365794891" fg:w="151492442"/><text x="17.4170%" y="687.50"></text></g><g><title>alloc::alloc::Global::grow_impl (151,492,442 samples, 0.17%)</title><rect x="17.1670%" y="661" width="0.1693%" height="15" fill="rgb(211,197,16)" fg:x="15365794891" fg:w="151492442"/><text x="17.4170%" y="671.50"></text></g><g><title>alloc::alloc::realloc (151,492,442 samples, 0.17%)</title><rect x="17.1670%" y="645" width="0.1693%" height="15" fill="rgb(243,99,51)" fg:x="15365794891" fg:w="151492442"/><text x="17.4170%" y="655.50"></text></g><g><title>__rustc::__rdl_realloc (151,492,442 samples, 0.17%)</title><rect x="17.1670%" y="629" width="0.1693%" height="15" fill="rgb(215,123,29)" fg:x="15365794891" fg:w="151492442"/><text x="17.4170%" y="639.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (151,492,442 samples, 0.17%)</title><rect x="17.1670%" y="613" width="0.1693%" height="15" fill="rgb(239,186,37)" fg:x="15365794891" fg:w="151492442"/><text x="17.4170%" y="623.50"></text></g><g><title>realloc (142,069,324 samples, 0.16%)</title><rect x="17.1775%" y="597" width="0.1587%" height="15" fill="rgb(252,136,39)" fg:x="15375218009" fg:w="142069324"/><text x="17.4275%" y="607.50"></text></g><g><title>[libc.so.6] (128,336,593 samples, 0.14%)</title><rect x="17.1929%" y="581" width="0.1434%" height="15" fill="rgb(223,213,32)" fg:x="15388950740" fg:w="128336593"/><text x="17.4429%" y="591.50"></text></g><g><title>[libc.so.6] (128,336,593 samples, 0.14%)</title><rect x="17.1929%" y="565" width="0.1434%" height="15" fill="rgb(233,115,5)" fg:x="15388950740" fg:w="128336593"/><text x="17.4429%" y="575.50"></text></g><g><title>[libc.so.6] (78,309,050 samples, 0.09%)</title><rect x="17.2488%" y="549" width="0.0875%" height="15" fill="rgb(207,226,44)" fg:x="15438978283" fg:w="78309050"/><text x="17.4988%" y="559.50"></text></g><g><title>cad_frontend::entity_picker::EntityPicker::disable_writing (35,582,655 samples, 0.04%)</title><rect x="17.3456%" y="661" width="0.0398%" height="15" fill="rgb(208,126,0)" fg:x="15525691587" fg:w="35582655"/><text x="17.5956%" y="671.50"></text></g><g><title>gl::BindFramebuffer (35,582,655 samples, 0.04%)</title><rect x="17.3456%" y="645" width="0.0398%" height="15" fill="rgb(244,66,21)" fg:x="15525691587" fg:w="35582655"/><text x="17.5956%" y="655.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (35,582,655 samples, 0.04%)</title><rect x="17.3456%" y="629" width="0.0398%" height="15" fill="rgb(222,97,12)" fg:x="15525691587" fg:w="35582655"/><text x="17.5956%" y="639.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (35,582,655 samples, 0.04%)</title><rect x="17.3456%" y="613" width="0.0398%" height="15" fill="rgb(219,213,19)" fg:x="15525691587" fg:w="35582655"/><text x="17.5956%" y="623.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (35,582,655 samples, 0.04%)</title><rect x="17.3456%" y="597" width="0.0398%" height="15" fill="rgb(252,169,30)" fg:x="15525691587" fg:w="35582655"/><text x="17.5956%" y="607.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (35,582,655 samples, 0.04%)</title><rect x="17.3456%" y="581" width="0.0398%" height="15" fill="rgb(206,32,51)" fg:x="15525691587" fg:w="35582655"/><text x="17.5956%" y="591.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (35,582,655 samples, 0.04%)</title><rect x="17.3456%" y="565" width="0.0398%" height="15" fill="rgb(250,172,42)" fg:x="15525691587" fg:w="35582655"/><text x="17.5956%" y="575.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (21,513,490 samples, 0.02%)</title><rect x="17.3614%" y="549" width="0.0240%" height="15" fill="rgb(209,34,43)" fg:x="15539760752" fg:w="21513490"/><text x="17.6114%" y="559.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (16,823,324 samples, 0.02%)</title><rect x="17.3666%" y="533" width="0.0188%" height="15" fill="rgb(223,11,35)" fg:x="15544450918" fg:w="16823324"/><text x="17.6166%" y="543.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (12,107,552 samples, 0.01%)</title><rect x="17.3719%" y="517" width="0.0135%" height="15" fill="rgb(251,219,26)" fg:x="15549166690" fg:w="12107552"/><text x="17.6219%" y="527.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (12,107,552 samples, 0.01%)</title><rect x="17.3719%" y="501" width="0.0135%" height="15" fill="rgb(231,119,3)" fg:x="15549166690" fg:w="12107552"/><text x="17.6219%" y="511.50"></text></g><g><title>cad_frontend::app::App::draw_special_areas (42,681,906 samples, 0.05%)</title><rect x="17.3428%" y="693" width="0.0477%" height="15" fill="rgb(216,97,11)" fg:x="15523168977" fg:w="42681906"/><text x="17.5928%" y="703.50"></text></g><g><title>cad_frontend::sketch_renderer::SketchPicker::compute_pick_locations (42,681,906 samples, 0.05%)</title><rect x="17.3428%" y="677" width="0.0477%" height="15" fill="rgb(223,59,9)" fg:x="15523168977" fg:w="42681906"/><text x="17.5928%" y="687.50"></text></g><g><title>clock_gettime (9,294,840 samples, 0.01%)</title><rect x="17.3965%" y="693" width="0.0104%" height="15" fill="rgb(233,93,31)" fg:x="15571206648" fg:w="9294840"/><text x="17.6465%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,194,567,672 samples, 1.33%)</title><rect x="23.8051%" y="613" width="1.3346%" height="15" fill="rgb(239,81,33)" fg:x="21307422293" fg:w="1194567672"/><text x="24.0551%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3,739,248,612 samples, 4.18%)</title><rect x="22.4088%" y="629" width="4.1776%" height="15" fill="rgb(213,120,34)" fg:x="20057592814" fg:w="3739248612"/><text x="22.6588%" y="639.50">&lt;core..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,294,851,461 samples, 1.45%)</title><rect x="25.1397%" y="613" width="1.4466%" height="15" fill="rgb(243,49,53)" fg:x="22501989965" fg:w="1294851461"/><text x="25.3897%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5,842,038,083 samples, 6.53%)</title><rect x="30.5547%" y="613" width="6.5269%" height="15" fill="rgb(247,216,33)" fg:x="27348808941" fg:w="5842038083"/><text x="30.8047%" y="623.50">core::num..</text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (19,400,804,564 samples, 21.68%)</title><rect x="18.2370%" y="677" width="21.6750%" height="15" fill="rgb(226,26,14)" fg:x="16323475920" fg:w="19400804564"/><text x="18.4870%" y="687.50">&lt;std::hash::random::DefaultHasher ..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (19,400,804,564 samples, 21.68%)</title><rect x="18.2370%" y="661" width="21.6750%" height="15" fill="rgb(215,49,53)" fg:x="16323475920" fg:w="19400804564"/><text x="18.4870%" y="671.50">&lt;core::hash::sip::SipHasher13 as c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (19,400,804,564 samples, 21.68%)</title><rect x="18.2370%" y="645" width="21.6750%" height="15" fill="rgb(245,162,40)" fg:x="16323475920" fg:w="19400804564"/><text x="18.4870%" y="655.50">&lt;core::hash::sip::Hasher&lt;S&gt; as cor..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11,927,439,058 samples, 13.33%)</title><rect x="26.5864%" y="629" width="13.3256%" height="15" fill="rgb(229,68,17)" fg:x="23796841426" fg:w="11927439058"/><text x="26.8364%" y="639.50">&lt;core::hash::sip::Si..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2,533,433,460 samples, 2.83%)</title><rect x="37.0816%" y="613" width="2.8304%" height="15" fill="rgb(213,182,10)" fg:x="33190847024" fg:w="2533433460"/><text x="37.3316%" y="623.50">co..</text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (3,697,362,199 samples, 4.13%)</title><rect x="39.9120%" y="677" width="4.1308%" height="15" fill="rgb(245,125,30)" fg:x="35724280484" fg:w="3697362199"/><text x="40.1620%" y="687.50">&lt;std:..</text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1,312,008,155 samples, 1.47%)</title><rect x="42.5769%" y="661" width="1.4658%" height="15" fill="rgb(232,202,2)" fg:x="38109634528" fg:w="1312008155"/><text x="42.8269%" y="671.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1,312,008,155 samples, 1.47%)</title><rect x="42.5769%" y="645" width="1.4658%" height="15" fill="rgb(237,140,51)" fg:x="38109634528" fg:w="1312008155"/><text x="42.8269%" y="655.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1,312,008,155 samples, 1.47%)</title><rect x="42.5769%" y="629" width="1.4658%" height="15" fill="rgb(236,157,25)" fg:x="38109634528" fg:w="1312008155"/><text x="42.8269%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (606,440,963 samples, 0.68%)</title><rect x="44.0427%" y="597" width="0.6775%" height="15" fill="rgb(219,209,0)" fg:x="39421642683" fg:w="606440963"/><text x="44.2927%" y="607.50"></text></g><g><title>core::hash::sip::u8to64_le (606,440,963 samples, 0.68%)</title><rect x="44.0427%" y="581" width="0.6775%" height="15" fill="rgb(240,116,54)" fg:x="39421642683" fg:w="606440963"/><text x="44.2927%" y="591.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,231,102,711 samples, 1.38%)</title><rect x="44.0427%" y="629" width="1.3754%" height="15" fill="rgb(216,10,36)" fg:x="39421642683" fg:w="1231102711"/><text x="44.2927%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,231,102,711 samples, 1.38%)</title><rect x="44.0427%" y="613" width="1.3754%" height="15" fill="rgb(222,72,44)" fg:x="39421642683" fg:w="1231102711"/><text x="44.2927%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (624,661,748 samples, 0.70%)</title><rect x="44.7203%" y="597" width="0.6979%" height="15" fill="rgb(232,159,9)" fg:x="40028083646" fg:w="624661748"/><text x="44.9703%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (624,661,748 samples, 0.70%)</title><rect x="44.7203%" y="581" width="0.6979%" height="15" fill="rgb(210,39,32)" fg:x="40028083646" fg:w="624661748"/><text x="44.9703%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (624,661,748 samples, 0.70%)</title><rect x="44.7203%" y="565" width="0.6979%" height="15" fill="rgb(216,194,45)" fg:x="40028083646" fg:w="624661748"/><text x="44.9703%" y="575.50"></text></g><g><title>core::hash::Hasher::write_u32 (624,661,748 samples, 0.70%)</title><rect x="44.7203%" y="549" width="0.6979%" height="15" fill="rgb(218,18,35)" fg:x="40028083646" fg:w="624661748"/><text x="44.9703%" y="559.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (624,661,748 samples, 0.70%)</title><rect x="44.7203%" y="533" width="0.6979%" height="15" fill="rgb(207,83,51)" fg:x="40028083646" fg:w="624661748"/><text x="44.9703%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (624,661,748 samples, 0.70%)</title><rect x="44.7203%" y="517" width="0.6979%" height="15" fill="rgb(225,63,43)" fg:x="40028083646" fg:w="624661748"/><text x="44.9703%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (1,896,687,033 samples, 2.12%)</title><rect x="44.0427%" y="661" width="2.1190%" height="15" fill="rgb(207,57,36)" fg:x="39421642683" fg:w="1896687033"/><text x="44.2927%" y="671.50">c..</text></g><g><title>core::hash::Hasher::write_u32 (1,896,687,033 samples, 2.12%)</title><rect x="44.0427%" y="645" width="2.1190%" height="15" fill="rgb(216,99,33)" fg:x="39421642683" fg:w="1896687033"/><text x="44.2927%" y="655.50">c..</text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (665,584,322 samples, 0.74%)</title><rect x="45.4182%" y="629" width="0.7436%" height="15" fill="rgb(225,42,16)" fg:x="40652745394" fg:w="665584322"/><text x="45.6682%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (556,476,288 samples, 0.62%)</title><rect x="46.1671%" y="597" width="0.6217%" height="15" fill="rgb(220,201,45)" fg:x="41323073729" fg:w="556476288"/><text x="46.4171%" y="607.50"></text></g><g><title>core::hash::sip::u8to64_le (556,476,288 samples, 0.62%)</title><rect x="46.1671%" y="581" width="0.6217%" height="15" fill="rgb(225,33,4)" fg:x="41323073729" fg:w="556476288"/><text x="46.4171%" y="591.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1,129,587,474 samples, 1.26%)</title><rect x="46.1618%" y="629" width="1.2620%" height="15" fill="rgb(224,33,50)" fg:x="41318329716" fg:w="1129587474"/><text x="46.4118%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,129,587,474 samples, 1.26%)</title><rect x="46.1618%" y="613" width="1.2620%" height="15" fill="rgb(246,198,51)" fg:x="41318329716" fg:w="1129587474"/><text x="46.4118%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (568,367,173 samples, 0.63%)</title><rect x="46.7888%" y="597" width="0.6350%" height="15" fill="rgb(205,22,4)" fg:x="41879550017" fg:w="568367173"/><text x="47.0388%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (568,367,173 samples, 0.63%)</title><rect x="46.7888%" y="581" width="0.6350%" height="15" fill="rgb(206,3,8)" fg:x="41879550017" fg:w="568367173"/><text x="47.0388%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (568,367,173 samples, 0.63%)</title><rect x="46.7888%" y="565" width="0.6350%" height="15" fill="rgb(251,23,15)" fg:x="41879550017" fg:w="568367173"/><text x="47.0388%" y="575.50"></text></g><g><title>core::hash::Hasher::write_u32 (568,367,173 samples, 0.63%)</title><rect x="46.7888%" y="549" width="0.6350%" height="15" fill="rgb(252,88,28)" fg:x="41879550017" fg:w="568367173"/><text x="47.0388%" y="559.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (568,367,173 samples, 0.63%)</title><rect x="46.7888%" y="533" width="0.6350%" height="15" fill="rgb(212,127,14)" fg:x="41879550017" fg:w="568367173"/><text x="47.0388%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (568,367,173 samples, 0.63%)</title><rect x="46.7888%" y="517" width="0.6350%" height="15" fill="rgb(247,145,37)" fg:x="41879550017" fg:w="568367173"/><text x="47.0388%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (27,403,533,410 samples, 30.62%)</title><rect x="17.4069%" y="693" width="30.6158%" height="15" fill="rgb(209,117,53)" fg:x="15580501488" fg:w="27403533410"/><text x="17.6569%" y="703.50">core::hash::BuildHasher::hash_one</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3,562,392,215 samples, 3.98%)</title><rect x="44.0427%" y="677" width="3.9800%" height="15" fill="rgb(212,90,42)" fg:x="39421642683" fg:w="3562392215"/><text x="44.2927%" y="687.50">core..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1,665,705,182 samples, 1.86%)</title><rect x="46.1618%" y="661" width="1.8610%" height="15" fill="rgb(218,164,37)" fg:x="41318329716" fg:w="1665705182"/><text x="46.4118%" y="671.50">c..</text></g><g><title>core::hash::Hasher::write_u32 (1,665,705,182 samples, 1.86%)</title><rect x="46.1618%" y="645" width="1.8610%" height="15" fill="rgb(246,65,34)" fg:x="41318329716" fg:w="1665705182"/><text x="46.4118%" y="655.50">c..</text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (536,117,708 samples, 0.60%)</title><rect x="47.4238%" y="629" width="0.5990%" height="15" fill="rgb(231,100,33)" fg:x="42447917190" fg:w="536117708"/><text x="47.6738%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;taffy::tree::taffy_tree::TaffyTree&lt;rust_ui::render::renderer::NodeContext&lt;cad_frontend::app::App&gt;&gt;&gt; (10,746,715 samples, 0.01%)</title><rect x="48.0280%" y="693" width="0.0120%" height="15" fill="rgb(228,126,14)" fg:x="42988723031" fg:w="10746715"/><text x="48.2780%" y="703.50"></text></g><g><title>&lt;u32 as core::ops::bit::Not&gt;::not (9,486,911 samples, 0.01%)</title><rect x="48.1969%" y="613" width="0.0106%" height="15" fill="rgb(215,173,21)" fg:x="43139950760" fg:w="9486911"/><text x="48.4469%" y="623.50"></text></g><g><title>&lt;u32 as core::ops::bit::Shr&gt;::shr (42,217,780 samples, 0.05%)</title><rect x="48.2075%" y="613" width="0.0472%" height="15" fill="rgb(210,6,40)" fg:x="43149437671" fg:w="42217780"/><text x="48.4575%" y="623.50"></text></g><g><title>floorf (252,895,108 samples, 0.28%)</title><rect x="48.0451%" y="693" width="0.2825%" height="15" fill="rgb(212,48,18)" fg:x="43004093109" fg:w="252895108"/><text x="48.2951%" y="703.50"></text></g><g><title>compiler_builtins::math::full_availability::floorf (196,357,575 samples, 0.22%)</title><rect x="48.1083%" y="677" width="0.2194%" height="15" fill="rgb(230,214,11)" fg:x="43060630642" fg:w="196357575"/><text x="48.3583%" y="687.50"></text></g><g><title>compiler_builtins::math::libm_math::floor::floorf (196,357,575 samples, 0.22%)</title><rect x="48.1083%" y="661" width="0.2194%" height="15" fill="rgb(254,105,39)" fg:x="43060630642" fg:w="196357575"/><text x="48.3583%" y="671.50"></text></g><g><title>compiler_builtins::math::libm_math::generic::floor::floor (196,357,575 samples, 0.22%)</title><rect x="48.1083%" y="645" width="0.2194%" height="15" fill="rgb(245,158,5)" fg:x="43060630642" fg:w="196357575"/><text x="48.3583%" y="655.50"></text></g><g><title>compiler_builtins::math::libm_math::generic::floor::floor_status (196,357,575 samples, 0.22%)</title><rect x="48.1083%" y="629" width="0.2194%" height="15" fill="rgb(249,208,11)" fg:x="43060630642" fg:w="196357575"/><text x="48.3583%" y="639.50"></text></g><g><title>compiler_builtins::math::libm_math::support::float_traits::Float::exp_unbiased (65,332,766 samples, 0.07%)</title><rect x="48.2547%" y="613" width="0.0730%" height="15" fill="rgb(210,39,28)" fg:x="43191655451" fg:w="65332766"/><text x="48.5047%" y="623.50"></text></g><g><title>compiler_builtins::math::libm_math::support::float_traits::Float::ex (65,332,766 samples, 0.07%)</title><rect x="48.2547%" y="597" width="0.0730%" height="15" fill="rgb(211,56,53)" fg:x="43191655451" fg:w="65332766"/><text x="48.5047%" y="607.50"></text></g><g><title>&lt;u32 as core::ops::bit::Shr&gt;::shr (28,188,153 samples, 0.03%)</title><rect x="48.2962%" y="581" width="0.0315%" height="15" fill="rgb(226,201,30)" fg:x="43228800064" fg:w="28188153"/><text x="48.5462%" y="591.50"></text></g><g><title>rust_ui::render::circle::CircleRenderer::draw_3d_oriented (18,706,356 samples, 0.02%)</title><rect x="48.3381%" y="693" width="0.0209%" height="15" fill="rgb(239,101,34)" fg:x="43266350266" fg:w="18706356"/><text x="48.5881%" y="703.50"></text></g><g><title>rust_ui::shader::Shader::use_shader (9,408,204 samples, 0.01%)</title><rect x="48.3485%" y="677" width="0.0105%" height="15" fill="rgb(226,209,5)" fg:x="43275648418" fg:w="9408204"/><text x="48.5985%" y="687.50"></text></g><g><title>gl::UseProgram (9,408,204 samples, 0.01%)</title><rect x="48.3485%" y="661" width="0.0105%" height="15" fill="rgb(250,105,47)" fg:x="43275648418" fg:w="9408204"/><text x="48.5985%" y="671.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,408,204 samples, 0.01%)</title><rect x="48.3485%" y="645" width="0.0105%" height="15" fill="rgb(230,72,3)" fg:x="43275648418" fg:w="9408204"/><text x="48.5985%" y="655.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,408,204 samples, 0.01%)</title><rect x="48.3485%" y="629" width="0.0105%" height="15" fill="rgb(232,218,39)" fg:x="43275648418" fg:w="9408204"/><text x="48.5985%" y="639.50"></text></g><g><title>gl::BufferData (46,746,620 samples, 0.05%)</title><rect x="48.3599%" y="677" width="0.0522%" height="15" fill="rgb(248,166,6)" fg:x="43285819371" fg:w="46746620"/><text x="48.6099%" y="687.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (46,746,620 samples, 0.05%)</title><rect x="48.3599%" y="661" width="0.0522%" height="15" fill="rgb(247,89,20)" fg:x="43285819371" fg:w="46746620"/><text x="48.6099%" y="671.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (46,746,620 samples, 0.05%)</title><rect x="48.3599%" y="645" width="0.0522%" height="15" fill="rgb(248,130,54)" fg:x="43285819371" fg:w="46746620"/><text x="48.6099%" y="655.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (46,746,620 samples, 0.05%)</title><rect x="48.3599%" y="629" width="0.0522%" height="15" fill="rgb(234,196,4)" fg:x="43285819371" fg:w="46746620"/><text x="48.6099%" y="639.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (46,746,620 samples, 0.05%)</title><rect x="48.3599%" y="613" width="0.0522%" height="15" fill="rgb(250,143,31)" fg:x="43285819371" fg:w="46746620"/><text x="48.6099%" y="623.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (32,770,051 samples, 0.04%)</title><rect x="48.3755%" y="597" width="0.0366%" height="15" fill="rgb(211,110,34)" fg:x="43299795940" fg:w="32770051"/><text x="48.6255%" y="607.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (14,811,712 samples, 0.02%)</title><rect x="48.3956%" y="581" width="0.0165%" height="15" fill="rgb(215,124,48)" fg:x="43317754279" fg:w="14811712"/><text x="48.6456%" y="591.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (14,811,712 samples, 0.02%)</title><rect x="48.3956%" y="565" width="0.0165%" height="15" fill="rgb(216,46,13)" fg:x="43317754279" fg:w="14811712"/><text x="48.6456%" y="575.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (14,811,712 samples, 0.02%)</title><rect x="48.3956%" y="549" width="0.0165%" height="15" fill="rgb(205,184,25)" fg:x="43317754279" fg:w="14811712"/><text x="48.6456%" y="559.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,985,869 samples, 0.01%)</title><rect x="48.4010%" y="533" width="0.0112%" height="15" fill="rgb(228,1,10)" fg:x="43322580122" fg:w="9985869"/><text x="48.6510%" y="543.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,331,491 samples, 0.01%)</title><rect x="48.4017%" y="517" width="0.0104%" height="15" fill="rgb(213,116,27)" fg:x="43323234500" fg:w="9331491"/><text x="48.6517%" y="527.50"></text></g><g><title>gl::DrawArrays (45,376,427 samples, 0.05%)</title><rect x="48.4121%" y="677" width="0.0507%" height="15" fill="rgb(241,95,50)" fg:x="43332565991" fg:w="45376427"/><text x="48.6621%" y="687.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (45,376,427 samples, 0.05%)</title><rect x="48.4121%" y="661" width="0.0507%" height="15" fill="rgb(238,48,32)" fg:x="43332565991" fg:w="45376427"/><text x="48.6621%" y="671.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (45,376,427 samples, 0.05%)</title><rect x="48.4121%" y="645" width="0.0507%" height="15" fill="rgb(235,113,49)" fg:x="43332565991" fg:w="45376427"/><text x="48.6621%" y="655.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (39,484,465 samples, 0.04%)</title><rect x="48.4187%" y="629" width="0.0441%" height="15" fill="rgb(205,127,43)" fg:x="43338457953" fg:w="39484465"/><text x="48.6687%" y="639.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (15,335,749 samples, 0.02%)</title><rect x="48.4457%" y="613" width="0.0171%" height="15" fill="rgb(250,162,2)" fg:x="43362606669" fg:w="15335749"/><text x="48.6957%" y="623.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (15,335,749 samples, 0.02%)</title><rect x="48.4457%" y="597" width="0.0171%" height="15" fill="rgb(220,13,41)" fg:x="43362606669" fg:w="15335749"/><text x="48.6957%" y="607.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (10,558,284 samples, 0.01%)</title><rect x="48.4510%" y="581" width="0.0118%" height="15" fill="rgb(249,221,25)" fg:x="43367384134" fg:w="10558284"/><text x="48.7010%" y="591.50"></text></g><g><title>rust_ui::shader::Shader::set_uniform (18,622,733 samples, 0.02%)</title><rect x="48.4628%" y="677" width="0.0208%" height="15" fill="rgb(215,208,19)" fg:x="43377942418" fg:w="18622733"/><text x="48.7128%" y="687.50"></text></g><g><title>rust_ui::shader::Shader::find (13,974,213 samples, 0.02%)</title><rect x="48.4680%" y="661" width="0.0156%" height="15" fill="rgb(236,175,2)" fg:x="43382590938" fg:w="13974213"/><text x="48.7180%" y="671.50"></text></g><g><title>gl::GetUniformLocation (9,399,234 samples, 0.01%)</title><rect x="48.4731%" y="645" width="0.0105%" height="15" fill="rgb(241,52,2)" fg:x="43387165917" fg:w="9399234"/><text x="48.7231%" y="655.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,399,234 samples, 0.01%)</title><rect x="48.4731%" y="629" width="0.0105%" height="15" fill="rgb(248,140,14)" fg:x="43387165917" fg:w="9399234"/><text x="48.7231%" y="639.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,399,234 samples, 0.01%)</title><rect x="48.4731%" y="613" width="0.0105%" height="15" fill="rgb(253,22,42)" fg:x="43387165917" fg:w="9399234"/><text x="48.7231%" y="623.50"></text></g><g><title>rust_ui::render::line::LineRenderer::draw_3d (116,146,495 samples, 0.13%)</title><rect x="48.3590%" y="693" width="0.1298%" height="15" fill="rgb(234,61,47)" fg:x="43285056622" fg:w="116146495"/><text x="48.6090%" y="703.50"></text></g><g><title>gl::BindVertexArray (14,676,939 samples, 0.02%)</title><rect x="48.4888%" y="677" width="0.0164%" height="15" fill="rgb(208,226,15)" fg:x="43401203117" fg:w="14676939"/><text x="48.7388%" y="687.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (14,676,939 samples, 0.02%)</title><rect x="48.4888%" y="661" width="0.0164%" height="15" fill="rgb(217,221,4)" fg:x="43401203117" fg:w="14676939"/><text x="48.7388%" y="671.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (18,310,960 samples, 0.02%)</title><rect x="48.5423%" y="549" width="0.0205%" height="15" fill="rgb(212,174,34)" fg:x="43449057800" fg:w="18310960"/><text x="48.7923%" y="559.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (27,813,595 samples, 0.03%)</title><rect x="48.5370%" y="565" width="0.0311%" height="15" fill="rgb(253,83,4)" fg:x="43444312242" fg:w="27813595"/><text x="48.7870%" y="575.50"></text></g><g><title>gl::BufferData (67,815,739 samples, 0.08%)</title><rect x="48.5052%" y="677" width="0.0758%" height="15" fill="rgb(250,195,49)" fg:x="43415880056" fg:w="67815739"/><text x="48.7552%" y="687.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (67,815,739 samples, 0.08%)</title><rect x="48.5052%" y="661" width="0.0758%" height="15" fill="rgb(241,192,25)" fg:x="43415880056" fg:w="67815739"/><text x="48.7552%" y="671.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (67,815,739 samples, 0.08%)</title><rect x="48.5052%" y="645" width="0.0758%" height="15" fill="rgb(208,124,10)" fg:x="43415880056" fg:w="67815739"/><text x="48.7552%" y="655.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (67,815,739 samples, 0.08%)</title><rect x="48.5052%" y="629" width="0.0758%" height="15" fill="rgb(222,33,0)" fg:x="43415880056" fg:w="67815739"/><text x="48.7552%" y="639.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (67,815,739 samples, 0.08%)</title><rect x="48.5052%" y="613" width="0.0758%" height="15" fill="rgb(234,209,28)" fg:x="43415880056" fg:w="67815739"/><text x="48.7552%" y="623.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (66,388,444 samples, 0.07%)</title><rect x="48.5068%" y="597" width="0.0742%" height="15" fill="rgb(224,11,23)" fg:x="43417307351" fg:w="66388444"/><text x="48.7568%" y="607.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (39,383,553 samples, 0.04%)</title><rect x="48.5370%" y="581" width="0.0440%" height="15" fill="rgb(232,99,1)" fg:x="43444312242" fg:w="39383553"/><text x="48.7870%" y="591.50"></text></g><g><title>vsnprintf (11,569,958 samples, 0.01%)</title><rect x="48.5680%" y="565" width="0.0129%" height="15" fill="rgb(237,95,45)" fg:x="43472125837" fg:w="11569958"/><text x="48.8180%" y="575.50"></text></g><g><title>[libc.so.6] (11,569,958 samples, 0.01%)</title><rect x="48.5680%" y="549" width="0.0129%" height="15" fill="rgb(208,109,11)" fg:x="43472125837" fg:w="11569958"/><text x="48.8180%" y="559.50"></text></g><g><title>gl::DrawArrays (32,131,300 samples, 0.04%)</title><rect x="48.5810%" y="677" width="0.0359%" height="15" fill="rgb(216,190,48)" fg:x="43483695795" fg:w="32131300"/><text x="48.8310%" y="687.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (27,428,013 samples, 0.03%)</title><rect x="48.5862%" y="661" width="0.0306%" height="15" fill="rgb(251,171,36)" fg:x="43488399082" fg:w="27428013"/><text x="48.8362%" y="671.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (27,428,013 samples, 0.03%)</title><rect x="48.5862%" y="645" width="0.0306%" height="15" fill="rgb(230,62,22)" fg:x="43488399082" fg:w="27428013"/><text x="48.8362%" y="655.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (27,428,013 samples, 0.03%)</title><rect x="48.5862%" y="629" width="0.0306%" height="15" fill="rgb(225,114,35)" fg:x="43488399082" fg:w="27428013"/><text x="48.8362%" y="639.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (18,202,929 samples, 0.02%)</title><rect x="48.5965%" y="613" width="0.0203%" height="15" fill="rgb(215,118,42)" fg:x="43497624166" fg:w="18202929"/><text x="48.8465%" y="623.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (17,468,498 samples, 0.02%)</title><rect x="48.5973%" y="597" width="0.0195%" height="15" fill="rgb(243,119,21)" fg:x="43498358597" fg:w="17468498"/><text x="48.8473%" y="607.50"></text></g><g><title>rust_ui::shader::Shader::set_uniform (13,941,748 samples, 0.02%)</title><rect x="48.6169%" y="677" width="0.0156%" height="15" fill="rgb(252,177,53)" fg:x="43515827095" fg:w="13941748"/><text x="48.8669%" y="687.50"></text></g><g><title>rust_ui::shader::Shader::find (9,308,671 samples, 0.01%)</title><rect x="48.6220%" y="661" width="0.0104%" height="15" fill="rgb(237,209,29)" fg:x="43520460172" fg:w="9308671"/><text x="48.8720%" y="671.50"></text></g><g><title>rust_ui::render::point::PointRenderer::draw_3d (130,015,143 samples, 0.15%)</title><rect x="48.4888%" y="693" width="0.1453%" height="15" fill="rgb(212,65,23)" fg:x="43401203117" fg:w="130015143"/><text x="48.7388%" y="703.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (23,205,976 samples, 0.03%)</title><rect x="48.6706%" y="677" width="0.0259%" height="15" fill="rgb(230,222,46)" fg:x="43563920685" fg:w="23205976"/><text x="48.9206%" y="687.50"></text></g><g><title>core::str::validations::next_code_point (23,205,976 samples, 0.03%)</title><rect x="48.6706%" y="661" width="0.0259%" height="15" fill="rgb(215,135,32)" fg:x="43563920685" fg:w="23205976"/><text x="48.9206%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23,205,976 samples, 0.03%)</title><rect x="48.6706%" y="645" width="0.0259%" height="15" fill="rgb(246,101,22)" fg:x="43563920685" fg:w="23205976"/><text x="48.9206%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (9,340,335 samples, 0.01%)</title><rect x="48.6965%" y="677" width="0.0104%" height="15" fill="rgb(206,107,13)" fg:x="43587126661" fg:w="9340335"/><text x="48.9465%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9,340,335 samples, 0.01%)</title><rect x="48.6965%" y="661" width="0.0104%" height="15" fill="rgb(250,100,44)" fg:x="43587126661" fg:w="9340335"/><text x="48.9465%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9,340,335 samples, 0.01%)</title><rect x="48.6965%" y="645" width="0.0104%" height="15" fill="rgb(231,147,38)" fg:x="43587126661" fg:w="9340335"/><text x="48.9465%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9,340,335 samples, 0.01%)</title><rect x="48.6965%" y="629" width="0.0104%" height="15" fill="rgb(229,8,40)" fg:x="43587126661" fg:w="9340335"/><text x="48.9465%" y="639.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (28,816,539 samples, 0.03%)</title><rect x="48.7173%" y="661" width="0.0322%" height="15" fill="rgb(221,135,30)" fg:x="43605705647" fg:w="28816539"/><text x="48.9673%" y="671.50"></text></g><g><title>gl::BindBuffer (42,707,249 samples, 0.05%)</title><rect x="48.7122%" y="677" width="0.0477%" height="15" fill="rgb(249,193,18)" fg:x="43601157185" fg:w="42707249"/><text x="48.9622%" y="687.50"></text></g><g><title>_glBindBuffer (9,342,248 samples, 0.01%)</title><rect x="48.7495%" y="661" width="0.0104%" height="15" fill="rgb(209,133,39)" fg:x="43634522186" fg:w="9342248"/><text x="48.9995%" y="671.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (79,663,514 samples, 0.09%)</title><rect x="48.7599%" y="661" width="0.0890%" height="15" fill="rgb(232,100,14)" fg:x="43643864434" fg:w="79663514"/><text x="49.0099%" y="671.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (75,135,504 samples, 0.08%)</title><rect x="48.7650%" y="645" width="0.0839%" height="15" fill="rgb(224,185,1)" fg:x="43648392444" fg:w="75135504"/><text x="49.0150%" y="655.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (28,287,876 samples, 0.03%)</title><rect x="48.8173%" y="629" width="0.0316%" height="15" fill="rgb(223,139,8)" fg:x="43695240072" fg:w="28287876"/><text x="49.0673%" y="639.50"></text></g><g><title>gl::BindTexture (89,032,703 samples, 0.10%)</title><rect x="48.7599%" y="677" width="0.0995%" height="15" fill="rgb(232,213,38)" fg:x="43643864434" fg:w="89032703"/><text x="49.0099%" y="687.50"></text></g><g><title>_glBindTexture (9,369,189 samples, 0.01%)</title><rect x="48.8489%" y="661" width="0.0105%" height="15" fill="rgb(207,94,22)" fg:x="43723527948" fg:w="9369189"/><text x="49.0989%" y="671.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (112,552,140 samples, 0.13%)</title><rect x="48.8594%" y="661" width="0.1257%" height="15" fill="rgb(219,183,54)" fg:x="43732897137" fg:w="112552140"/><text x="49.1094%" y="671.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (18,780,245 samples, 0.02%)</title><rect x="48.9641%" y="645" width="0.0210%" height="15" fill="rgb(216,185,54)" fg:x="43826669032" fg:w="18780245"/><text x="49.2141%" y="655.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (13,993,762 samples, 0.02%)</title><rect x="48.9695%" y="629" width="0.0156%" height="15" fill="rgb(254,217,39)" fg:x="43831455515" fg:w="13993762"/><text x="49.2195%" y="639.50"></text></g><g><title>gl::BindVertexArray (121,757,872 samples, 0.14%)</title><rect x="48.8594%" y="677" width="0.1360%" height="15" fill="rgb(240,178,23)" fg:x="43732897137" fg:w="121757872"/><text x="49.1094%" y="687.50"></text></g><g><title>_glBindVertexArray (9,205,732 samples, 0.01%)</title><rect x="48.9851%" y="661" width="0.0103%" height="15" fill="rgb(218,11,47)" fg:x="43845449277" fg:w="9205732"/><text x="49.2351%" y="671.50"></text></g><g><title>[libc.so.6] (46,811,581 samples, 0.05%)</title><rect x="49.1575%" y="597" width="0.0523%" height="15" fill="rgb(218,51,51)" fg:x="43999763078" fg:w="46811581"/><text x="49.4075%" y="607.50"></text></g><g><title>[libc.so.6] (14,041,657 samples, 0.02%)</title><rect x="49.1941%" y="581" width="0.0157%" height="15" fill="rgb(238,126,27)" fg:x="44032533002" fg:w="14041657"/><text x="49.4441%" y="591.50"></text></g><g><title>[libc.so.6] (14,041,657 samples, 0.02%)</title><rect x="49.1941%" y="565" width="0.0157%" height="15" fill="rgb(249,202,22)" fg:x="44032533002" fg:w="14041657"/><text x="49.4441%" y="575.50"></text></g><g><title>[libc.so.6] (139,965,222 samples, 0.16%)</title><rect x="49.9657%" y="581" width="0.1564%" height="15" fill="rgb(254,195,49)" fg:x="44723140646" fg:w="139965222"/><text x="50.2157%" y="591.50"></text></g><g><title>[libc.so.6] (60,557,460 samples, 0.07%)</title><rect x="50.0544%" y="565" width="0.0677%" height="15" fill="rgb(208,123,14)" fg:x="44802548408" fg:w="60557460"/><text x="50.3044%" y="575.50"></text></g><g><title>[libc.so.6] (13,843,259 samples, 0.02%)</title><rect x="50.1066%" y="549" width="0.0155%" height="15" fill="rgb(224,200,8)" fg:x="44849262609" fg:w="13843259"/><text x="50.3566%" y="559.50"></text></g><g><title>[libc.so.6] (23,400,021 samples, 0.03%)</title><rect x="50.2785%" y="565" width="0.0261%" height="15" fill="rgb(217,61,36)" fg:x="45003101799" fg:w="23400021"/><text x="50.5285%" y="575.50"></text></g><g><title>[libc.so.6] (9,501,922 samples, 0.01%)</title><rect x="50.2940%" y="549" width="0.0106%" height="15" fill="rgb(206,35,45)" fg:x="45016999898" fg:w="9501922"/><text x="50.5440%" y="559.50"></text></g><g><title>[libc.so.6] (9,501,922 samples, 0.01%)</title><rect x="50.2940%" y="533" width="0.0106%" height="15" fill="rgb(217,65,33)" fg:x="45016999898" fg:w="9501922"/><text x="50.5440%" y="543.50"></text></g><g><title>[libc.so.6] (98,619,059 samples, 0.11%)</title><rect x="50.6504%" y="533" width="0.1102%" height="15" fill="rgb(222,158,48)" fg:x="45336018372" fg:w="98619059"/><text x="50.9004%" y="543.50"></text></g><g><title>[libc.so.6] (47,497,739 samples, 0.05%)</title><rect x="50.7075%" y="517" width="0.0531%" height="15" fill="rgb(254,2,54)" fg:x="45387139692" fg:w="47497739"/><text x="50.9575%" y="527.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (88,861,511 samples, 0.10%)</title><rect x="50.7970%" y="517" width="0.0993%" height="15" fill="rgb(250,143,38)" fg:x="45467231767" fg:w="88861511"/><text x="51.0470%" y="527.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (14,304,188 samples, 0.02%)</title><rect x="50.8803%" y="501" width="0.0160%" height="15" fill="rgb(248,25,0)" fg:x="45541789090" fg:w="14304188"/><text x="51.1303%" y="511.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (14,304,188 samples, 0.02%)</title><rect x="50.8803%" y="485" width="0.0160%" height="15" fill="rgb(206,152,27)" fg:x="45541789090" fg:w="14304188"/><text x="51.1303%" y="495.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (14,304,188 samples, 0.02%)</title><rect x="50.8803%" y="469" width="0.0160%" height="15" fill="rgb(240,77,30)" fg:x="45541789090" fg:w="14304188"/><text x="51.1303%" y="479.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (14,304,188 samples, 0.02%)</title><rect x="50.8803%" y="453" width="0.0160%" height="15" fill="rgb(231,5,3)" fg:x="45541789090" fg:w="14304188"/><text x="51.1303%" y="463.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (126,128,904 samples, 0.14%)</title><rect x="50.7606%" y="533" width="0.1409%" height="15" fill="rgb(207,226,32)" fg:x="45434637431" fg:w="126128904"/><text x="51.0106%" y="543.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (412,465,753 samples, 0.46%)</title><rect x="50.4415%" y="549" width="0.4608%" height="15" fill="rgb(222,207,47)" fg:x="45148998378" fg:w="412465753"/><text x="50.6915%" y="559.50"></text></g><g><title>cfree (9,395,326 samples, 0.01%)</title><rect x="50.9023%" y="549" width="0.0105%" height="15" fill="rgb(229,115,45)" fg:x="45561464131" fg:w="9395326"/><text x="51.1523%" y="559.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (563,100,733 samples, 0.63%)</title><rect x="50.3046%" y="565" width="0.6291%" height="15" fill="rgb(224,191,6)" fg:x="45026501820" fg:w="563100733"/><text x="50.5546%" y="575.50"></text></g><g><title>malloc (18,743,096 samples, 0.02%)</title><rect x="50.9128%" y="549" width="0.0209%" height="15" fill="rgb(230,227,24)" fg:x="45570859457" fg:w="18743096"/><text x="51.1628%" y="559.50"></text></g><g><title>[libc.so.6] (119,404,800 samples, 0.13%)</title><rect x="50.9493%" y="533" width="0.1334%" height="15" fill="rgb(228,80,19)" fg:x="45603587483" fg:w="119404800"/><text x="51.1993%" y="543.50"></text></g><g><title>[libc.so.6] (30,672,578 samples, 0.03%)</title><rect x="51.0485%" y="517" width="0.0343%" height="15" fill="rgb(247,229,0)" fg:x="45692319705" fg:w="30672578"/><text x="51.2985%" y="527.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (864,642,808 samples, 0.97%)</title><rect x="50.1221%" y="581" width="0.9660%" height="15" fill="rgb(237,194,15)" fg:x="44863105868" fg:w="864642808"/><text x="50.3721%" y="591.50"></text></g><g><title>vsnprintf (133,562,278 samples, 0.15%)</title><rect x="50.9388%" y="565" width="0.1492%" height="15" fill="rgb(219,203,20)" fg:x="45594186398" fg:w="133562278"/><text x="51.1888%" y="575.50"></text></g><g><title>[libc.so.6] (128,889,899 samples, 0.14%)</title><rect x="50.9441%" y="549" width="0.1440%" height="15" fill="rgb(234,128,8)" fg:x="45598858777" fg:w="128889899"/><text x="51.1941%" y="559.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (1,690,448,114 samples, 1.89%)</title><rect x="49.2098%" y="597" width="1.8886%" height="15" fill="rgb(248,202,8)" fg:x="44046574659" fg:w="1690448114"/><text x="49.4598%" y="607.50">[..</text></g><g><title>strlen@plt (9,274,097 samples, 0.01%)</title><rect x="51.0881%" y="581" width="0.0104%" height="15" fill="rgb(206,104,37)" fg:x="45727748676" fg:w="9274097"/><text x="51.3381%" y="591.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (1,839,820,968 samples, 2.06%)</title><rect x="49.0534%" y="613" width="2.0555%" height="15" fill="rgb(223,8,27)" fg:x="43906554012" fg:w="1839820968"/><text x="49.3034%" y="623.50">[..</text></g><g><title>cfree (9,352,207 samples, 0.01%)</title><rect x="51.0984%" y="597" width="0.0104%" height="15" fill="rgb(216,217,28)" fg:x="45737022773" fg:w="9352207"/><text x="51.3484%" y="607.50"></text></g><g><title>gl::BufferData (1,896,386,916 samples, 2.12%)</title><rect x="48.9954%" y="677" width="2.1187%" height="15" fill="rgb(249,199,1)" fg:x="43854655009" fg:w="1896386916"/><text x="49.2454%" y="687.50">g..</text></g><g><title>[libnvidia-eglcore.so.580.82.09] (1,896,386,916 samples, 2.12%)</title><rect x="48.9954%" y="661" width="2.1187%" height="15" fill="rgb(240,85,17)" fg:x="43854655009" fg:w="1896386916"/><text x="49.2454%" y="671.50">[..</text></g><g><title>[libnvidia-eglcore.so.580.82.09] (1,896,386,916 samples, 2.12%)</title><rect x="48.9954%" y="645" width="2.1187%" height="15" fill="rgb(206,108,45)" fg:x="43854655009" fg:w="1896386916"/><text x="49.2454%" y="655.50">[..</text></g><g><title>[libnvidia-eglcore.so.580.82.09] (1,877,553,319 samples, 2.10%)</title><rect x="49.0164%" y="629" width="2.0976%" height="15" fill="rgb(245,210,41)" fg:x="43873488606" fg:w="1877553319"/><text x="49.2664%" y="639.50">[..</text></g><g><title>[libnvidia-eglcore.so.580.82.09] (131,425,949 samples, 0.15%)</title><rect x="51.9739%" y="581" width="0.1468%" height="15" fill="rgb(206,13,37)" fg:x="46520607668" fg:w="131425949"/><text x="52.2239%" y="591.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (93,929,925 samples, 0.10%)</title><rect x="52.0158%" y="565" width="0.1049%" height="15" fill="rgb(250,61,18)" fg:x="46558103692" fg:w="93929925"/><text x="52.2658%" y="575.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (52,088,112 samples, 0.06%)</title><rect x="52.0625%" y="549" width="0.0582%" height="15" fill="rgb(235,172,48)" fg:x="46599945505" fg:w="52088112"/><text x="52.3125%" y="559.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (901,171,595 samples, 1.01%)</title><rect x="51.1245%" y="661" width="1.0068%" height="15" fill="rgb(249,201,17)" fg:x="45760343953" fg:w="901171595"/><text x="51.3745%" y="671.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (896,512,947 samples, 1.00%)</title><rect x="51.1297%" y="645" width="1.0016%" height="15" fill="rgb(219,208,6)" fg:x="45765002601" fg:w="896512947"/><text x="51.3797%" y="655.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (784,166,961 samples, 0.88%)</title><rect x="51.2552%" y="629" width="0.8761%" height="15" fill="rgb(248,31,23)" fg:x="45877348587" fg:w="784166961"/><text x="51.5052%" y="639.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (479,071,985 samples, 0.54%)</title><rect x="51.5961%" y="613" width="0.5352%" height="15" fill="rgb(245,15,42)" fg:x="46182443563" fg:w="479071985"/><text x="51.8461%" y="623.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (208,748,656 samples, 0.23%)</title><rect x="51.8981%" y="597" width="0.2332%" height="15" fill="rgb(222,217,39)" fg:x="46452766892" fg:w="208748656"/><text x="52.1481%" y="607.50"></text></g><g><title>memcpy (9,481,931 samples, 0.01%)</title><rect x="52.1207%" y="581" width="0.0106%" height="15" fill="rgb(210,219,27)" fg:x="46652033617" fg:w="9481931"/><text x="52.3707%" y="591.50"></text></g><g><title>gl::DrawArraysInstanced (911,204,608 samples, 1.02%)</title><rect x="51.1141%" y="677" width="1.0180%" height="15" fill="rgb(252,166,36)" fg:x="45751041925" fg:w="911204608"/><text x="51.3641%" y="687.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (37,427,693 samples, 0.04%)</title><rect x="52.1374%" y="613" width="0.0418%" height="15" fill="rgb(245,132,34)" fg:x="46666980577" fg:w="37427693"/><text x="52.3874%" y="623.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (23,382,619 samples, 0.03%)</title><rect x="52.1531%" y="597" width="0.0261%" height="15" fill="rgb(236,54,3)" fg:x="46681025651" fg:w="23382619"/><text x="52.4031%" y="607.50"></text></g><g><title>&lt;i32 as rust_ui::shader::UniformValue&gt;::set_uniform (46,806,111 samples, 0.05%)</title><rect x="52.1321%" y="661" width="0.0523%" height="15" fill="rgb(241,173,43)" fg:x="46662246533" fg:w="46806111"/><text x="52.3821%" y="671.50"></text></g><g><title>gl::Uniform1i (46,806,111 samples, 0.05%)</title><rect x="52.1321%" y="645" width="0.0523%" height="15" fill="rgb(215,190,9)" fg:x="46662246533" fg:w="46806111"/><text x="52.3821%" y="655.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (46,806,111 samples, 0.05%)</title><rect x="52.1321%" y="629" width="0.0523%" height="15" fill="rgb(242,101,16)" fg:x="46662246533" fg:w="46806111"/><text x="52.3821%" y="639.50"></text></g><g><title>alloc::ffi::c_str::CString::new (23,525,717 samples, 0.03%)</title><rect x="52.1895%" y="645" width="0.0263%" height="15" fill="rgb(223,190,21)" fg:x="46713629353" fg:w="23525717"/><text x="52.4395%" y="655.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (23,525,717 samples, 0.03%)</title><rect x="52.1895%" y="629" width="0.0263%" height="15" fill="rgb(215,228,25)" fg:x="46713629353" fg:w="23525717"/><text x="52.4395%" y="639.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (23,525,717 samples, 0.03%)</title><rect x="52.1895%" y="613" width="0.0263%" height="15" fill="rgb(225,36,22)" fg:x="46713629353" fg:w="23525717"/><text x="52.4395%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (14,000,782 samples, 0.02%)</title><rect x="52.2002%" y="597" width="0.0156%" height="15" fill="rgb(251,106,46)" fg:x="46723154288" fg:w="14000782"/><text x="52.4502%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14,000,782 samples, 0.02%)</title><rect x="52.2002%" y="581" width="0.0156%" height="15" fill="rgb(208,90,1)" fg:x="46723154288" fg:w="14000782"/><text x="52.4502%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14,000,782 samples, 0.02%)</title><rect x="52.2002%" y="565" width="0.0156%" height="15" fill="rgb(243,10,4)" fg:x="46723154288" fg:w="14000782"/><text x="52.4502%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (14,000,782 samples, 0.02%)</title><rect x="52.2002%" y="549" width="0.0156%" height="15" fill="rgb(212,137,27)" fg:x="46723154288" fg:w="14000782"/><text x="52.4502%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (14,000,782 samples, 0.02%)</title><rect x="52.2002%" y="533" width="0.0156%" height="15" fill="rgb(231,220,49)" fg:x="46723154288" fg:w="14000782"/><text x="52.4502%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14,000,782 samples, 0.02%)</title><rect x="52.2002%" y="517" width="0.0156%" height="15" fill="rgb(237,96,20)" fg:x="46723154288" fg:w="14000782"/><text x="52.4502%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14,000,782 samples, 0.02%)</title><rect x="52.2002%" y="501" width="0.0156%" height="15" fill="rgb(239,229,30)" fg:x="46723154288" fg:w="14000782"/><text x="52.4502%" y="511.50"></text></g><g><title>alloc::alloc::alloc (14,000,782 samples, 0.02%)</title><rect x="52.2002%" y="485" width="0.0156%" height="15" fill="rgb(219,65,33)" fg:x="46723154288" fg:w="14000782"/><text x="52.4502%" y="495.50"></text></g><g><title>__rustc::__rdl_alloc (14,000,782 samples, 0.02%)</title><rect x="52.2002%" y="469" width="0.0156%" height="15" fill="rgb(243,134,7)" fg:x="46723154288" fg:w="14000782"/><text x="52.4502%" y="479.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (14,000,782 samples, 0.02%)</title><rect x="52.2002%" y="453" width="0.0156%" height="15" fill="rgb(216,177,54)" fg:x="46723154288" fg:w="14000782"/><text x="52.4502%" y="463.50"></text></g><g><title>malloc (14,000,782 samples, 0.02%)</title><rect x="52.2002%" y="437" width="0.0156%" height="15" fill="rgb(211,160,20)" fg:x="46723154288" fg:w="14000782"/><text x="52.4502%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::ffi::c_str::CString&gt; (13,922,761 samples, 0.02%)</title><rect x="52.2158%" y="645" width="0.0156%" height="15" fill="rgb(239,85,39)" fg:x="46737155070" fg:w="13922761"/><text x="52.4658%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[u8]&gt;&gt; (13,922,761 samples, 0.02%)</title><rect x="52.2158%" y="629" width="0.0156%" height="15" fill="rgb(232,125,22)" fg:x="46737155070" fg:w="13922761"/><text x="52.4658%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,922,761 samples, 0.02%)</title><rect x="52.2158%" y="613" width="0.0156%" height="15" fill="rgb(244,57,34)" fg:x="46737155070" fg:w="13922761"/><text x="52.4658%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13,922,761 samples, 0.02%)</title><rect x="52.2158%" y="597" width="0.0156%" height="15" fill="rgb(214,203,32)" fg:x="46737155070" fg:w="13922761"/><text x="52.4658%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (13,922,761 samples, 0.02%)</title><rect x="52.2158%" y="581" width="0.0156%" height="15" fill="rgb(207,58,43)" fg:x="46737155070" fg:w="13922761"/><text x="52.4658%" y="591.50"></text></g><g><title>__rustc::__rdl_dealloc (13,922,761 samples, 0.02%)</title><rect x="52.2158%" y="565" width="0.0156%" height="15" fill="rgb(215,193,15)" fg:x="46737155070" fg:w="13922761"/><text x="52.4658%" y="575.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (13,922,761 samples, 0.02%)</title><rect x="52.2158%" y="549" width="0.0156%" height="15" fill="rgb(232,15,44)" fg:x="46737155070" fg:w="13922761"/><text x="52.4658%" y="559.50"></text></g><g><title>cfree (9,149,968 samples, 0.01%)</title><rect x="52.2211%" y="533" width="0.0102%" height="15" fill="rgb(212,3,48)" fg:x="46741927863" fg:w="9149968"/><text x="52.4711%" y="543.50"></text></g><g><title>rust_ui::shader::Shader::set_uniform (160,554,939 samples, 0.18%)</title><rect x="52.1321%" y="677" width="0.1794%" height="15" fill="rgb(218,128,7)" fg:x="46662246533" fg:w="160554939"/><text x="52.3821%" y="687.50"></text></g><g><title>rust_ui::shader::Shader::find (109,172,119 samples, 0.12%)</title><rect x="52.1895%" y="661" width="0.1220%" height="15" fill="rgb(226,216,39)" fg:x="46713629353" fg:w="109172119"/><text x="52.4395%" y="671.50"></text></g><g><title>gl::GetUniformLocation (71,723,641 samples, 0.08%)</title><rect x="52.2313%" y="645" width="0.0801%" height="15" fill="rgb(243,47,51)" fg:x="46751077831" fg:w="71723641"/><text x="52.4813%" y="655.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (57,872,332 samples, 0.06%)</title><rect x="52.2468%" y="629" width="0.0647%" height="15" fill="rgb(241,183,40)" fg:x="46764929140" fg:w="57872332"/><text x="52.4968%" y="639.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (43,915,962 samples, 0.05%)</title><rect x="52.2624%" y="613" width="0.0491%" height="15" fill="rgb(231,217,32)" fg:x="46778885510" fg:w="43915962"/><text x="52.5124%" y="623.50"></text></g><g><title>[libc.so.6] (24,992,755 samples, 0.03%)</title><rect x="52.2836%" y="597" width="0.0279%" height="15" fill="rgb(229,61,38)" fg:x="46797808717" fg:w="24992755"/><text x="52.5336%" y="607.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (266,098,920 samples, 0.30%)</title><rect x="52.3167%" y="629" width="0.2973%" height="15" fill="rgb(225,210,5)" fg:x="46827443182" fg:w="266098920"/><text x="52.5667%" y="639.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (205,107,845 samples, 0.23%)</title><rect x="52.3848%" y="613" width="0.2292%" height="15" fill="rgb(231,79,45)" fg:x="46888434257" fg:w="205107845"/><text x="52.6348%" y="623.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (111,857,210 samples, 0.12%)</title><rect x="52.4890%" y="597" width="0.1250%" height="15" fill="rgb(224,100,7)" fg:x="46981684892" fg:w="111857210"/><text x="52.7390%" y="607.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (32,531,126 samples, 0.04%)</title><rect x="52.5776%" y="581" width="0.0363%" height="15" fill="rgb(241,198,18)" fg:x="47061010976" fg:w="32531126"/><text x="52.8276%" y="591.50"></text></g><g><title>rust_ui::shader::Shader::use_shader (275,499,320 samples, 0.31%)</title><rect x="52.3115%" y="677" width="0.3078%" height="15" fill="rgb(252,97,53)" fg:x="46822801472" fg:w="275499320"/><text x="52.5615%" y="687.50"></text></g><g><title>gl::UseProgram (275,499,320 samples, 0.31%)</title><rect x="52.3115%" y="661" width="0.3078%" height="15" fill="rgb(220,88,7)" fg:x="46822801472" fg:w="275499320"/><text x="52.5615%" y="671.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (275,499,320 samples, 0.31%)</title><rect x="52.3115%" y="645" width="0.3078%" height="15" fill="rgb(213,176,14)" fg:x="46822801472" fg:w="275499320"/><text x="52.5615%" y="655.50"></text></g><g><title>rust_ui::render::text::TextRenderer::draw_line (3,576,456,007 samples, 4.00%)</title><rect x="48.6496%" y="693" width="3.9957%" height="15" fill="rgb(246,73,7)" fg:x="43545101186" fg:w="3576456007"/><text x="48.8996%" y="703.50">rust..</text></g><g><title>std::f32::&lt;impl f32&gt;::floor (23,256,401 samples, 0.03%)</title><rect x="52.6193%" y="677" width="0.0260%" height="15" fill="rgb(245,64,36)" fg:x="47098300792" fg:w="23256401"/><text x="52.8693%" y="687.50"></text></g><g><title>core::f32::math::floor (23,256,401 samples, 0.03%)</title><rect x="52.6193%" y="661" width="0.0260%" height="15" fill="rgb(245,80,10)" fg:x="47098300792" fg:w="23256401"/><text x="52.8693%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (788,086,274 samples, 0.88%)</title><rect x="55.4576%" y="645" width="0.8805%" height="15" fill="rgb(232,107,50)" fg:x="49638807326" fg:w="788086274"/><text x="55.7076%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (616,417,333 samples, 0.69%)</title><rect x="55.6494%" y="629" width="0.6887%" height="15" fill="rgb(253,3,0)" fg:x="49810476267" fg:w="616417333"/><text x="55.8994%" y="639.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (702,897,192 samples, 0.79%)</title><rect x="57.0070%" y="613" width="0.7853%" height="15" fill="rgb(212,99,53)" fg:x="51025686928" fg:w="702897192"/><text x="57.2570%" y="623.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (702,897,192 samples, 0.79%)</title><rect x="57.0070%" y="597" width="0.7853%" height="15" fill="rgb(249,111,54)" fg:x="51025686928" fg:w="702897192"/><text x="57.2570%" y="607.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (698,222,957 samples, 0.78%)</title><rect x="57.0123%" y="581" width="0.7801%" height="15" fill="rgb(249,55,30)" fg:x="51030361163" fg:w="698222957"/><text x="57.2623%" y="591.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros (698,222,957 samples, 0.78%)</title><rect x="57.0123%" y="565" width="0.7801%" height="15" fill="rgb(237,47,42)" fg:x="51030361163" fg:w="698222957"/><text x="57.2623%" y="575.50"></text></g><g><title>core::intrinsics::likely (715,363,364 samples, 0.80%)</title><rect x="57.7923%" y="613" width="0.7992%" height="15" fill="rgb(211,20,18)" fg:x="51728584120" fg:w="715363364"/><text x="58.0423%" y="623.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (773,674,849 samples, 0.86%)</title><rect x="58.5962%" y="613" width="0.8644%" height="15" fill="rgb(231,203,46)" fg:x="52448130583" fg:w="773674849"/><text x="58.8462%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (773,674,849 samples, 0.86%)</title><rect x="58.5962%" y="597" width="0.8644%" height="15" fill="rgb(237,142,3)" fg:x="52448130583" fg:w="773674849"/><text x="58.8462%" y="607.50"></text></g><g><title>hashbrown::control::tag::Tag::full (650,729,758 samples, 0.73%)</title><rect x="59.4606%" y="613" width="0.7270%" height="15" fill="rgb(241,107,1)" fg:x="53221805432" fg:w="650729758"/><text x="59.7106%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (675,811,086 samples, 0.76%)</title><rect x="60.1876%" y="597" width="0.7550%" height="15" fill="rgb(229,83,13)" fg:x="53872535190" fg:w="675811086"/><text x="60.4376%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (675,811,086 samples, 0.76%)</title><rect x="60.1876%" y="581" width="0.7550%" height="15" fill="rgb(241,91,40)" fg:x="53872535190" fg:w="675811086"/><text x="60.4376%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (675,811,086 samples, 0.76%)</title><rect x="60.1876%" y="565" width="0.7550%" height="15" fill="rgb(225,3,45)" fg:x="53872535190" fg:w="675811086"/><text x="60.4376%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (708,841,145 samples, 0.79%)</title><rect x="60.1876%" y="613" width="0.7919%" height="15" fill="rgb(244,223,14)" fg:x="53872535190" fg:w="708841145"/><text x="60.4376%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (33,030,059 samples, 0.04%)</title><rect x="60.9426%" y="597" width="0.0369%" height="15" fill="rgb(224,124,37)" fg:x="54548346276" fg:w="33030059"/><text x="61.1926%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (33,030,059 samples, 0.04%)</title><rect x="60.9426%" y="581" width="0.0369%" height="15" fill="rgb(251,171,30)" fg:x="54548346276" fg:w="33030059"/><text x="61.1926%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (33,030,059 samples, 0.04%)</title><rect x="60.9426%" y="565" width="0.0369%" height="15" fill="rgb(236,46,54)" fg:x="54548346276" fg:w="33030059"/><text x="61.1926%" y="575.50"></text></g><g><title>rust_ui::render::text::TextRenderer::get_or_create_atlas (8,901,783,400 samples, 9.95%)</title><rect x="52.6453%" y="693" width="9.9453%" height="15" fill="rgb(245,213,5)" fg:x="47121557193" fg:w="8901783400"/><text x="52.8953%" y="703.50">rust_ui::rende..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (6,986,960,587 samples, 7.81%)</title><rect x="54.7845%" y="677" width="7.8060%" height="15" fill="rgb(230,144,27)" fg:x="49036380006" fg:w="6986960587"/><text x="55.0345%" y="687.50">std::collec..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (6,986,960,587 samples, 7.81%)</title><rect x="54.7845%" y="661" width="7.8060%" height="15" fill="rgb(220,86,6)" fg:x="49036380006" fg:w="6986960587"/><text x="55.0345%" y="671.50">hashbrown::..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5,596,446,993 samples, 6.25%)</title><rect x="56.3381%" y="645" width="6.2525%" height="15" fill="rgb(240,20,13)" fg:x="50426893600" fg:w="5596446993"/><text x="56.5881%" y="655.50">hashbrow..</text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5,030,669,547 samples, 5.62%)</title><rect x="56.9702%" y="629" width="5.6204%" height="15" fill="rgb(217,89,34)" fg:x="50992671046" fg:w="5030669547"/><text x="57.2202%" y="639.50">hashbro..</text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (1,441,964,258 samples, 1.61%)</title><rect x="60.9795%" y="613" width="1.6110%" height="15" fill="rgb(229,13,5)" fg:x="54581376335" fg:w="1441964258"/><text x="61.2295%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone_from (18,552,323 samples, 0.02%)</title><rect x="62.5957%" y="677" width="0.0207%" height="15" fill="rgb(244,67,35)" fg:x="56027963061" fg:w="18552323"/><text x="62.8457%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone_from (18,552,323 samples, 0.02%)</title><rect x="62.5957%" y="661" width="0.0207%" height="15" fill="rgb(221,40,2)" fg:x="56027963061" fg:w="18552323"/><text x="62.8457%" y="671.50"></text></g><g><title>&lt;[T] as alloc::slice::SpecCloneIntoVec&lt;T,A&gt;&gt;::clone_into (18,552,323 samples, 0.02%)</title><rect x="62.5957%" y="645" width="0.0207%" height="15" fill="rgb(237,157,21)" fg:x="56027963061" fg:w="18552323"/><text x="62.8457%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (18,552,323 samples, 0.02%)</title><rect x="62.5957%" y="629" width="0.0207%" height="15" fill="rgb(222,94,11)" fg:x="56027963061" fg:w="18552323"/><text x="62.8457%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (18,552,323 samples, 0.02%)</title><rect x="62.5957%" y="613" width="0.0207%" height="15" fill="rgb(249,113,6)" fg:x="56027963061" fg:w="18552323"/><text x="62.8457%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (18,552,323 samples, 0.02%)</title><rect x="62.5957%" y="597" width="0.0207%" height="15" fill="rgb(238,137,36)" fg:x="56027963061" fg:w="18552323"/><text x="62.8457%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18,552,323 samples, 0.02%)</title><rect x="62.5957%" y="581" width="0.0207%" height="15" fill="rgb(210,102,26)" fg:x="56027963061" fg:w="18552323"/><text x="62.8457%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18,552,323 samples, 0.02%)</title><rect x="62.5957%" y="565" width="0.0207%" height="15" fill="rgb(218,30,30)" fg:x="56027963061" fg:w="18552323"/><text x="62.8457%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (18,552,323 samples, 0.02%)</title><rect x="62.5957%" y="549" width="0.0207%" height="15" fill="rgb(214,67,26)" fg:x="56027963061" fg:w="18552323"/><text x="62.8457%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (18,552,323 samples, 0.02%)</title><rect x="62.5957%" y="533" width="0.0207%" height="15" fill="rgb(251,9,53)" fg:x="56027963061" fg:w="18552323"/><text x="62.8457%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (18,552,323 samples, 0.02%)</title><rect x="62.5957%" y="517" width="0.0207%" height="15" fill="rgb(228,204,25)" fg:x="56027963061" fg:w="18552323"/><text x="62.8457%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (18,552,323 samples, 0.02%)</title><rect x="62.5957%" y="501" width="0.0207%" height="15" fill="rgb(207,153,8)" fg:x="56027963061" fg:w="18552323"/><text x="62.8457%" y="511.50"></text></g><g><title>rust_ui::render::text::TextRenderer::layout_text (30,175,738 samples, 0.03%)</title><rect x="62.5905%" y="693" width="0.0337%" height="15" fill="rgb(242,9,16)" fg:x="56023340593" fg:w="30175738"/><text x="62.8405%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9,178,443 samples, 0.01%)</title><rect x="62.6450%" y="613" width="0.0103%" height="15" fill="rgb(217,211,10)" fg:x="56072073791" fg:w="9178443"/><text x="62.8950%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9,178,443 samples, 0.01%)</title><rect x="62.6450%" y="597" width="0.0103%" height="15" fill="rgb(219,228,52)" fg:x="56072073791" fg:w="9178443"/><text x="62.8950%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (9,178,443 samples, 0.01%)</title><rect x="62.6450%" y="581" width="0.0103%" height="15" fill="rgb(231,92,29)" fg:x="56072073791" fg:w="9178443"/><text x="62.8950%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (9,178,443 samples, 0.01%)</title><rect x="62.6450%" y="565" width="0.0103%" height="15" fill="rgb(232,8,23)" fg:x="56072073791" fg:w="9178443"/><text x="62.8950%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9,178,443 samples, 0.01%)</title><rect x="62.6450%" y="549" width="0.0103%" height="15" fill="rgb(216,211,34)" fg:x="56072073791" fg:w="9178443"/><text x="62.8950%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9,178,443 samples, 0.01%)</title><rect x="62.6450%" y="533" width="0.0103%" height="15" fill="rgb(236,151,0)" fg:x="56072073791" fg:w="9178443"/><text x="62.8950%" y="543.50"></text></g><g><title>alloc::alloc::alloc (9,178,443 samples, 0.01%)</title><rect x="62.6450%" y="517" width="0.0103%" height="15" fill="rgb(209,168,3)" fg:x="56072073791" fg:w="9178443"/><text x="62.8950%" y="527.50"></text></g><g><title>__rustc::__rdl_alloc (9,178,443 samples, 0.01%)</title><rect x="62.6450%" y="501" width="0.0103%" height="15" fill="rgb(208,129,28)" fg:x="56072073791" fg:w="9178443"/><text x="62.8950%" y="511.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (9,178,443 samples, 0.01%)</title><rect x="62.6450%" y="485" width="0.0103%" height="15" fill="rgb(229,78,22)" fg:x="56072073791" fg:w="9178443"/><text x="62.8950%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (27,606,051 samples, 0.03%)</title><rect x="62.6450%" y="677" width="0.0308%" height="15" fill="rgb(228,187,13)" fg:x="56072073791" fg:w="27606051"/><text x="62.8950%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (27,606,051 samples, 0.03%)</title><rect x="62.6450%" y="661" width="0.0308%" height="15" fill="rgb(240,119,24)" fg:x="56072073791" fg:w="27606051"/><text x="62.8950%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27,606,051 samples, 0.03%)</title><rect x="62.6450%" y="645" width="0.0308%" height="15" fill="rgb(209,194,42)" fg:x="56072073791" fg:w="27606051"/><text x="62.8950%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (27,606,051 samples, 0.03%)</title><rect x="62.6450%" y="629" width="0.0308%" height="15" fill="rgb(247,200,46)" fg:x="56072073791" fg:w="27606051"/><text x="62.8950%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (18,427,608 samples, 0.02%)</title><rect x="62.6552%" y="613" width="0.0206%" height="15" fill="rgb(218,76,16)" fg:x="56081252234" fg:w="18427608"/><text x="62.9052%" y="623.50"></text></g><g><title>core::ptr::copy_nonoverlapping (18,427,608 samples, 0.02%)</title><rect x="62.6552%" y="597" width="0.0206%" height="15" fill="rgb(225,21,48)" fg:x="56081252234" fg:w="18427608"/><text x="62.9052%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (22,992,151 samples, 0.03%)</title><rect x="62.6758%" y="581" width="0.0257%" height="15" fill="rgb(239,223,50)" fg:x="56099679842" fg:w="22992151"/><text x="62.9258%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22,992,151 samples, 0.03%)</title><rect x="62.6758%" y="565" width="0.0257%" height="15" fill="rgb(244,45,21)" fg:x="56099679842" fg:w="22992151"/><text x="62.9258%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (22,992,151 samples, 0.03%)</title><rect x="62.6758%" y="549" width="0.0257%" height="15" fill="rgb(232,33,43)" fg:x="56099679842" fg:w="22992151"/><text x="62.9258%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone_from (41,439,570 samples, 0.05%)</title><rect x="62.6758%" y="677" width="0.0463%" height="15" fill="rgb(209,8,3)" fg:x="56099679842" fg:w="41439570"/><text x="62.9258%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone_from (41,439,570 samples, 0.05%)</title><rect x="62.6758%" y="661" width="0.0463%" height="15" fill="rgb(214,25,53)" fg:x="56099679842" fg:w="41439570"/><text x="62.9258%" y="671.50"></text></g><g><title>&lt;[T] as alloc::slice::SpecCloneIntoVec&lt;T,A&gt;&gt;::clone_into (41,439,570 samples, 0.05%)</title><rect x="62.6758%" y="645" width="0.0463%" height="15" fill="rgb(254,186,54)" fg:x="56099679842" fg:w="41439570"/><text x="62.9258%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (41,439,570 samples, 0.05%)</title><rect x="62.6758%" y="629" width="0.0463%" height="15" fill="rgb(208,174,49)" fg:x="56099679842" fg:w="41439570"/><text x="62.9258%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (41,439,570 samples, 0.05%)</title><rect x="62.6758%" y="613" width="0.0463%" height="15" fill="rgb(233,191,51)" fg:x="56099679842" fg:w="41439570"/><text x="62.9258%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (41,439,570 samples, 0.05%)</title><rect x="62.6758%" y="597" width="0.0463%" height="15" fill="rgb(222,134,10)" fg:x="56099679842" fg:w="41439570"/><text x="62.9258%" y="607.50"></text></g><g><title>core::ptr::copy_nonoverlapping (18,447,419 samples, 0.02%)</title><rect x="62.7015%" y="581" width="0.0206%" height="15" fill="rgb(230,226,20)" fg:x="56122671993" fg:w="18447419"/><text x="62.9515%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (18,391,113 samples, 0.02%)</title><rect x="62.7531%" y="629" width="0.0205%" height="15" fill="rgb(251,111,25)" fg:x="56168829147" fg:w="18391113"/><text x="63.0031%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (18,391,113 samples, 0.02%)</title><rect x="62.7531%" y="613" width="0.0205%" height="15" fill="rgb(224,40,46)" fg:x="56168829147" fg:w="18391113"/><text x="63.0031%" y="623.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (18,391,113 samples, 0.02%)</title><rect x="62.7531%" y="597" width="0.0205%" height="15" fill="rgb(236,108,47)" fg:x="56168829147" fg:w="18391113"/><text x="63.0031%" y="607.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (37,280,985 samples, 0.04%)</title><rect x="62.8303%" y="581" width="0.0417%" height="15" fill="rgb(234,93,0)" fg:x="56237946884" fg:w="37280985"/><text x="63.0803%" y="591.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (254,694,302 samples, 0.28%)</title><rect x="62.7221%" y="677" width="0.2846%" height="15" fill="rgb(224,213,32)" fg:x="56141119412" fg:w="254694302"/><text x="62.9721%" y="687.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (254,694,302 samples, 0.28%)</title><rect x="62.7221%" y="661" width="0.2846%" height="15" fill="rgb(251,11,48)" fg:x="56141119412" fg:w="254694302"/><text x="62.9721%" y="671.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (226,984,567 samples, 0.25%)</title><rect x="62.7531%" y="645" width="0.2536%" height="15" fill="rgb(236,173,5)" fg:x="56168829147" fg:w="226984567"/><text x="63.0031%" y="655.50"></text></g><g><title>core::slice::memchr::memchr (208,593,454 samples, 0.23%)</title><rect x="62.7736%" y="629" width="0.2330%" height="15" fill="rgb(230,95,12)" fg:x="56187220260" fg:w="208593454"/><text x="63.0236%" y="639.50"></text></g><g><title>core::slice::memchr::memchr_aligned (208,593,454 samples, 0.23%)</title><rect x="62.7736%" y="613" width="0.2330%" height="15" fill="rgb(232,209,1)" fg:x="56187220260" fg:w="208593454"/><text x="63.0236%" y="623.50"></text></g><g><title>core::slice::memchr::memchr_aligned::runtime (208,593,454 samples, 0.23%)</title><rect x="62.7736%" y="597" width="0.2330%" height="15" fill="rgb(232,6,1)" fg:x="56187220260" fg:w="208593454"/><text x="63.0236%" y="607.50"></text></g><g><title>core::slice::memchr::memchr_naive (120,585,845 samples, 0.13%)</title><rect x="62.8719%" y="581" width="0.1347%" height="15" fill="rgb(210,224,50)" fg:x="56275227869" fg:w="120585845"/><text x="63.1219%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18,741,374 samples, 0.02%)</title><rect x="63.0119%" y="613" width="0.0209%" height="15" fill="rgb(228,127,35)" fg:x="56400472902" fg:w="18741374"/><text x="63.2619%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18,741,374 samples, 0.02%)</title><rect x="63.0119%" y="597" width="0.0209%" height="15" fill="rgb(245,102,45)" fg:x="56400472902" fg:w="18741374"/><text x="63.2619%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (18,741,374 samples, 0.02%)</title><rect x="63.0119%" y="581" width="0.0209%" height="15" fill="rgb(214,1,49)" fg:x="56400472902" fg:w="18741374"/><text x="63.2619%" y="591.50"></text></g><g><title>alloc::string::String::push_str (28,261,887 samples, 0.03%)</title><rect x="63.0119%" y="677" width="0.0316%" height="15" fill="rgb(226,163,40)" fg:x="56400472902" fg:w="28261887"/><text x="63.2619%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (28,261,887 samples, 0.03%)</title><rect x="63.0119%" y="661" width="0.0316%" height="15" fill="rgb(239,212,28)" fg:x="56400472902" fg:w="28261887"/><text x="63.2619%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (28,261,887 samples, 0.03%)</title><rect x="63.0119%" y="645" width="0.0316%" height="15" fill="rgb(220,20,13)" fg:x="56400472902" fg:w="28261887"/><text x="63.2619%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (28,261,887 samples, 0.03%)</title><rect x="63.0119%" y="629" width="0.0316%" height="15" fill="rgb(210,164,35)" fg:x="56400472902" fg:w="28261887"/><text x="63.2619%" y="639.50"></text></g><g><title>core::ptr::copy_nonoverlapping (9,520,513 samples, 0.01%)</title><rect x="63.0328%" y="613" width="0.0106%" height="15" fill="rgb(248,109,41)" fg:x="56419214276" fg:w="9520513"/><text x="63.2828%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (14,103,597 samples, 0.02%)</title><rect x="63.0434%" y="677" width="0.0158%" height="15" fill="rgb(238,23,50)" fg:x="56428734789" fg:w="14103597"/><text x="63.2934%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (14,103,597 samples, 0.02%)</title><rect x="63.0434%" y="661" width="0.0158%" height="15" fill="rgb(211,48,49)" fg:x="56428734789" fg:w="14103597"/><text x="63.2934%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (14,103,597 samples, 0.02%)</title><rect x="63.0434%" y="645" width="0.0158%" height="15" fill="rgb(223,36,21)" fg:x="56428734789" fg:w="14103597"/><text x="63.2934%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,103,597 samples, 0.02%)</title><rect x="63.0434%" y="629" width="0.0158%" height="15" fill="rgb(207,123,46)" fg:x="56428734789" fg:w="14103597"/><text x="63.2934%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (14,103,597 samples, 0.02%)</title><rect x="63.0434%" y="613" width="0.0158%" height="15" fill="rgb(240,218,32)" fg:x="56428734789" fg:w="14103597"/><text x="63.2934%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14,103,597 samples, 0.02%)</title><rect x="63.0434%" y="597" width="0.0158%" height="15" fill="rgb(252,5,43)" fg:x="56428734789" fg:w="14103597"/><text x="63.2934%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (14,103,597 samples, 0.02%)</title><rect x="63.0434%" y="581" width="0.0158%" height="15" fill="rgb(252,84,19)" fg:x="56428734789" fg:w="14103597"/><text x="63.2934%" y="591.50"></text></g><g><title>__rustc::__rdl_dealloc (14,103,597 samples, 0.02%)</title><rect x="63.0434%" y="565" width="0.0158%" height="15" fill="rgb(243,152,39)" fg:x="56428734789" fg:w="14103597"/><text x="63.2934%" y="575.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (14,103,597 samples, 0.02%)</title><rect x="63.0434%" y="549" width="0.0158%" height="15" fill="rgb(234,160,15)" fg:x="56428734789" fg:w="14103597"/><text x="63.2934%" y="559.50"></text></g><g><title>[libc.so.6] (69,015,829 samples, 0.08%)</title><rect x="63.0592%" y="501" width="0.0771%" height="15" fill="rgb(237,34,20)" fg:x="56442838386" fg:w="69015829"/><text x="63.3092%" y="511.50"></text></g><g><title>cfree (64,856,157 samples, 0.07%)</title><rect x="63.1363%" y="501" width="0.0725%" height="15" fill="rgb(229,97,13)" fg:x="56511854215" fg:w="64856157"/><text x="63.3863%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;&amp;str&gt;&gt; (147,884,861 samples, 0.17%)</title><rect x="63.0592%" y="677" width="0.1652%" height="15" fill="rgb(234,71,50)" fg:x="56442838386" fg:w="147884861"/><text x="63.3092%" y="687.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (147,884,861 samples, 0.17%)</title><rect x="63.0592%" y="661" width="0.1652%" height="15" fill="rgb(253,155,4)" fg:x="56442838386" fg:w="147884861"/><text x="63.3092%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;&amp;str,alloc::alloc::Global&gt;&gt; (147,884,861 samples, 0.17%)</title><rect x="63.0592%" y="645" width="0.1652%" height="15" fill="rgb(222,185,37)" fg:x="56442838386" fg:w="147884861"/><text x="63.3092%" y="655.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (147,884,861 samples, 0.17%)</title><rect x="63.0592%" y="629" width="0.1652%" height="15" fill="rgb(251,177,13)" fg:x="56442838386" fg:w="147884861"/><text x="63.3092%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;str&gt;&gt; (147,884,861 samples, 0.17%)</title><rect x="63.0592%" y="613" width="0.1652%" height="15" fill="rgb(250,179,40)" fg:x="56442838386" fg:w="147884861"/><text x="63.3092%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (147,884,861 samples, 0.17%)</title><rect x="63.0592%" y="597" width="0.1652%" height="15" fill="rgb(242,44,2)" fg:x="56442838386" fg:w="147884861"/><text x="63.3092%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (147,884,861 samples, 0.17%)</title><rect x="63.0592%" y="581" width="0.1652%" height="15" fill="rgb(216,177,13)" fg:x="56442838386" fg:w="147884861"/><text x="63.3092%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (147,884,861 samples, 0.17%)</title><rect x="63.0592%" y="565" width="0.1652%" height="15" fill="rgb(216,106,43)" fg:x="56442838386" fg:w="147884861"/><text x="63.3092%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (147,884,861 samples, 0.17%)</title><rect x="63.0592%" y="549" width="0.1652%" height="15" fill="rgb(216,183,2)" fg:x="56442838386" fg:w="147884861"/><text x="63.3092%" y="559.50"></text></g><g><title>__rustc::__rdl_dealloc (147,884,861 samples, 0.17%)</title><rect x="63.0592%" y="533" width="0.1652%" height="15" fill="rgb(249,75,3)" fg:x="56442838386" fg:w="147884861"/><text x="63.3092%" y="543.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (147,884,861 samples, 0.17%)</title><rect x="63.0592%" y="517" width="0.1652%" height="15" fill="rgb(219,67,39)" fg:x="56442838386" fg:w="147884861"/><text x="63.3092%" y="527.50"></text></g><g><title>rust_ui::render::text::TextRenderer::layout_text_explicit (14,012,875 samples, 0.02%)</title><rect x="63.2088%" y="501" width="0.0157%" height="15" fill="rgb(253,228,2)" fg:x="56576710372" fg:w="14012875"/><text x="63.4588%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;&amp;str&gt;&gt; (14,012,875 samples, 0.02%)</title><rect x="63.2088%" y="485" width="0.0157%" height="15" fill="rgb(235,138,27)" fg:x="56576710372" fg:w="14012875"/><text x="63.4588%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,012,875 samples, 0.02%)</title><rect x="63.2088%" y="469" width="0.0157%" height="15" fill="rgb(236,97,51)" fg:x="56576710372" fg:w="14012875"/><text x="63.4588%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;&amp;str,alloc::alloc::Global&gt;&gt; (14,012,875 samples, 0.02%)</title><rect x="63.2088%" y="453" width="0.0157%" height="15" fill="rgb(240,80,30)" fg:x="56576710372" fg:w="14012875"/><text x="63.4588%" y="463.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,012,875 samples, 0.02%)</title><rect x="63.2088%" y="437" width="0.0157%" height="15" fill="rgb(230,178,19)" fg:x="56576710372" fg:w="14012875"/><text x="63.4588%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;str&gt;&gt; (14,012,875 samples, 0.02%)</title><rect x="63.2088%" y="421" width="0.0157%" height="15" fill="rgb(210,190,27)" fg:x="56576710372" fg:w="14012875"/><text x="63.4588%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,012,875 samples, 0.02%)</title><rect x="63.2088%" y="405" width="0.0157%" height="15" fill="rgb(222,107,31)" fg:x="56576710372" fg:w="14012875"/><text x="63.4588%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (14,012,875 samples, 0.02%)</title><rect x="63.2088%" y="389" width="0.0157%" height="15" fill="rgb(216,127,34)" fg:x="56576710372" fg:w="14012875"/><text x="63.4588%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14,012,875 samples, 0.02%)</title><rect x="63.2088%" y="373" width="0.0157%" height="15" fill="rgb(234,116,52)" fg:x="56576710372" fg:w="14012875"/><text x="63.4588%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (14,012,875 samples, 0.02%)</title><rect x="63.2088%" y="357" width="0.0157%" height="15" fill="rgb(222,124,15)" fg:x="56576710372" fg:w="14012875"/><text x="63.4588%" y="367.50"></text></g><g><title>__rustc::__rdl_dealloc (14,012,875 samples, 0.02%)</title><rect x="63.2088%" y="341" width="0.0157%" height="15" fill="rgb(231,179,28)" fg:x="56576710372" fg:w="14012875"/><text x="63.4588%" y="351.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (14,012,875 samples, 0.02%)</title><rect x="63.2088%" y="325" width="0.0157%" height="15" fill="rgb(226,93,45)" fg:x="56576710372" fg:w="14012875"/><text x="63.4588%" y="335.50"></text></g><g><title>rust_ui::render::text::TextRenderer::measure_text_size (55,062,365 samples, 0.06%)</title><rect x="63.2244%" y="677" width="0.0615%" height="15" fill="rgb(215,8,51)" fg:x="56590723247" fg:w="55062365"/><text x="63.4744%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (9,516,764 samples, 0.01%)</title><rect x="63.7806%" y="645" width="0.0106%" height="15" fill="rgb(223,106,5)" fg:x="57088555764" fg:w="9516764"/><text x="64.0306%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (9,516,764 samples, 0.01%)</title><rect x="63.7806%" y="629" width="0.0106%" height="15" fill="rgb(250,191,5)" fg:x="57088555764" fg:w="9516764"/><text x="64.0306%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (9,516,764 samples, 0.01%)</title><rect x="63.7806%" y="613" width="0.0106%" height="15" fill="rgb(242,132,44)" fg:x="57088555764" fg:w="9516764"/><text x="64.0306%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (9,516,764 samples, 0.01%)</title><rect x="63.7806%" y="597" width="0.0106%" height="15" fill="rgb(251,152,29)" fg:x="57088555764" fg:w="9516764"/><text x="64.0306%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (14,038,903 samples, 0.02%)</title><rect x="63.7912%" y="645" width="0.0157%" height="15" fill="rgb(218,179,5)" fg:x="57098072528" fg:w="14038903"/><text x="64.0412%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (46,536,316 samples, 0.05%)</title><rect x="63.7806%" y="661" width="0.0520%" height="15" fill="rgb(227,67,19)" fg:x="57088555764" fg:w="46536316"/><text x="64.0306%" y="671.50"></text></g><g><title>core::ptr::write (22,980,649 samples, 0.03%)</title><rect x="63.8069%" y="645" width="0.0257%" height="15" fill="rgb(233,119,31)" fg:x="57112111431" fg:w="22980649"/><text x="64.0569%" y="655.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_whitespace (83,567,996 samples, 0.09%)</title><rect x="63.8377%" y="661" width="0.0934%" height="15" fill="rgb(241,120,22)" fg:x="57139685699" fg:w="83567996"/><text x="64.0877%" y="671.50"></text></g><g><title>rust_ui::render::text::TextRenderer::layout_text_explicit (1,270,660,486 samples, 1.42%)</title><rect x="62.6242%" y="693" width="1.4196%" height="15" fill="rgb(224,102,30)" fg:x="56053516331" fg:w="1270660486"/><text x="62.8742%" y="703.50"></text></g><g><title>rust_ui::render::text::split_preserve_leading_whitespace (678,391,205 samples, 0.76%)</title><rect x="63.2859%" y="677" width="0.7579%" height="15" fill="rgb(210,164,37)" fg:x="56645785612" fg:w="678391205"/><text x="63.5359%" y="687.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (100,923,122 samples, 0.11%)</title><rect x="63.9311%" y="661" width="0.1128%" height="15" fill="rgb(226,191,16)" fg:x="57223253695" fg:w="100923122"/><text x="64.1811%" y="671.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (100,923,122 samples, 0.11%)</title><rect x="63.9311%" y="645" width="0.1128%" height="15" fill="rgb(214,40,45)" fg:x="57223253695" fg:w="100923122"/><text x="64.1811%" y="655.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (100,923,122 samples, 0.11%)</title><rect x="63.9311%" y="629" width="0.1128%" height="15" fill="rgb(244,29,26)" fg:x="57223253695" fg:w="100923122"/><text x="64.1811%" y="639.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (45,813,884 samples, 0.05%)</title><rect x="63.9927%" y="613" width="0.0512%" height="15" fill="rgb(216,16,5)" fg:x="57278362933" fg:w="45813884"/><text x="64.2427%" y="623.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_utf8_char_boundary (13,635,261 samples, 0.02%)</title><rect x="64.0286%" y="597" width="0.0152%" height="15" fill="rgb(249,76,35)" fg:x="57310541556" fg:w="13635261"/><text x="64.2786%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (905,602,657 samples, 1.01%)</title><rect x="66.4889%" y="629" width="1.0118%" height="15" fill="rgb(207,11,44)" fg:x="59512692528" fg:w="905602657"/><text x="66.7389%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (36,568,087 samples, 0.04%)</title><rect x="67.4598%" y="613" width="0.0409%" height="15" fill="rgb(228,190,49)" fg:x="60381727098" fg:w="36568087"/><text x="67.7098%" y="623.50"></text></g><g><title>core::intrinsics::likely (160,580,016 samples, 0.18%)</title><rect x="67.5917%" y="581" width="0.1794%" height="15" fill="rgb(214,173,12)" fg:x="60499731637" fg:w="160580016"/><text x="67.8417%" y="591.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (45,973,540 samples, 0.05%)</title><rect x="67.7711%" y="581" width="0.0514%" height="15" fill="rgb(218,26,35)" fg:x="60660311653" fg:w="45973540"/><text x="68.0211%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (45,973,540 samples, 0.05%)</title><rect x="67.7711%" y="565" width="0.0514%" height="15" fill="rgb(220,200,19)" fg:x="60660311653" fg:w="45973540"/><text x="68.0211%" y="575.50"></text></g><g><title>rust_ui::render::text::TextRenderer::load_character (3,437,228,405 samples, 3.84%)</title><rect x="64.0439%" y="693" width="3.8401%" height="15" fill="rgb(239,95,49)" fg:x="57324176817" fg:w="3437228405"/><text x="64.2939%" y="703.50">rust..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,294,939,881 samples, 1.45%)</title><rect x="66.4373%" y="677" width="1.4467%" height="15" fill="rgb(235,85,53)" fg:x="59466465341" fg:w="1294939881"/><text x="66.6873%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,294,939,881 samples, 1.45%)</title><rect x="66.4373%" y="661" width="1.4467%" height="15" fill="rgb(233,133,31)" fg:x="59466465341" fg:w="1294939881"/><text x="66.6873%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,294,939,881 samples, 1.45%)</title><rect x="66.4373%" y="645" width="1.4467%" height="15" fill="rgb(218,25,20)" fg:x="59466465341" fg:w="1294939881"/><text x="66.6873%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (343,110,037 samples, 0.38%)</title><rect x="67.5007%" y="629" width="0.3833%" height="15" fill="rgb(252,210,38)" fg:x="60418295185" fg:w="343110037"/><text x="67.7507%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (343,110,037 samples, 0.38%)</title><rect x="67.5007%" y="613" width="0.3833%" height="15" fill="rgb(242,134,21)" fg:x="60418295185" fg:w="343110037"/><text x="67.7507%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (343,110,037 samples, 0.38%)</title><rect x="67.5007%" y="597" width="0.3833%" height="15" fill="rgb(213,28,48)" fg:x="60418295185" fg:w="343110037"/><text x="67.7507%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (50,405,816 samples, 0.06%)</title><rect x="67.8277%" y="581" width="0.0563%" height="15" fill="rgb(250,196,2)" fg:x="60710999406" fg:w="50405816"/><text x="68.0777%" y="591.50"></text></g><g><title>rust_ui::render::text::TextRenderer::measure_text_size (394,112,977 samples, 0.44%)</title><rect x="67.8840%" y="693" width="0.4403%" height="15" fill="rgb(227,5,17)" fg:x="60761405222" fg:w="394112977"/><text x="68.1340%" y="703.50"></text></g><g><title>core::num::&lt;impl u8&gt;::from_str_radix (38,303,836 samples, 0.04%)</title><rect x="68.3437%" y="677" width="0.0428%" height="15" fill="rgb(221,226,24)" fg:x="61172847477" fg:w="38303836"/><text x="68.5937%" y="687.50"></text></g><g><title>core::num::&lt;impl u8&gt;::from_ascii_radix (38,303,836 samples, 0.04%)</title><rect x="68.3437%" y="661" width="0.0428%" height="15" fill="rgb(211,5,48)" fg:x="61172847477" fg:w="38303836"/><text x="68.5937%" y="671.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (9,415,552 samples, 0.01%)</title><rect x="68.3759%" y="645" width="0.0105%" height="15" fill="rgb(219,150,6)" fg:x="61201735761" fg:w="9415552"/><text x="68.6259%" y="655.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_start_matches (9,427,011 samples, 0.01%)</title><rect x="68.3865%" y="677" width="0.0105%" height="15" fill="rgb(251,46,16)" fg:x="61211151313" fg:w="9427011"/><text x="68.6365%" y="687.50"></text></g><g><title>core::str::pattern::Searcher::next_reject (9,427,011 samples, 0.01%)</title><rect x="68.3865%" y="661" width="0.0105%" height="15" fill="rgb(220,204,40)" fg:x="61211151313" fg:w="9427011"/><text x="68.6365%" y="671.50"></text></g><g><title>rust_ui::style::hex (61,702,945 samples, 0.07%)</title><rect x="68.3334%" y="693" width="0.0689%" height="15" fill="rgb(211,85,2)" fg:x="61163626998" fg:w="61702945"/><text x="68.5834%" y="703.50"></text></g><g><title>taffy::compute::flexbox::determine_flex_base_size (18,587,601 samples, 0.02%)</title><rect x="68.4609%" y="405" width="0.0208%" height="15" fill="rgb(229,17,7)" fg:x="61277811849" fg:w="18587601"/><text x="68.7109%" y="415.50"></text></g><g><title>taffy::tree::traits::LayoutPartialTreeExt::measure_child_size (13,955,962 samples, 0.02%)</title><rect x="68.4661%" y="389" width="0.0156%" height="15" fill="rgb(239,72,28)" fg:x="61282443488" fg:w="13955962"/><text x="68.7161%" y="399.50"></text></g><g><title>&lt;taffy::tree::taffy_tree::TaffyView&lt;NodeContext,MeasureFunction&gt; as taffy::tree::traits::LayoutPartialTree&gt;::compute_child_layout (13,955,962 samples, 0.02%)</title><rect x="68.4661%" y="373" width="0.0156%" height="15" fill="rgb(230,47,54)" fg:x="61282443488" fg:w="13955962"/><text x="68.7161%" y="383.50"></text></g><g><title>taffy::compute::compute_cached_layout (13,955,962 samples, 0.02%)</title><rect x="68.4661%" y="357" width="0.0156%" height="15" fill="rgb(214,50,8)" fg:x="61282443488" fg:w="13955962"/><text x="68.7161%" y="367.50"></text></g><g><title>taffy::compute::flexbox::compute_flexbox_layout (13,955,962 samples, 0.02%)</title><rect x="68.4661%" y="341" width="0.0156%" height="15" fill="rgb(216,198,43)" fg:x="61282443488" fg:w="13955962"/><text x="68.7161%" y="351.50"></text></g><g><title>taffy::compute::flexbox::compute_preliminary (13,955,962 samples, 0.02%)</title><rect x="68.4661%" y="325" width="0.0156%" height="15" fill="rgb(234,20,35)" fg:x="61282443488" fg:w="13955962"/><text x="68.7161%" y="335.50"></text></g><g><title>taffy::compute::flexbox::determine_flex_base_size (36,828,605 samples, 0.04%)</title><rect x="68.4422%" y="501" width="0.0411%" height="15" fill="rgb(254,45,19)" fg:x="61261008424" fg:w="36828605"/><text x="68.6922%" y="511.50"></text></g><g><title>taffy::tree::traits::LayoutPartialTreeExt::measure_child_size (32,291,178 samples, 0.04%)</title><rect x="68.4472%" y="485" width="0.0361%" height="15" fill="rgb(219,14,44)" fg:x="61265545851" fg:w="32291178"/><text x="68.6972%" y="495.50"></text></g><g><title>&lt;taffy::tree::taffy_tree::TaffyView&lt;NodeContext,MeasureFunction&gt; as taffy::tree::traits::LayoutPartialTree&gt;::compute_child_layout (32,291,178 samples, 0.04%)</title><rect x="68.4472%" y="469" width="0.0361%" height="15" fill="rgb(217,220,26)" fg:x="61265545851" fg:w="32291178"/><text x="68.6972%" y="479.50"></text></g><g><title>taffy::compute::compute_cached_layout (32,291,178 samples, 0.04%)</title><rect x="68.4472%" y="453" width="0.0361%" height="15" fill="rgb(213,158,28)" fg:x="61265545851" fg:w="32291178"/><text x="68.6972%" y="463.50"></text></g><g><title>taffy::compute::flexbox::compute_flexbox_layout (24,704,316 samples, 0.03%)</title><rect x="68.4557%" y="437" width="0.0276%" height="15" fill="rgb(252,51,52)" fg:x="61273132713" fg:w="24704316"/><text x="68.7057%" y="447.50"></text></g><g><title>taffy::compute::flexbox::compute_preliminary (24,704,316 samples, 0.03%)</title><rect x="68.4557%" y="421" width="0.0276%" height="15" fill="rgb(246,89,16)" fg:x="61273132713" fg:w="24704316"/><text x="68.7057%" y="431.50"></text></g><g><title>taffy::compute::flexbox::determine_hypothetical_cross_size (9,111,672 samples, 0.01%)</title><rect x="68.4997%" y="373" width="0.0102%" height="15" fill="rgb(216,158,49)" fg:x="61312512856" fg:w="9111672"/><text x="68.7497%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (9,111,672 samples, 0.01%)</title><rect x="68.4997%" y="357" width="0.0102%" height="15" fill="rgb(236,107,19)" fg:x="61312512856" fg:w="9111672"/><text x="68.7497%" y="367.50"></text></g><g><title>taffy::compute::flexbox::determine_hypothetical_cross_size::{{closure}} (9,111,672 samples, 0.01%)</title><rect x="68.4997%" y="341" width="0.0102%" height="15" fill="rgb(228,185,30)" fg:x="61312512856" fg:w="9111672"/><text x="68.7497%" y="351.50"></text></g><g><title>taffy::tree::traits::LayoutPartialTreeExt::measure_child_size (9,111,672 samples, 0.01%)</title><rect x="68.4997%" y="325" width="0.0102%" height="15" fill="rgb(246,134,8)" fg:x="61312512856" fg:w="9111672"/><text x="68.7497%" y="335.50"></text></g><g><title>&lt;taffy::tree::taffy_tree::TaffyView&lt;NodeContext,MeasureFunction&gt; as taffy::tree::traits::LayoutPartialTree&gt;::compute_child_layout (9,111,672 samples, 0.01%)</title><rect x="68.4997%" y="309" width="0.0102%" height="15" fill="rgb(214,143,50)" fg:x="61312512856" fg:w="9111672"/><text x="68.7497%" y="319.50"></text></g><g><title>taffy::compute::compute_cached_layout (9,111,672 samples, 0.01%)</title><rect x="68.4997%" y="293" width="0.0102%" height="15" fill="rgb(228,75,8)" fg:x="61312512856" fg:w="9111672"/><text x="68.7497%" y="303.50"></text></g><g><title>taffy::compute::flexbox::compute_flexbox_layout (9,111,672 samples, 0.01%)</title><rect x="68.4997%" y="277" width="0.0102%" height="15" fill="rgb(207,175,4)" fg:x="61312512856" fg:w="9111672"/><text x="68.7497%" y="287.50"></text></g><g><title>taffy::compute::flexbox::compute_preliminary (9,111,672 samples, 0.01%)</title><rect x="68.4997%" y="261" width="0.0102%" height="15" fill="rgb(205,108,24)" fg:x="61312512856" fg:w="9111672"/><text x="68.7497%" y="271.50"></text></g><g><title>taffy::compute::flexbox::determine_hypothetical_cross_size (33,037,728 samples, 0.04%)</title><rect x="68.4833%" y="501" width="0.0369%" height="15" fill="rgb(244,120,49)" fg:x="61297837029" fg:w="33037728"/><text x="68.7333%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (33,037,728 samples, 0.04%)</title><rect x="68.4833%" y="485" width="0.0369%" height="15" fill="rgb(223,47,38)" fg:x="61297837029" fg:w="33037728"/><text x="68.7333%" y="495.50"></text></g><g><title>taffy::compute::flexbox::determine_hypothetical_cross_size::{{closure}} (33,037,728 samples, 0.04%)</title><rect x="68.4833%" y="469" width="0.0369%" height="15" fill="rgb(229,179,11)" fg:x="61297837029" fg:w="33037728"/><text x="68.7333%" y="479.50"></text></g><g><title>taffy::tree::traits::LayoutPartialTreeExt::measure_child_size (23,777,618 samples, 0.03%)</title><rect x="68.4937%" y="453" width="0.0266%" height="15" fill="rgb(231,122,1)" fg:x="61307097139" fg:w="23777618"/><text x="68.7437%" y="463.50"></text></g><g><title>&lt;taffy::tree::taffy_tree::TaffyView&lt;NodeContext,MeasureFunction&gt; as taffy::tree::traits::LayoutPartialTree&gt;::compute_child_layout (23,777,618 samples, 0.03%)</title><rect x="68.4937%" y="437" width="0.0266%" height="15" fill="rgb(245,119,9)" fg:x="61307097139" fg:w="23777618"/><text x="68.7437%" y="447.50"></text></g><g><title>taffy::compute::compute_cached_layout (23,777,618 samples, 0.03%)</title><rect x="68.4937%" y="421" width="0.0266%" height="15" fill="rgb(241,163,25)" fg:x="61307097139" fg:w="23777618"/><text x="68.7437%" y="431.50"></text></g><g><title>taffy::compute::flexbox::compute_flexbox_layout (23,777,618 samples, 0.03%)</title><rect x="68.4937%" y="405" width="0.0266%" height="15" fill="rgb(217,214,3)" fg:x="61307097139" fg:w="23777618"/><text x="68.7437%" y="415.50"></text></g><g><title>taffy::compute::flexbox::compute_preliminary (23,777,618 samples, 0.03%)</title><rect x="68.4937%" y="389" width="0.0266%" height="15" fill="rgb(240,86,28)" fg:x="61307097139" fg:w="23777618"/><text x="68.7437%" y="399.50"></text></g><g><title>taffy::compute::flexbox::determine_flex_base_size (90,028,759 samples, 0.10%)</title><rect x="68.4266%" y="597" width="0.1006%" height="15" fill="rgb(215,47,9)" fg:x="61247113482" fg:w="90028759"/><text x="68.6766%" y="607.50"></text></g><g><title>taffy::tree::traits::LayoutPartialTreeExt::measure_child_size (80,731,163 samples, 0.09%)</title><rect x="68.4370%" y="581" width="0.0902%" height="15" fill="rgb(252,25,45)" fg:x="61256411078" fg:w="80731163"/><text x="68.6870%" y="591.50"></text></g><g><title>&lt;taffy::tree::taffy_tree::TaffyView&lt;NodeContext,MeasureFunction&gt; as taffy::tree::traits::LayoutPartialTree&gt;::compute_child_layout (80,731,163 samples, 0.09%)</title><rect x="68.4370%" y="565" width="0.0902%" height="15" fill="rgb(251,164,9)" fg:x="61256411078" fg:w="80731163"/><text x="68.6870%" y="575.50"></text></g><g><title>taffy::compute::compute_cached_layout (80,731,163 samples, 0.09%)</title><rect x="68.4370%" y="549" width="0.0902%" height="15" fill="rgb(233,194,0)" fg:x="61256411078" fg:w="80731163"/><text x="68.6870%" y="559.50"></text></g><g><title>taffy::compute::flexbox::compute_flexbox_layout (80,731,163 samples, 0.09%)</title><rect x="68.4370%" y="533" width="0.0902%" height="15" fill="rgb(249,111,24)" fg:x="61256411078" fg:w="80731163"/><text x="68.6870%" y="543.50"></text></g><g><title>taffy::compute::flexbox::compute_preliminary (80,731,163 samples, 0.09%)</title><rect x="68.4370%" y="517" width="0.0902%" height="15" fill="rgb(250,223,3)" fg:x="61256411078" fg:w="80731163"/><text x="68.6870%" y="527.50"></text></g><g><title>taffy::compute::flexbox::determine_flex_base_size (9,428,936 samples, 0.01%)</title><rect x="68.5482%" y="277" width="0.0105%" height="15" fill="rgb(236,178,37)" fg:x="61355948776" fg:w="9428936"/><text x="68.7982%" y="287.50"></text></g><g><title>taffy::compute::flexbox::determine_flex_base_size (18,749,552 samples, 0.02%)</title><rect x="68.5430%" y="373" width="0.0209%" height="15" fill="rgb(241,158,50)" fg:x="61351231488" fg:w="18749552"/><text x="68.7930%" y="383.50"></text></g><g><title>taffy::tree::traits::LayoutPartialTreeExt::measure_child_size (14,032,264 samples, 0.02%)</title><rect x="68.5482%" y="357" width="0.0157%" height="15" fill="rgb(213,121,41)" fg:x="61355948776" fg:w="14032264"/><text x="68.7982%" y="367.50"></text></g><g><title>&lt;taffy::tree::taffy_tree::TaffyView&lt;NodeContext,MeasureFunction&gt; as taffy::tree::traits::LayoutPartialTree&gt;::compute_child_layout (14,032,264 samples, 0.02%)</title><rect x="68.5482%" y="341" width="0.0157%" height="15" fill="rgb(240,92,3)" fg:x="61355948776" fg:w="14032264"/><text x="68.7982%" y="351.50"></text></g><g><title>taffy::compute::compute_cached_layout (14,032,264 samples, 0.02%)</title><rect x="68.5482%" y="325" width="0.0157%" height="15" fill="rgb(205,123,3)" fg:x="61355948776" fg:w="14032264"/><text x="68.7982%" y="335.50"></text></g><g><title>taffy::compute::flexbox::compute_flexbox_layout (14,032,264 samples, 0.02%)</title><rect x="68.5482%" y="309" width="0.0157%" height="15" fill="rgb(205,97,47)" fg:x="61355948776" fg:w="14032264"/><text x="68.7982%" y="319.50"></text></g><g><title>taffy::compute::flexbox::compute_preliminary (14,032,264 samples, 0.02%)</title><rect x="68.5482%" y="293" width="0.0157%" height="15" fill="rgb(247,152,14)" fg:x="61355948776" fg:w="14032264"/><text x="68.7982%" y="303.50"></text></g><g><title>taffy::compute::flexbox::determine_flex_base_size (30,038,808 samples, 0.03%)</title><rect x="68.5324%" y="469" width="0.0336%" height="15" fill="rgb(248,195,53)" fg:x="61341745407" fg:w="30038808"/><text x="68.7824%" y="479.50"></text></g><g><title>taffy::tree::traits::LayoutPartialTreeExt::measure_child_size (20,552,727 samples, 0.02%)</title><rect x="68.5430%" y="453" width="0.0230%" height="15" fill="rgb(226,201,16)" fg:x="61351231488" fg:w="20552727"/><text x="68.7930%" y="463.50"></text></g><g><title>&lt;taffy::tree::taffy_tree::TaffyView&lt;NodeContext,MeasureFunction&gt; as taffy::tree::traits::LayoutPartialTree&gt;::compute_child_layout (20,552,727 samples, 0.02%)</title><rect x="68.5430%" y="437" width="0.0230%" height="15" fill="rgb(205,98,0)" fg:x="61351231488" fg:w="20552727"/><text x="68.7930%" y="447.50"></text></g><g><title>taffy::compute::compute_cached_layout (20,552,727 samples, 0.02%)</title><rect x="68.5430%" y="421" width="0.0230%" height="15" fill="rgb(214,191,48)" fg:x="61351231488" fg:w="20552727"/><text x="68.7930%" y="431.50"></text></g><g><title>taffy::compute::flexbox::compute_flexbox_layout (20,552,727 samples, 0.02%)</title><rect x="68.5430%" y="405" width="0.0230%" height="15" fill="rgb(237,112,39)" fg:x="61351231488" fg:w="20552727"/><text x="68.7930%" y="415.50"></text></g><g><title>taffy::compute::flexbox::compute_preliminary (20,552,727 samples, 0.02%)</title><rect x="68.5430%" y="389" width="0.0230%" height="15" fill="rgb(247,203,27)" fg:x="61351231488" fg:w="20552727"/><text x="68.7930%" y="399.50"></text></g><g><title>taffy::compute::flexbox::determine_hypothetical_cross_size (47,234,980 samples, 0.05%)</title><rect x="68.5272%" y="597" width="0.0528%" height="15" fill="rgb(235,124,28)" fg:x="61337142241" fg:w="47234980"/><text x="68.7772%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (47,234,980 samples, 0.05%)</title><rect x="68.5272%" y="581" width="0.0528%" height="15" fill="rgb(208,207,46)" fg:x="61337142241" fg:w="47234980"/><text x="68.7772%" y="591.50"></text></g><g><title>taffy::compute::flexbox::determine_hypothetical_cross_size::{{closure}} (47,234,980 samples, 0.05%)</title><rect x="68.5272%" y="565" width="0.0528%" height="15" fill="rgb(234,176,4)" fg:x="61337142241" fg:w="47234980"/><text x="68.7772%" y="575.50"></text></g><g><title>taffy::tree::traits::LayoutPartialTreeExt::measure_child_size (47,234,980 samples, 0.05%)</title><rect x="68.5272%" y="549" width="0.0528%" height="15" fill="rgb(230,133,28)" fg:x="61337142241" fg:w="47234980"/><text x="68.7772%" y="559.50"></text></g><g><title>&lt;taffy::tree::taffy_tree::TaffyView&lt;NodeContext,MeasureFunction&gt; as taffy::tree::traits::LayoutPartialTree&gt;::compute_child_layout (47,234,980 samples, 0.05%)</title><rect x="68.5272%" y="533" width="0.0528%" height="15" fill="rgb(211,137,40)" fg:x="61337142241" fg:w="47234980"/><text x="68.7772%" y="543.50"></text></g><g><title>taffy::compute::compute_cached_layout (47,234,980 samples, 0.05%)</title><rect x="68.5272%" y="517" width="0.0528%" height="15" fill="rgb(254,35,13)" fg:x="61337142241" fg:w="47234980"/><text x="68.7772%" y="527.50"></text></g><g><title>taffy::compute::flexbox::compute_flexbox_layout (47,234,980 samples, 0.05%)</title><rect x="68.5272%" y="501" width="0.0528%" height="15" fill="rgb(225,49,51)" fg:x="61337142241" fg:w="47234980"/><text x="68.7772%" y="511.50"></text></g><g><title>taffy::compute::flexbox::compute_preliminary (47,234,980 samples, 0.05%)</title><rect x="68.5272%" y="485" width="0.0528%" height="15" fill="rgb(251,10,15)" fg:x="61337142241" fg:w="47234980"/><text x="68.7772%" y="495.50"></text></g><g><title>taffy::compute::flexbox::determine_hypothetical_cross_size (12,593,006 samples, 0.01%)</title><rect x="68.5659%" y="469" width="0.0141%" height="15" fill="rgb(228,207,15)" fg:x="61371784215" fg:w="12593006"/><text x="68.8159%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (12,593,006 samples, 0.01%)</title><rect x="68.5659%" y="453" width="0.0141%" height="15" fill="rgb(241,99,19)" fg:x="61371784215" fg:w="12593006"/><text x="68.8159%" y="463.50"></text></g><g><title>taffy::compute::flexbox::determine_hypothetical_cross_size::{{closure}} (12,593,006 samples, 0.01%)</title><rect x="68.5659%" y="437" width="0.0141%" height="15" fill="rgb(207,104,49)" fg:x="61371784215" fg:w="12593006"/><text x="68.8159%" y="447.50"></text></g><g><title>taffy::tree::traits::LayoutPartialTreeExt::measure_child_size (12,593,006 samples, 0.01%)</title><rect x="68.5659%" y="421" width="0.0141%" height="15" fill="rgb(234,99,18)" fg:x="61371784215" fg:w="12593006"/><text x="68.8159%" y="431.50"></text></g><g><title>&lt;taffy::tree::taffy_tree::TaffyView&lt;NodeContext,MeasureFunction&gt; as taffy::tree::traits::LayoutPartialTree&gt;::compute_child_layout (12,593,006 samples, 0.01%)</title><rect x="68.5659%" y="405" width="0.0141%" height="15" fill="rgb(213,191,49)" fg:x="61371784215" fg:w="12593006"/><text x="68.8159%" y="415.50"></text></g><g><title>taffy::compute::compute_cached_layout (12,593,006 samples, 0.01%)</title><rect x="68.5659%" y="389" width="0.0141%" height="15" fill="rgb(210,226,19)" fg:x="61371784215" fg:w="12593006"/><text x="68.8159%" y="399.50"></text></g><g><title>taffy::compute::flexbox::compute_flexbox_layout (12,091,502 samples, 0.01%)</title><rect x="68.5665%" y="373" width="0.0135%" height="15" fill="rgb(229,97,18)" fg:x="61372285719" fg:w="12091502"/><text x="68.8165%" y="383.50"></text></g><g><title>taffy::compute::flexbox::compute_preliminary (12,091,502 samples, 0.01%)</title><rect x="68.5665%" y="357" width="0.0135%" height="15" fill="rgb(211,167,15)" fg:x="61372285719" fg:w="12091502"/><text x="68.8165%" y="367.50"></text></g><g><title>taffy::compute::compute_root_layout (147,215,190 samples, 0.16%)</title><rect x="68.4266%" y="693" width="0.1645%" height="15" fill="rgb(210,169,34)" fg:x="61247113482" fg:w="147215190"/><text x="68.6766%" y="703.50"></text></g><g><title>taffy::tree::traits::LayoutPartialTreeExt::perform_child_layout (147,215,190 samples, 0.16%)</title><rect x="68.4266%" y="677" width="0.1645%" height="15" fill="rgb(241,121,31)" fg:x="61247113482" fg:w="147215190"/><text x="68.6766%" y="687.50"></text></g><g><title>&lt;taffy::tree::taffy_tree::TaffyView&lt;NodeContext,MeasureFunction&gt; as taffy::tree::traits::LayoutPartialTree&gt;::compute_child_layout (147,215,190 samples, 0.16%)</title><rect x="68.4266%" y="661" width="0.1645%" height="15" fill="rgb(232,40,11)" fg:x="61247113482" fg:w="147215190"/><text x="68.6766%" y="671.50"></text></g><g><title>taffy::compute::compute_cached_layout (147,215,190 samples, 0.16%)</title><rect x="68.4266%" y="645" width="0.1645%" height="15" fill="rgb(205,86,26)" fg:x="61247113482" fg:w="147215190"/><text x="68.6766%" y="655.50"></text></g><g><title>taffy::compute::flexbox::compute_flexbox_layout (147,215,190 samples, 0.16%)</title><rect x="68.4266%" y="629" width="0.1645%" height="15" fill="rgb(231,126,28)" fg:x="61247113482" fg:w="147215190"/><text x="68.6766%" y="639.50"></text></g><g><title>taffy::compute::flexbox::compute_preliminary (147,215,190 samples, 0.16%)</title><rect x="68.4266%" y="613" width="0.1645%" height="15" fill="rgb(219,221,18)" fg:x="61247113482" fg:w="147215190"/><text x="68.6766%" y="623.50"></text></g><g><title>taffy::compute::flexbox::calculate_flex_item (23,287,462 samples, 0.03%)</title><rect x="68.5911%" y="693" width="0.0260%" height="15" fill="rgb(211,40,0)" fg:x="61394328672" fg:w="23287462"/><text x="68.8411%" y="703.50"></text></g><g><title>taffy::tree::traits::LayoutPartialTreeExt::perform_child_layout (23,287,462 samples, 0.03%)</title><rect x="68.5911%" y="677" width="0.0260%" height="15" fill="rgb(239,85,43)" fg:x="61394328672" fg:w="23287462"/><text x="68.8411%" y="687.50"></text></g><g><title>&lt;taffy::tree::taffy_tree::TaffyView&lt;NodeContext,MeasureFunction&gt; as taffy::tree::traits::LayoutPartialTree&gt;::compute_child_layout (23,287,462 samples, 0.03%)</title><rect x="68.5911%" y="661" width="0.0260%" height="15" fill="rgb(231,55,21)" fg:x="61394328672" fg:w="23287462"/><text x="68.8411%" y="671.50"></text></g><g><title>taffy::compute::compute_cached_layout (23,287,462 samples, 0.03%)</title><rect x="68.5911%" y="645" width="0.0260%" height="15" fill="rgb(225,184,43)" fg:x="61394328672" fg:w="23287462"/><text x="68.8411%" y="655.50"></text></g><g><title>taffy::compute::flexbox::compute_flexbox_layout (23,287,462 samples, 0.03%)</title><rect x="68.5911%" y="629" width="0.0260%" height="15" fill="rgb(251,158,41)" fg:x="61394328672" fg:w="23287462"/><text x="68.8411%" y="639.50"></text></g><g><title>taffy::compute::flexbox::compute_preliminary (23,287,462 samples, 0.03%)</title><rect x="68.5911%" y="613" width="0.0260%" height="15" fill="rgb(234,159,37)" fg:x="61394328672" fg:w="23287462"/><text x="68.8411%" y="623.50"></text></g><g><title>taffy::compute::flexbox::resolve_flexible_lengths (9,249,781 samples, 0.01%)</title><rect x="68.6068%" y="597" width="0.0103%" height="15" fill="rgb(216,204,22)" fg:x="61408366353" fg:w="9249781"/><text x="68.8568%" y="607.50"></text></g><g><title>taffy::compute::leaf::compute_leaf_layout (23,016,505 samples, 0.03%)</title><rect x="68.6223%" y="693" width="0.0257%" height="15" fill="rgb(214,17,3)" fg:x="61422236635" fg:w="23016505"/><text x="68.8723%" y="703.50"></text></g><g><title>[unknown] (58,075,609,193 samples, 64.88%)</title><rect x="3.7662%" y="709" width="64.8834%" height="15" fill="rgb(212,111,17)" fg:x="3371029957" fg:w="58075609193"/><text x="4.0162%" y="719.50">[unknown]</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (13,815,606 samples, 0.02%)</title><rect x="68.6961%" y="661" width="0.0154%" height="15" fill="rgb(221,157,24)" fg:x="61488311303" fg:w="13815606"/><text x="68.9461%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (34,809,837 samples, 0.04%)</title><rect x="68.6830%" y="709" width="0.0389%" height="15" fill="rgb(252,16,13)" fg:x="61476597175" fg:w="34809837"/><text x="68.9330%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (32,583,493 samples, 0.04%)</title><rect x="68.6855%" y="693" width="0.0364%" height="15" fill="rgb(221,62,2)" fg:x="61478823519" fg:w="32583493"/><text x="68.9355%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (27,771,634 samples, 0.03%)</title><rect x="68.6909%" y="677" width="0.0310%" height="15" fill="rgb(247,87,22)" fg:x="61483635378" fg:w="27771634"/><text x="68.9409%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (10,959,222 samples, 0.01%)</title><rect x="68.7617%" y="533" width="0.0122%" height="15" fill="rgb(215,73,9)" fg:x="61547023364" fg:w="10959222"/><text x="69.0117%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10,959,222 samples, 0.01%)</title><rect x="68.7617%" y="517" width="0.0122%" height="15" fill="rgb(207,175,33)" fg:x="61547023364" fg:w="10959222"/><text x="69.0117%" y="527.50"></text></g><g><title>alloc::raw_vec::layout_array (26,060,825 samples, 0.03%)</title><rect x="68.7585%" y="677" width="0.0291%" height="15" fill="rgb(243,129,54)" fg:x="61544183895" fg:w="26060825"/><text x="69.0085%" y="687.50"></text></g><g><title>core::alloc::layout::Layout::repeat (26,060,825 samples, 0.03%)</title><rect x="68.7585%" y="661" width="0.0291%" height="15" fill="rgb(227,119,45)" fg:x="61544183895" fg:w="26060825"/><text x="69.0085%" y="671.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (26,060,825 samples, 0.03%)</title><rect x="68.7585%" y="645" width="0.0291%" height="15" fill="rgb(205,109,36)" fg:x="61544183895" fg:w="26060825"/><text x="69.0085%" y="655.50"></text></g><g><title>core::alloc::layout::Layout::size_rounded_up_to_custom_align (26,060,825 samples, 0.03%)</title><rect x="68.7585%" y="629" width="0.0291%" height="15" fill="rgb(205,6,39)" fg:x="61544183895" fg:w="26060825"/><text x="69.0085%" y="639.50"></text></g><g><title>sysinfo::unix::linux::process::parse_stat_file (26,060,825 samples, 0.03%)</title><rect x="68.7585%" y="613" width="0.0291%" height="15" fill="rgb(221,32,16)" fg:x="61544183895" fg:w="26060825"/><text x="69.0085%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (26,060,825 samples, 0.03%)</title><rect x="68.7585%" y="597" width="0.0291%" height="15" fill="rgb(228,144,50)" fg:x="61544183895" fg:w="26060825"/><text x="69.0085%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (26,060,825 samples, 0.03%)</title><rect x="68.7585%" y="581" width="0.0291%" height="15" fill="rgb(229,201,53)" fg:x="61544183895" fg:w="26060825"/><text x="69.0085%" y="591.50"></text></g><g><title>sysinfo::unix::linux::process::copy_from_file (26,060,825 samples, 0.03%)</title><rect x="68.7585%" y="565" width="0.0291%" height="15" fill="rgb(249,153,27)" fg:x="61544183895" fg:w="26060825"/><text x="69.0085%" y="575.50"></text></g><g><title>sysinfo::unix::linux::process::split_content (23,221,356 samples, 0.03%)</title><rect x="68.7617%" y="549" width="0.0259%" height="15" fill="rgb(227,106,25)" fg:x="61547023364" fg:w="23221356"/><text x="69.0117%" y="559.50"></text></g><g><title>std::ffi::os_str::OsStr::to_os_string (9,940,732 samples, 0.01%)</title><rect x="68.7765%" y="533" width="0.0111%" height="15" fill="rgb(230,65,29)" fg:x="61560303988" fg:w="9940732"/><text x="69.0265%" y="543.50"></text></g><g><title>std::sys::os_str::bytes::Slice::to_owned (9,940,732 samples, 0.01%)</title><rect x="68.7765%" y="517" width="0.0111%" height="15" fill="rgb(221,57,46)" fg:x="61560303988" fg:w="9940732"/><text x="69.0265%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (9,940,732 samples, 0.01%)</title><rect x="68.7765%" y="501" width="0.0111%" height="15" fill="rgb(229,161,17)" fg:x="61560303988" fg:w="9940732"/><text x="69.0265%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,940,732 samples, 0.01%)</title><rect x="68.7765%" y="485" width="0.0111%" height="15" fill="rgb(222,213,11)" fg:x="61560303988" fg:w="9940732"/><text x="69.0265%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (9,940,732 samples, 0.01%)</title><rect x="68.7765%" y="469" width="0.0111%" height="15" fill="rgb(235,35,13)" fg:x="61560303988" fg:w="9940732"/><text x="69.0265%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9,940,732 samples, 0.01%)</title><rect x="68.7765%" y="453" width="0.0111%" height="15" fill="rgb(233,158,34)" fg:x="61560303988" fg:w="9940732"/><text x="69.0265%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9,940,732 samples, 0.01%)</title><rect x="68.7765%" y="437" width="0.0111%" height="15" fill="rgb(215,151,48)" fg:x="61560303988" fg:w="9940732"/><text x="69.0265%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (9,940,732 samples, 0.01%)</title><rect x="68.7765%" y="421" width="0.0111%" height="15" fill="rgb(229,84,14)" fg:x="61560303988" fg:w="9940732"/><text x="69.0265%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (9,940,732 samples, 0.01%)</title><rect x="68.7765%" y="405" width="0.0111%" height="15" fill="rgb(229,68,14)" fg:x="61560303988" fg:w="9940732"/><text x="69.0265%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9,940,732 samples, 0.01%)</title><rect x="68.7765%" y="389" width="0.0111%" height="15" fill="rgb(243,106,26)" fg:x="61560303988" fg:w="9940732"/><text x="69.0265%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9,940,732 samples, 0.01%)</title><rect x="68.7765%" y="373" width="0.0111%" height="15" fill="rgb(206,45,38)" fg:x="61560303988" fg:w="9940732"/><text x="69.0265%" y="383.50"></text></g><g><title>alloc::alloc::alloc (9,940,732 samples, 0.01%)</title><rect x="68.7765%" y="357" width="0.0111%" height="15" fill="rgb(226,6,15)" fg:x="61560303988" fg:w="9940732"/><text x="69.0265%" y="367.50"></text></g><g><title>__rustc::__rdl_alloc (9,940,732 samples, 0.01%)</title><rect x="68.7765%" y="341" width="0.0111%" height="15" fill="rgb(232,22,54)" fg:x="61560303988" fg:w="9940732"/><text x="69.0265%" y="351.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (9,940,732 samples, 0.01%)</title><rect x="68.7765%" y="325" width="0.0111%" height="15" fill="rgb(229,222,32)" fg:x="61560303988" fg:w="9940732"/><text x="69.0265%" y="335.50"></text></g><g><title>[libc.so.6] (9,940,732 samples, 0.01%)</title><rect x="68.7765%" y="309" width="0.0111%" height="15" fill="rgb(228,62,29)" fg:x="61560303988" fg:w="9940732"/><text x="69.0265%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (63,346,929 samples, 0.07%)</title><rect x="68.7219%" y="709" width="0.0708%" height="15" fill="rgb(251,103,34)" fg:x="61511407012" fg:w="63346929"/><text x="68.9719%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (54,107,361 samples, 0.06%)</title><rect x="68.7322%" y="693" width="0.0604%" height="15" fill="rgb(233,12,30)" fg:x="61520646580" fg:w="54107361"/><text x="68.9822%" y="703.50"></text></g><g><title>[unknown] (184,863,013 samples, 0.21%)</title><rect x="68.8967%" y="613" width="0.2065%" height="15" fill="rgb(238,52,0)" fg:x="61667866640" fg:w="184863013"/><text x="69.1467%" y="623.50"></text></g><g><title>rust_ui::render::text::TextRenderer::get_or_create_atlas (184,863,013 samples, 0.21%)</title><rect x="68.8967%" y="597" width="0.2065%" height="15" fill="rgb(223,98,5)" fg:x="61667866640" fg:w="184863013"/><text x="69.1467%" y="607.50"></text></g><g><title>[libc.so.6] (725,717,412 samples, 0.81%)</title><rect x="69.5898%" y="581" width="0.8108%" height="15" fill="rgb(228,75,37)" fg:x="62288262506" fg:w="725717412"/><text x="69.8398%" y="591.50"></text></g><g><title>[libc.so.6] (135,174,390 samples, 0.15%)</title><rect x="70.2496%" y="565" width="0.1510%" height="15" fill="rgb(205,115,49)" fg:x="62878805528" fg:w="135174390"/><text x="70.4996%" y="575.50"></text></g><g><title>[libc.so.6] (18,617,124 samples, 0.02%)</title><rect x="70.3798%" y="549" width="0.0208%" height="15" fill="rgb(250,154,43)" fg:x="62995362794" fg:w="18617124"/><text x="70.6298%" y="559.50"></text></g><g><title>[libc.so.6] (857,431,135 samples, 0.96%)</title><rect x="69.4443%" y="597" width="0.9579%" height="15" fill="rgb(226,43,29)" fg:x="62157986692" fg:w="857431135"/><text x="69.6943%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,361,637,509 samples, 1.52%)</title><rect x="68.8862%" y="693" width="1.5213%" height="15" fill="rgb(249,228,39)" fg:x="61658416872" fg:w="1361637509"/><text x="69.1362%" y="703.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,361,637,509 samples, 1.52%)</title><rect x="68.8862%" y="677" width="1.5213%" height="15" fill="rgb(216,79,43)" fg:x="61658416872" fg:w="1361637509"/><text x="69.1362%" y="687.50"></text></g><g><title>alloc::alloc::realloc (1,361,637,509 samples, 1.52%)</title><rect x="68.8862%" y="661" width="1.5213%" height="15" fill="rgb(228,95,12)" fg:x="61658416872" fg:w="1361637509"/><text x="69.1362%" y="671.50"></text></g><g><title>__rustc::__rdl_realloc (1,361,637,509 samples, 1.52%)</title><rect x="68.8862%" y="645" width="1.5213%" height="15" fill="rgb(249,221,15)" fg:x="61658416872" fg:w="1361637509"/><text x="69.1362%" y="655.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1,361,637,509 samples, 1.52%)</title><rect x="68.8862%" y="629" width="1.5213%" height="15" fill="rgb(233,34,13)" fg:x="61658416872" fg:w="1361637509"/><text x="69.1362%" y="639.50"></text></g><g><title>realloc (1,167,324,728 samples, 1.30%)</title><rect x="69.1033%" y="613" width="1.3042%" height="15" fill="rgb(214,103,39)" fg:x="61852729653" fg:w="1167324728"/><text x="69.3533%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,548,179,076 samples, 1.73%)</title><rect x="68.7927%" y="709" width="1.7297%" height="15" fill="rgb(251,126,39)" fg:x="61574753941" fg:w="1548179076"/><text x="69.0427%" y="719.50"></text></g><g><title>malloc (98,214,017 samples, 0.11%)</title><rect x="70.4126%" y="693" width="0.1097%" height="15" fill="rgb(214,216,36)" fg:x="63024719000" fg:w="98214017"/><text x="70.6626%" y="703.50"></text></g><g><title>cad_frontend::entity_picker::EntityPicker::enable_writing (18,613,791 samples, 0.02%)</title><rect x="70.5231%" y="693" width="0.0208%" height="15" fill="rgb(220,221,8)" fg:x="63123625706" fg:w="18613791"/><text x="70.7731%" y="703.50"></text></g><g><title>gl::BindFramebuffer (18,613,791 samples, 0.02%)</title><rect x="70.5231%" y="677" width="0.0208%" height="15" fill="rgb(240,216,3)" fg:x="63123625706" fg:w="18613791"/><text x="70.7731%" y="687.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (18,613,791 samples, 0.02%)</title><rect x="70.5231%" y="661" width="0.0208%" height="15" fill="rgb(232,218,17)" fg:x="63123625706" fg:w="18613791"/><text x="70.7731%" y="671.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (18,613,791 samples, 0.02%)</title><rect x="70.5231%" y="645" width="0.0208%" height="15" fill="rgb(229,163,45)" fg:x="63123625706" fg:w="18613791"/><text x="70.7731%" y="655.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (18,613,791 samples, 0.02%)</title><rect x="70.5231%" y="629" width="0.0208%" height="15" fill="rgb(231,110,42)" fg:x="63123625706" fg:w="18613791"/><text x="70.7731%" y="639.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (18,613,791 samples, 0.02%)</title><rect x="70.5231%" y="613" width="0.0208%" height="15" fill="rgb(208,170,48)" fg:x="63123625706" fg:w="18613791"/><text x="70.7731%" y="623.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (18,613,791 samples, 0.02%)</title><rect x="70.5231%" y="597" width="0.0208%" height="15" fill="rgb(239,116,25)" fg:x="63123625706" fg:w="18613791"/><text x="70.7731%" y="607.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,419,709 samples, 0.01%)</title><rect x="70.5334%" y="581" width="0.0105%" height="15" fill="rgb(219,200,50)" fg:x="63132819788" fg:w="9419709"/><text x="70.7834%" y="591.50"></text></g><g><title>gl::BindFramebuffer (72,069,541 samples, 0.08%)</title><rect x="70.5439%" y="677" width="0.0805%" height="15" fill="rgb(245,200,0)" fg:x="63142239497" fg:w="72069541"/><text x="70.7939%" y="687.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (72,069,541 samples, 0.08%)</title><rect x="70.5439%" y="661" width="0.0805%" height="15" fill="rgb(245,119,33)" fg:x="63142239497" fg:w="72069541"/><text x="70.7939%" y="671.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (72,069,541 samples, 0.08%)</title><rect x="70.5439%" y="645" width="0.0805%" height="15" fill="rgb(231,125,12)" fg:x="63142239497" fg:w="72069541"/><text x="70.7939%" y="655.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (67,266,062 samples, 0.08%)</title><rect x="70.5493%" y="629" width="0.0752%" height="15" fill="rgb(216,96,41)" fg:x="63147042976" fg:w="67266062"/><text x="70.7993%" y="639.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (62,499,061 samples, 0.07%)</title><rect x="70.5546%" y="613" width="0.0698%" height="15" fill="rgb(248,43,45)" fg:x="63151809977" fg:w="62499061"/><text x="70.8046%" y="623.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (53,072,016 samples, 0.06%)</title><rect x="70.5651%" y="597" width="0.0593%" height="15" fill="rgb(217,222,7)" fg:x="63161237022" fg:w="53072016"/><text x="70.8151%" y="607.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (37,027,714 samples, 0.04%)</title><rect x="70.5831%" y="581" width="0.0414%" height="15" fill="rgb(233,28,6)" fg:x="63177281324" fg:w="37027714"/><text x="70.8331%" y="591.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (14,560,804 samples, 0.02%)</title><rect x="70.6082%" y="565" width="0.0163%" height="15" fill="rgb(231,218,15)" fg:x="63199748234" fg:w="14560804"/><text x="70.8582%" y="575.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (14,560,804 samples, 0.02%)</title><rect x="70.6082%" y="549" width="0.0163%" height="15" fill="rgb(226,171,48)" fg:x="63199748234" fg:w="14560804"/><text x="70.8582%" y="559.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,984,187 samples, 0.01%)</title><rect x="70.6133%" y="533" width="0.0112%" height="15" fill="rgb(235,201,9)" fg:x="63204324851" fg:w="9984187"/><text x="70.8633%" y="543.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,233,805 samples, 0.01%)</title><rect x="70.8548%" y="437" width="0.0103%" height="15" fill="rgb(217,80,15)" fg:x="63420525384" fg:w="9233805"/><text x="71.1048%" y="447.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,233,805 samples, 0.01%)</title><rect x="70.8548%" y="421" width="0.0103%" height="15" fill="rgb(219,152,8)" fg:x="63420525384" fg:w="9233805"/><text x="71.1048%" y="431.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (23,517,424 samples, 0.03%)</title><rect x="70.8548%" y="453" width="0.0263%" height="15" fill="rgb(243,107,38)" fg:x="63420525384" fg:w="23517424"/><text x="71.1048%" y="463.50"></text></g><g><title>clock_gettime (14,283,619 samples, 0.02%)</title><rect x="70.8651%" y="437" width="0.0160%" height="15" fill="rgb(231,17,5)" fg:x="63429759189" fg:w="14283619"/><text x="71.1151%" y="447.50"></text></g><g><title>__vdso_clock_gettime (14,283,619 samples, 0.02%)</title><rect x="70.8651%" y="421" width="0.0160%" height="15" fill="rgb(209,25,54)" fg:x="63429759189" fg:w="14283619"/><text x="71.1151%" y="431.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (136,290,717 samples, 0.15%)</title><rect x="70.8285%" y="469" width="0.1523%" height="15" fill="rgb(219,0,2)" fg:x="63396926463" fg:w="136290717"/><text x="71.0785%" y="479.50"></text></g><g><title>clock_gettime (89,174,372 samples, 0.10%)</title><rect x="70.8811%" y="453" width="0.0996%" height="15" fill="rgb(246,9,5)" fg:x="63444042808" fg:w="89174372"/><text x="71.1311%" y="463.50"></text></g><g><title>__vdso_clock_gettime (79,787,338 samples, 0.09%)</title><rect x="70.8916%" y="437" width="0.0891%" height="15" fill="rgb(226,159,4)" fg:x="63453429842" fg:w="79787338"/><text x="71.1416%" y="447.50"></text></g><g><title>cad_frontend::entity_picker::EntityPicker::read_pixel (400,544,565 samples, 0.45%)</title><rect x="70.5439%" y="693" width="0.4475%" height="15" fill="rgb(219,175,34)" fg:x="63142239497" fg:w="400544565"/><text x="70.7939%" y="703.50"></text></g><g><title>gl::ReadPixels (328,475,024 samples, 0.37%)</title><rect x="70.6244%" y="677" width="0.3670%" height="15" fill="rgb(236,10,46)" fg:x="63214309038" fg:w="328475024"/><text x="70.8744%" y="687.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (328,475,024 samples, 0.37%)</title><rect x="70.6244%" y="661" width="0.3670%" height="15" fill="rgb(240,211,16)" fg:x="63214309038" fg:w="328475024"/><text x="70.8744%" y="671.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (328,475,024 samples, 0.37%)</title><rect x="70.6244%" y="645" width="0.3670%" height="15" fill="rgb(205,3,43)" fg:x="63214309038" fg:w="328475024"/><text x="70.8744%" y="655.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (323,672,321 samples, 0.36%)</title><rect x="70.6298%" y="629" width="0.3616%" height="15" fill="rgb(245,7,22)" fg:x="63219111741" fg:w="323672321"/><text x="70.8798%" y="639.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (323,672,321 samples, 0.36%)</title><rect x="70.6298%" y="613" width="0.3616%" height="15" fill="rgb(239,132,32)" fg:x="63219111741" fg:w="323672321"/><text x="70.8798%" y="623.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (318,928,867 samples, 0.36%)</title><rect x="70.6351%" y="597" width="0.3563%" height="15" fill="rgb(228,202,34)" fg:x="63223855195" fg:w="318928867"/><text x="70.8851%" y="607.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (314,223,387 samples, 0.35%)</title><rect x="70.6404%" y="581" width="0.3511%" height="15" fill="rgb(254,200,22)" fg:x="63228560675" fg:w="314223387"/><text x="70.8904%" y="591.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (309,589,845 samples, 0.35%)</title><rect x="70.6455%" y="565" width="0.3459%" height="15" fill="rgb(219,10,39)" fg:x="63233194217" fg:w="309589845"/><text x="70.8955%" y="575.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (300,130,809 samples, 0.34%)</title><rect x="70.6561%" y="549" width="0.3353%" height="15" fill="rgb(226,210,39)" fg:x="63242653253" fg:w="300130809"/><text x="70.9061%" y="559.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (300,130,809 samples, 0.34%)</title><rect x="70.6561%" y="533" width="0.3353%" height="15" fill="rgb(208,219,16)" fg:x="63242653253" fg:w="300130809"/><text x="70.9061%" y="543.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (290,713,354 samples, 0.32%)</title><rect x="70.6666%" y="517" width="0.3248%" height="15" fill="rgb(216,158,51)" fg:x="63252070708" fg:w="290713354"/><text x="70.9166%" y="527.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (290,713,354 samples, 0.32%)</title><rect x="70.6666%" y="501" width="0.3248%" height="15" fill="rgb(233,14,44)" fg:x="63252070708" fg:w="290713354"/><text x="70.9166%" y="511.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (211,207,460 samples, 0.24%)</title><rect x="70.7555%" y="485" width="0.2360%" height="15" fill="rgb(237,97,39)" fg:x="63331576602" fg:w="211207460"/><text x="71.0055%" y="495.50"></text></g><g><title>drmIoctl (9,566,882 samples, 0.01%)</title><rect x="70.9807%" y="469" width="0.0107%" height="15" fill="rgb(218,198,43)" fg:x="63533217180" fg:w="9566882"/><text x="71.2307%" y="479.50"></text></g><g><title>cad::registry::Registry&lt;K,V&gt;::iter (14,075,746 samples, 0.02%)</title><rect x="70.9914%" y="677" width="0.0157%" height="15" fill="rgb(231,104,20)" fg:x="63542784062" fg:w="14075746"/><text x="71.2414%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (14,075,746 samples, 0.02%)</title><rect x="70.9914%" y="661" width="0.0157%" height="15" fill="rgb(254,36,13)" fg:x="63542784062" fg:w="14075746"/><text x="71.2414%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (14,075,746 samples, 0.02%)</title><rect x="70.9914%" y="645" width="0.0157%" height="15" fill="rgb(248,14,50)" fg:x="63542784062" fg:w="14075746"/><text x="71.2414%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (14,075,746 samples, 0.02%)</title><rect x="70.9914%" y="629" width="0.0157%" height="15" fill="rgb(217,107,29)" fg:x="63542784062" fg:w="14075746"/><text x="71.2414%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (14,075,746 samples, 0.02%)</title><rect x="70.9914%" y="613" width="0.0157%" height="15" fill="rgb(251,169,33)" fg:x="63542784062" fg:w="14075746"/><text x="71.2414%" y="623.50"></text></g><g><title>[libm.so.6] (14,075,746 samples, 0.02%)</title><rect x="70.9914%" y="597" width="0.0157%" height="15" fill="rgb(217,108,32)" fg:x="63542784062" fg:w="14075746"/><text x="71.2414%" y="607.50"></text></g><g><title>cad_frontend::sketch_renderer::SketchPicker::compute_pick_locations (29,968,741 samples, 0.03%)</title><rect x="70.9914%" y="693" width="0.0335%" height="15" fill="rgb(219,66,42)" fg:x="63542784062" fg:w="29968741"/><text x="71.2414%" y="703.50"></text></g><g><title>cad_frontend::app::App::draw_special_areas (467,861,382 samples, 0.52%)</title><rect x="70.5231%" y="709" width="0.5227%" height="15" fill="rgb(206,180,7)" fg:x="63123625706" fg:w="467861382"/><text x="70.7731%" y="719.50"></text></g><g><title>gl::Clear (18,734,285 samples, 0.02%)</title><rect x="71.0249%" y="693" width="0.0209%" height="15" fill="rgb(208,226,31)" fg:x="63572752803" fg:w="18734285"/><text x="71.2749%" y="703.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (18,734,285 samples, 0.02%)</title><rect x="71.0249%" y="677" width="0.0209%" height="15" fill="rgb(218,26,49)" fg:x="63572752803" fg:w="18734285"/><text x="71.2749%" y="687.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (18,734,285 samples, 0.02%)</title><rect x="71.0249%" y="661" width="0.0209%" height="15" fill="rgb(233,197,48)" fg:x="63572752803" fg:w="18734285"/><text x="71.2749%" y="671.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (18,734,285 samples, 0.02%)</title><rect x="71.0249%" y="645" width="0.0209%" height="15" fill="rgb(252,181,51)" fg:x="63572752803" fg:w="18734285"/><text x="71.2749%" y="655.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,488,820 samples, 0.01%)</title><rect x="71.0352%" y="629" width="0.0106%" height="15" fill="rgb(253,90,19)" fg:x="63581998268" fg:w="9488820"/><text x="71.2852%" y="639.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,488,820 samples, 0.01%)</title><rect x="71.0352%" y="613" width="0.0106%" height="15" fill="rgb(215,171,30)" fg:x="63581998268" fg:w="9488820"/><text x="71.2852%" y="623.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (13,997,285 samples, 0.02%)</title><rect x="71.0749%" y="597" width="0.0156%" height="15" fill="rgb(214,222,9)" fg:x="63617466946" fg:w="13997285"/><text x="71.3249%" y="607.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (13,997,285 samples, 0.02%)</title><rect x="71.0749%" y="581" width="0.0156%" height="15" fill="rgb(223,3,22)" fg:x="63617466946" fg:w="13997285"/><text x="71.3249%" y="591.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (13,997,285 samples, 0.02%)</title><rect x="71.0749%" y="565" width="0.0156%" height="15" fill="rgb(225,196,46)" fg:x="63617466946" fg:w="13997285"/><text x="71.3249%" y="575.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (11,373,643 samples, 0.01%)</title><rect x="71.1578%" y="405" width="0.0127%" height="15" fill="rgb(209,110,37)" fg:x="63691699723" fg:w="11373643"/><text x="71.4078%" y="415.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (23,158,240 samples, 0.03%)</title><rect x="71.1454%" y="421" width="0.0259%" height="15" fill="rgb(249,89,12)" fg:x="63680634559" fg:w="23158240"/><text x="71.3954%" y="431.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (37,278,720 samples, 0.04%)</title><rect x="71.1401%" y="437" width="0.0416%" height="15" fill="rgb(226,27,33)" fg:x="63675841319" fg:w="37278720"/><text x="71.3901%" y="447.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,327,240 samples, 0.01%)</title><rect x="71.1713%" y="421" width="0.0104%" height="15" fill="rgb(213,82,22)" fg:x="63703792799" fg:w="9327240"/><text x="71.4213%" y="431.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (9,327,240 samples, 0.01%)</title><rect x="71.1713%" y="405" width="0.0104%" height="15" fill="rgb(248,140,0)" fg:x="63703792799" fg:w="9327240"/><text x="71.4213%" y="415.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (9,327,240 samples, 0.01%)</title><rect x="71.1713%" y="389" width="0.0104%" height="15" fill="rgb(228,106,3)" fg:x="63703792799" fg:w="9327240"/><text x="71.4213%" y="399.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (53,727,479 samples, 0.06%)</title><rect x="71.1278%" y="453" width="0.0600%" height="15" fill="rgb(209,23,37)" fg:x="63664833140" fg:w="53727479"/><text x="71.3778%" y="463.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (81,647,593 samples, 0.09%)</title><rect x="71.1069%" y="501" width="0.0912%" height="15" fill="rgb(241,93,50)" fg:x="63646187501" fg:w="81647593"/><text x="71.3569%" y="511.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (81,647,593 samples, 0.09%)</title><rect x="71.1069%" y="485" width="0.0912%" height="15" fill="rgb(253,46,43)" fg:x="63646187501" fg:w="81647593"/><text x="71.3569%" y="495.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (81,647,593 samples, 0.09%)</title><rect x="71.1069%" y="469" width="0.0912%" height="15" fill="rgb(226,206,43)" fg:x="63646187501" fg:w="81647593"/><text x="71.3569%" y="479.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,274,475 samples, 0.01%)</title><rect x="71.1878%" y="453" width="0.0104%" height="15" fill="rgb(217,54,7)" fg:x="63718560619" fg:w="9274475"/><text x="71.4378%" y="463.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (9,274,475 samples, 0.01%)</title><rect x="71.1878%" y="437" width="0.0104%" height="15" fill="rgb(223,5,52)" fg:x="63718560619" fg:w="9274475"/><text x="71.4378%" y="447.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (9,274,475 samples, 0.01%)</title><rect x="71.1878%" y="421" width="0.0104%" height="15" fill="rgb(206,52,46)" fg:x="63718560619" fg:w="9274475"/><text x="71.4378%" y="431.50"></text></g><g><title>core::slice::memchr::memchr (9,274,475 samples, 0.01%)</title><rect x="71.1878%" y="405" width="0.0104%" height="15" fill="rgb(253,136,11)" fg:x="63718560619" fg:w="9274475"/><text x="71.4378%" y="415.50"></text></g><g><title>core::slice::memchr::memchr_naive (9,274,475 samples, 0.01%)</title><rect x="71.1878%" y="389" width="0.0104%" height="15" fill="rgb(208,106,33)" fg:x="63718560619" fg:w="9274475"/><text x="71.4378%" y="399.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (94,303,424 samples, 0.11%)</title><rect x="71.1009%" y="549" width="0.1054%" height="15" fill="rgb(206,54,4)" fg:x="63640781305" fg:w="94303424"/><text x="71.3509%" y="559.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (94,303,424 samples, 0.11%)</title><rect x="71.1009%" y="533" width="0.1054%" height="15" fill="rgb(213,3,15)" fg:x="63640781305" fg:w="94303424"/><text x="71.3509%" y="543.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (93,495,088 samples, 0.10%)</title><rect x="71.1018%" y="517" width="0.1045%" height="15" fill="rgb(252,211,39)" fg:x="63641589641" fg:w="93495088"/><text x="71.3518%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (127,706,194 samples, 0.14%)</title><rect x="71.0689%" y="613" width="0.1427%" height="15" fill="rgb(223,6,36)" fg:x="63612153054" fg:w="127706194"/><text x="71.3189%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts::write_bytes (108,395,017 samples, 0.12%)</title><rect x="71.0905%" y="597" width="0.1211%" height="15" fill="rgb(252,169,45)" fg:x="63631464231" fg:w="108395017"/><text x="71.3405%" y="607.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (108,395,017 samples, 0.12%)</title><rect x="71.0905%" y="581" width="0.1211%" height="15" fill="rgb(212,48,26)" fg:x="63631464231" fg:w="108395017"/><text x="71.3405%" y="591.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (99,077,943 samples, 0.11%)</title><rect x="71.1009%" y="565" width="0.1107%" height="15" fill="rgb(251,102,48)" fg:x="63640781305" fg:w="99077943"/><text x="71.3509%" y="575.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (133,609,449 samples, 0.15%)</title><rect x="71.0676%" y="709" width="0.1493%" height="15" fill="rgb(243,208,16)" fg:x="63610931338" fg:w="133609449"/><text x="71.3176%" y="719.50"></text></g><g><title>core::fmt::builders::DebugInner::entry_with (133,609,449 samples, 0.15%)</title><rect x="71.0676%" y="693" width="0.1493%" height="15" fill="rgb(219,96,24)" fg:x="63610931338" fg:w="133609449"/><text x="71.3176%" y="703.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (133,609,449 samples, 0.15%)</title><rect x="71.0676%" y="677" width="0.1493%" height="15" fill="rgb(219,33,29)" fg:x="63610931338" fg:w="133609449"/><text x="71.3176%" y="687.50"></text></g><g><title>core::fmt::builders::DebugInner::entry_with::{{closure}} (133,609,449 samples, 0.15%)</title><rect x="71.0676%" y="661" width="0.1493%" height="15" fill="rgb(223,176,5)" fg:x="63610931338" fg:w="133609449"/><text x="71.3176%" y="671.50"></text></g><g><title>core::fmt::builders::DebugSet::entry::{{closure}} (133,609,449 samples, 0.15%)</title><rect x="71.0676%" y="645" width="0.1493%" height="15" fill="rgb(228,140,14)" fg:x="63610931338" fg:w="133609449"/><text x="71.3176%" y="655.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (133,609,449 samples, 0.15%)</title><rect x="71.0676%" y="629" width="0.1493%" height="15" fill="rgb(217,179,31)" fg:x="63610931338" fg:w="133609449"/><text x="71.3176%" y="639.50"></text></g><g><title>core::fmt::write (9,363,180 samples, 0.01%)</title><rect x="71.2168%" y="709" width="0.0105%" height="15" fill="rgb(230,9,30)" fg:x="63744540787" fg:w="9363180"/><text x="71.4668%" y="719.50"></text></g><g><title>core::fmt::run (9,363,180 samples, 0.01%)</title><rect x="71.2168%" y="693" width="0.0105%" height="15" fill="rgb(230,136,20)" fg:x="63744540787" fg:w="9363180"/><text x="71.4668%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (23,434,098 samples, 0.03%)</title><rect x="71.3622%" y="629" width="0.0262%" height="15" fill="rgb(215,210,22)" fg:x="63874666999" fg:w="23434098"/><text x="71.6122%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (79,095,606 samples, 0.09%)</title><rect x="71.3259%" y="645" width="0.0884%" height="15" fill="rgb(218,43,5)" fg:x="63842188659" fg:w="79095606"/><text x="71.5759%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (23,183,168 samples, 0.03%)</title><rect x="71.3884%" y="629" width="0.0259%" height="15" fill="rgb(216,11,5)" fg:x="63898101097" fg:w="23183168"/><text x="71.6384%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (153,589,190 samples, 0.17%)</title><rect x="71.4990%" y="629" width="0.1716%" height="15" fill="rgb(209,82,29)" fg:x="63997094671" fg:w="153589190"/><text x="71.7490%" y="639.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (387,983,880 samples, 0.43%)</title><rect x="71.2583%" y="693" width="0.4335%" height="15" fill="rgb(244,115,12)" fg:x="63781684175" fg:w="387983880"/><text x="71.5083%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (387,983,880 samples, 0.43%)</title><rect x="71.2583%" y="677" width="0.4335%" height="15" fill="rgb(222,82,18)" fg:x="63781684175" fg:w="387983880"/><text x="71.5083%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (387,983,880 samples, 0.43%)</title><rect x="71.2583%" y="661" width="0.4335%" height="15" fill="rgb(249,227,8)" fg:x="63781684175" fg:w="387983880"/><text x="71.5083%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (248,383,790 samples, 0.28%)</title><rect x="71.4143%" y="645" width="0.2775%" height="15" fill="rgb(253,141,45)" fg:x="63921284265" fg:w="248383790"/><text x="71.6643%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (18,984,194 samples, 0.02%)</title><rect x="71.6706%" y="629" width="0.0212%" height="15" fill="rgb(234,184,4)" fg:x="64150683861" fg:w="18984194"/><text x="71.9206%" y="639.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (74,585,325 samples, 0.08%)</title><rect x="71.6918%" y="693" width="0.0833%" height="15" fill="rgb(218,194,23)" fg:x="64169668055" fg:w="74585325"/><text x="71.9418%" y="703.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (18,707,777 samples, 0.02%)</title><rect x="71.7542%" y="677" width="0.0209%" height="15" fill="rgb(235,66,41)" fg:x="64225545603" fg:w="18707777"/><text x="72.0042%" y="687.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (18,707,777 samples, 0.02%)</title><rect x="71.7542%" y="661" width="0.0209%" height="15" fill="rgb(245,217,1)" fg:x="64225545603" fg:w="18707777"/><text x="72.0042%" y="671.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (18,707,777 samples, 0.02%)</title><rect x="71.7542%" y="645" width="0.0209%" height="15" fill="rgb(229,91,1)" fg:x="64225545603" fg:w="18707777"/><text x="72.0042%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (32,356,302 samples, 0.04%)</title><rect x="71.7751%" y="613" width="0.0361%" height="15" fill="rgb(207,101,30)" fg:x="64244253380" fg:w="32356302"/><text x="72.0251%" y="623.50"></text></g><g><title>core::hash::sip::u8to64_le (32,356,302 samples, 0.04%)</title><rect x="71.7751%" y="597" width="0.0361%" height="15" fill="rgb(223,82,49)" fg:x="64244253380" fg:w="32356302"/><text x="72.0251%" y="607.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (60,223,371 samples, 0.07%)</title><rect x="71.7751%" y="645" width="0.0673%" height="15" fill="rgb(218,167,17)" fg:x="64244253380" fg:w="60223371"/><text x="72.0251%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (60,223,371 samples, 0.07%)</title><rect x="71.7751%" y="629" width="0.0673%" height="15" fill="rgb(208,103,14)" fg:x="64244253380" fg:w="60223371"/><text x="72.0251%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (27,867,069 samples, 0.03%)</title><rect x="71.8113%" y="613" width="0.0311%" height="15" fill="rgb(238,20,8)" fg:x="64276609682" fg:w="27867069"/><text x="72.0613%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (27,867,069 samples, 0.03%)</title><rect x="71.8113%" y="597" width="0.0311%" height="15" fill="rgb(218,80,54)" fg:x="64276609682" fg:w="27867069"/><text x="72.0613%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (27,867,069 samples, 0.03%)</title><rect x="71.8113%" y="581" width="0.0311%" height="15" fill="rgb(240,144,17)" fg:x="64276609682" fg:w="27867069"/><text x="72.0613%" y="591.50"></text></g><g><title>core::hash::Hasher::write_u32 (27,867,069 samples, 0.03%)</title><rect x="71.8113%" y="565" width="0.0311%" height="15" fill="rgb(245,27,50)" fg:x="64276609682" fg:w="27867069"/><text x="72.0613%" y="575.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (27,867,069 samples, 0.03%)</title><rect x="71.8113%" y="549" width="0.0311%" height="15" fill="rgb(251,51,7)" fg:x="64276609682" fg:w="27867069"/><text x="72.0613%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (27,867,069 samples, 0.03%)</title><rect x="71.8113%" y="533" width="0.0311%" height="15" fill="rgb(245,217,29)" fg:x="64276609682" fg:w="27867069"/><text x="72.0613%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (559,925,991 samples, 0.63%)</title><rect x="71.2273%" y="709" width="0.6256%" height="15" fill="rgb(221,176,29)" fg:x="63753903967" fg:w="559925991"/><text x="71.4773%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (69,576,578 samples, 0.08%)</title><rect x="71.7751%" y="693" width="0.0777%" height="15" fill="rgb(212,180,24)" fg:x="64244253380" fg:w="69576578"/><text x="72.0251%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (69,576,578 samples, 0.08%)</title><rect x="71.7751%" y="677" width="0.0777%" height="15" fill="rgb(254,24,2)" fg:x="64244253380" fg:w="69576578"/><text x="72.0251%" y="687.50"></text></g><g><title>core::hash::Hasher::write_u32 (69,576,578 samples, 0.08%)</title><rect x="71.7751%" y="661" width="0.0777%" height="15" fill="rgb(230,100,2)" fg:x="64244253380" fg:w="69576578"/><text x="72.0251%" y="671.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (9,353,207 samples, 0.01%)</title><rect x="71.8424%" y="645" width="0.0104%" height="15" fill="rgb(219,142,25)" fg:x="64304476751" fg:w="9353207"/><text x="72.0924%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (23,398,900 samples, 0.03%)</title><rect x="71.8528%" y="709" width="0.0261%" height="15" fill="rgb(240,73,43)" fg:x="64313829958" fg:w="23398900"/><text x="72.1028%" y="719.50"></text></g><g><title>rust_ui::style::TAILWIND_COLORS::{{closure}} (18,738,859 samples, 0.02%)</title><rect x="71.8581%" y="693" width="0.0209%" height="15" fill="rgb(214,114,15)" fg:x="64318489999" fg:w="18738859"/><text x="72.1081%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u32,slotmap::sparse_secondary::Slot&lt;rust_ui::render::renderer::NodeContext&lt;cad_frontend::app::App&gt;&gt;)&gt; (9,213,894 samples, 0.01%)</title><rect x="71.8790%" y="709" width="0.0103%" height="15" fill="rgb(207,130,4)" fg:x="64337228858" fg:w="9213894"/><text x="72.1290%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;slotmap::sparse_secondary::Slot&lt;rust_ui::render::renderer::NodeContext&lt;cad_frontend::app::App&gt;&gt;&gt; (9,213,894 samples, 0.01%)</title><rect x="71.8790%" y="693" width="0.0103%" height="15" fill="rgb(221,25,40)" fg:x="64337228858" fg:w="9213894"/><text x="72.1290%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;rust_ui::render::renderer::NodeContext&lt;cad_frontend::app::App&gt;&gt; (9,213,894 samples, 0.01%)</title><rect x="71.8790%" y="677" width="0.0103%" height="15" fill="rgb(241,184,7)" fg:x="64337228858" fg:w="9213894"/><text x="72.1290%" y="687.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (14,015,150 samples, 0.02%)</title><rect x="71.8945%" y="709" width="0.0157%" height="15" fill="rgb(235,159,4)" fg:x="64351072395" fg:w="14015150"/><text x="72.1445%" y="719.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort8_stable (9,312,893 samples, 0.01%)</title><rect x="71.9101%" y="709" width="0.0104%" height="15" fill="rgb(214,87,48)" fg:x="64365087545" fg:w="9312893"/><text x="72.1601%" y="719.50"></text></g><g><title>core::slice::sort::stable::quicksort::quicksort (19,287,682 samples, 0.02%)</title><rect x="71.9205%" y="709" width="0.0215%" height="15" fill="rgb(246,198,24)" fg:x="64374400438" fg:w="19287682"/><text x="72.1705%" y="719.50"></text></g><g><title>core::slice::sort::stable::quicksort::stable_partition (14,623,292 samples, 0.02%)</title><rect x="71.9257%" y="693" width="0.0163%" height="15" fill="rgb(209,66,40)" fg:x="64379064828" fg:w="14623292"/><text x="72.1757%" y="703.50"></text></g><g><title>core::slice::sort::stable::quicksort::PartitionState&lt;T&gt;::partition_one (14,623,292 samples, 0.02%)</title><rect x="71.9257%" y="677" width="0.0163%" height="15" fill="rgb(233,147,39)" fg:x="64379064828" fg:w="14623292"/><text x="72.1757%" y="687.50"></text></g><g><title>core::ptr::copy_nonoverlapping (9,900,789 samples, 0.01%)</title><rect x="71.9310%" y="661" width="0.0111%" height="15" fill="rgb(231,145,52)" fg:x="64383787331" fg:w="9900789"/><text x="72.1810%" y="671.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (9,454,419 samples, 0.01%)</title><rect x="71.9421%" y="709" width="0.0106%" height="15" fill="rgb(206,20,26)" fg:x="64393688120" fg:w="9454419"/><text x="72.1921%" y="719.50"></text></g><g><title>&lt;f32 as compiler_builtins::math::libm_math::support::float_traits::Float&gt;::from_bits (32,552,613 samples, 0.04%)</title><rect x="71.9682%" y="629" width="0.0364%" height="15" fill="rgb(238,220,4)" fg:x="64417100072" fg:w="32552613"/><text x="72.2182%" y="639.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::from_bits (32,552,613 samples, 0.04%)</title><rect x="71.9682%" y="613" width="0.0364%" height="15" fill="rgb(252,195,42)" fg:x="64417100072" fg:w="32552613"/><text x="72.2182%" y="623.50"></text></g><g><title>floorf (55,768,401 samples, 0.06%)</title><rect x="71.9526%" y="709" width="0.0623%" height="15" fill="rgb(209,10,6)" fg:x="64403142539" fg:w="55768401"/><text x="72.2026%" y="719.50"></text></g><g><title>compiler_builtins::math::full_availability::floorf (51,172,395 samples, 0.06%)</title><rect x="71.9578%" y="693" width="0.0572%" height="15" fill="rgb(229,3,52)" fg:x="64407738545" fg:w="51172395"/><text x="72.2078%" y="703.50"></text></g><g><title>compiler_builtins::math::libm_math::floor::floorf (51,172,395 samples, 0.06%)</title><rect x="71.9578%" y="677" width="0.0572%" height="15" fill="rgb(253,49,37)" fg:x="64407738545" fg:w="51172395"/><text x="72.2078%" y="687.50"></text></g><g><title>compiler_builtins::math::libm_math::generic::floor::floor (51,172,395 samples, 0.06%)</title><rect x="71.9578%" y="661" width="0.0572%" height="15" fill="rgb(240,103,49)" fg:x="64407738545" fg:w="51172395"/><text x="72.2078%" y="671.50"></text></g><g><title>compiler_builtins::math::libm_math::generic::floor::floor_status (51,172,395 samples, 0.06%)</title><rect x="71.9578%" y="645" width="0.0572%" height="15" fill="rgb(250,182,30)" fg:x="64407738545" fg:w="51172395"/><text x="72.2078%" y="655.50"></text></g><g><title>&lt;u32 as core::ops::bit::BitAndAssign&gt;::bitand_assign (9,258,255 samples, 0.01%)</title><rect x="72.0046%" y="629" width="0.0103%" height="15" fill="rgb(248,8,30)" fg:x="64449652685" fg:w="9258255"/><text x="72.2546%" y="639.50"></text></g><g><title>[libglfw.so.3.4] (11,253,357 samples, 0.01%)</title><rect x="72.0502%" y="613" width="0.0126%" height="15" fill="rgb(237,120,30)" fg:x="64490474454" fg:w="11253357"/><text x="72.3002%" y="623.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (17,680,972 samples, 0.02%)</title><rect x="72.0661%" y="533" width="0.0198%" height="15" fill="rgb(221,146,34)" fg:x="64504670001" fg:w="17680972"/><text x="72.3161%" y="543.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (17,680,972 samples, 0.02%)</title><rect x="72.0661%" y="517" width="0.0198%" height="15" fill="rgb(242,55,13)" fg:x="64504670001" fg:w="17680972"/><text x="72.3161%" y="527.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (17,680,972 samples, 0.02%)</title><rect x="72.0661%" y="501" width="0.0198%" height="15" fill="rgb(242,112,31)" fg:x="64504670001" fg:w="17680972"/><text x="72.3161%" y="511.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (17,680,972 samples, 0.02%)</title><rect x="72.0661%" y="485" width="0.0198%" height="15" fill="rgb(249,192,27)" fg:x="64504670001" fg:w="17680972"/><text x="72.3161%" y="495.50"></text></g><g><title>pthread_once (17,680,972 samples, 0.02%)</title><rect x="72.0661%" y="469" width="0.0198%" height="15" fill="rgb(208,204,44)" fg:x="64504670001" fg:w="17680972"/><text x="72.3161%" y="479.50"></text></g><g><title>[libc.so.6] (17,680,972 samples, 0.02%)</title><rect x="72.0661%" y="453" width="0.0198%" height="15" fill="rgb(208,93,54)" fg:x="64504670001" fg:w="17680972"/><text x="72.3161%" y="463.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (17,680,972 samples, 0.02%)</title><rect x="72.0661%" y="437" width="0.0198%" height="15" fill="rgb(242,1,31)" fg:x="64504670001" fg:w="17680972"/><text x="72.3161%" y="447.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (17,680,972 samples, 0.02%)</title><rect x="72.0661%" y="421" width="0.0198%" height="15" fill="rgb(241,83,25)" fg:x="64504670001" fg:w="17680972"/><text x="72.3161%" y="431.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (17,680,972 samples, 0.02%)</title><rect x="72.0661%" y="405" width="0.0198%" height="15" fill="rgb(205,169,50)" fg:x="64504670001" fg:w="17680972"/><text x="72.3161%" y="415.50"></text></g><g><title>loadEGLExternalPlatform (14,550,508 samples, 0.02%)</title><rect x="72.0696%" y="389" width="0.0163%" height="15" fill="rgb(239,186,37)" fg:x="64507800465" fg:w="14550508"/><text x="72.3196%" y="399.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (14,550,508 samples, 0.02%)</title><rect x="72.0696%" y="373" width="0.0163%" height="15" fill="rgb(205,221,10)" fg:x="64507800465" fg:w="14550508"/><text x="72.3196%" y="383.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (14,550,508 samples, 0.02%)</title><rect x="72.0696%" y="357" width="0.0163%" height="15" fill="rgb(218,196,15)" fg:x="64507800465" fg:w="14550508"/><text x="72.3196%" y="367.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (14,550,508 samples, 0.02%)</title><rect x="72.0696%" y="341" width="0.0163%" height="15" fill="rgb(218,196,35)" fg:x="64507800465" fg:w="14550508"/><text x="72.3196%" y="351.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (14,550,508 samples, 0.02%)</title><rect x="72.0696%" y="325" width="0.0163%" height="15" fill="rgb(233,63,24)" fg:x="64507800465" fg:w="14550508"/><text x="72.3196%" y="335.50"></text></g><g><title>[libEGL_nvidia.so.580.82.09] (14,550,508 samples, 0.02%)</title><rect x="72.0696%" y="309" width="0.0163%" height="15" fill="rgb(225,8,4)" fg:x="64507800465" fg:w="14550508"/><text x="72.3196%" y="319.50"></text></g><g><title>[ld-linux-x86-64.so.2] (23,491,194 samples, 0.03%)</title><rect x="72.0858%" y="357" width="0.0262%" height="15" fill="rgb(234,105,35)" fg:x="64522350973" fg:w="23491194"/><text x="72.3358%" y="367.50"></text></g><g><title>[ld-linux-x86-64.so.2] (20,458,295 samples, 0.02%)</title><rect x="72.0892%" y="341" width="0.0229%" height="15" fill="rgb(236,21,32)" fg:x="64525383872" fg:w="20458295"/><text x="72.3392%" y="351.50"></text></g><g><title>[ld-linux-x86-64.so.2] (17,406,706 samples, 0.02%)</title><rect x="72.0926%" y="325" width="0.0194%" height="15" fill="rgb(228,109,6)" fg:x="64528435461" fg:w="17406706"/><text x="72.3426%" y="335.50"></text></g><g><title>eglQueryString (45,289,370 samples, 0.05%)</title><rect x="72.0661%" y="613" width="0.0506%" height="15" fill="rgb(229,215,31)" fg:x="64504670001" fg:w="45289370"/><text x="72.3161%" y="623.50"></text></g><g><title>pthread_once (45,289,370 samples, 0.05%)</title><rect x="72.0661%" y="597" width="0.0506%" height="15" fill="rgb(221,52,54)" fg:x="64504670001" fg:w="45289370"/><text x="72.3161%" y="607.50"></text></g><g><title>[libc.so.6] (45,289,370 samples, 0.05%)</title><rect x="72.0661%" y="581" width="0.0506%" height="15" fill="rgb(252,129,43)" fg:x="64504670001" fg:w="45289370"/><text x="72.3161%" y="591.50"></text></g><g><title>[libEGL.so.1.1.0] (45,289,370 samples, 0.05%)</title><rect x="72.0661%" y="565" width="0.0506%" height="15" fill="rgb(248,183,27)" fg:x="64504670001" fg:w="45289370"/><text x="72.3161%" y="575.50"></text></g><g><title>[libEGL.so.1.1.0] (45,289,370 samples, 0.05%)</title><rect x="72.0661%" y="549" width="0.0506%" height="15" fill="rgb(250,0,22)" fg:x="64504670001" fg:w="45289370"/><text x="72.3161%" y="559.50"></text></g><g><title>dlopen (27,608,398 samples, 0.03%)</title><rect x="72.0858%" y="533" width="0.0308%" height="15" fill="rgb(213,166,10)" fg:x="64522350973" fg:w="27608398"/><text x="72.3358%" y="543.50"></text></g><g><title>[libc.so.6] (27,608,398 samples, 0.03%)</title><rect x="72.0858%" y="517" width="0.0308%" height="15" fill="rgb(207,163,36)" fg:x="64522350973" fg:w="27608398"/><text x="72.3358%" y="527.50"></text></g><g><title>[ld-linux-x86-64.so.2] (27,608,398 samples, 0.03%)</title><rect x="72.0858%" y="501" width="0.0308%" height="15" fill="rgb(208,122,22)" fg:x="64522350973" fg:w="27608398"/><text x="72.3358%" y="511.50"></text></g><g><title>_dl_catch_exception (27,608,398 samples, 0.03%)</title><rect x="72.0858%" y="485" width="0.0308%" height="15" fill="rgb(207,104,49)" fg:x="64522350973" fg:w="27608398"/><text x="72.3358%" y="495.50"></text></g><g><title>[libc.so.6] (27,608,398 samples, 0.03%)</title><rect x="72.0858%" y="469" width="0.0308%" height="15" fill="rgb(248,211,50)" fg:x="64522350973" fg:w="27608398"/><text x="72.3358%" y="479.50"></text></g><g><title>[ld-linux-x86-64.so.2] (27,608,398 samples, 0.03%)</title><rect x="72.0858%" y="453" width="0.0308%" height="15" fill="rgb(217,13,45)" fg:x="64522350973" fg:w="27608398"/><text x="72.3358%" y="463.50"></text></g><g><title>_dl_catch_exception (27,608,398 samples, 0.03%)</title><rect x="72.0858%" y="437" width="0.0308%" height="15" fill="rgb(211,216,49)" fg:x="64522350973" fg:w="27608398"/><text x="72.3358%" y="447.50"></text></g><g><title>[ld-linux-x86-64.so.2] (27,608,398 samples, 0.03%)</title><rect x="72.0858%" y="421" width="0.0308%" height="15" fill="rgb(221,58,53)" fg:x="64522350973" fg:w="27608398"/><text x="72.3358%" y="431.50"></text></g><g><title>_dl_catch_exception (27,608,398 samples, 0.03%)</title><rect x="72.0858%" y="405" width="0.0308%" height="15" fill="rgb(220,112,41)" fg:x="64522350973" fg:w="27608398"/><text x="72.3358%" y="415.50"></text></g><g><title>[ld-linux-x86-64.so.2] (27,608,398 samples, 0.03%)</title><rect x="72.0858%" y="389" width="0.0308%" height="15" fill="rgb(236,38,28)" fg:x="64522350973" fg:w="27608398"/><text x="72.3358%" y="399.50"></text></g><g><title>[ld-linux-x86-64.so.2] (27,608,398 samples, 0.03%)</title><rect x="72.0858%" y="373" width="0.0308%" height="15" fill="rgb(227,195,22)" fg:x="64522350973" fg:w="27608398"/><text x="72.3358%" y="383.50"></text></g><g><title>libdecor_decorate (15,071,948 samples, 0.02%)</title><rect x="72.1167%" y="613" width="0.0168%" height="15" fill="rgb(214,55,33)" fg:x="64549959371" fg:w="15071948"/><text x="72.3667%" y="623.50"></text></g><g><title>[libdecor-gtk.so] (15,071,948 samples, 0.02%)</title><rect x="72.1167%" y="597" width="0.0168%" height="15" fill="rgb(248,80,13)" fg:x="64549959371" fg:w="15071948"/><text x="72.3667%" y="607.50"></text></g><g><title>[libdecor-gtk.so] (15,071,948 samples, 0.02%)</title><rect x="72.1167%" y="581" width="0.0168%" height="15" fill="rgb(238,52,6)" fg:x="64549959371" fg:w="15071948"/><text x="72.3667%" y="591.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="453" width="0.0134%" height="15" fill="rgb(224,198,47)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="463.50"></text></g><g><title>gtk_widget_get_preferred_width (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="437" width="0.0134%" height="15" fill="rgb(233,171,20)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="447.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="421" width="0.0134%" height="15" fill="rgb(241,30,25)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="431.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="405" width="0.0134%" height="15" fill="rgb(207,171,38)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="415.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="389" width="0.0134%" height="15" fill="rgb(234,70,1)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="399.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="373" width="0.0134%" height="15" fill="rgb(232,178,18)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="383.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="357" width="0.0134%" height="15" fill="rgb(241,78,40)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="367.50"></text></g><g><title>gtk_widget_get_preferred_width (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="341" width="0.0134%" height="15" fill="rgb(222,35,25)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="351.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="325" width="0.0134%" height="15" fill="rgb(207,92,16)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="335.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="309" width="0.0134%" height="15" fill="rgb(216,59,51)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="319.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="293" width="0.0134%" height="15" fill="rgb(213,80,28)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="303.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="277" width="0.0134%" height="15" fill="rgb(220,93,7)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="287.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="261" width="0.0134%" height="15" fill="rgb(225,24,44)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="271.50"></text></g><g><title>gtk_widget_get_preferred_width (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="245" width="0.0134%" height="15" fill="rgb(243,74,40)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="255.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="229" width="0.0134%" height="15" fill="rgb(228,39,7)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="239.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="213" width="0.0134%" height="15" fill="rgb(227,79,8)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="223.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="197" width="0.0134%" height="15" fill="rgb(236,58,11)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="207.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="181" width="0.0134%" height="15" fill="rgb(249,63,35)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="191.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="165" width="0.0134%" height="15" fill="rgb(252,114,16)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="175.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="149" width="0.0134%" height="15" fill="rgb(254,151,24)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="159.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="133" width="0.0134%" height="15" fill="rgb(253,54,39)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="143.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="117" width="0.0134%" height="15" fill="rgb(243,25,45)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="127.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="101" width="0.0134%" height="15" fill="rgb(234,134,9)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="111.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="85" width="0.0134%" height="15" fill="rgb(227,166,31)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="95.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,036,628 samples, 0.01%)</title><rect x="72.1464%" y="69" width="0.0134%" height="15" fill="rgb(245,143,41)" fg:x="64576574508" fg:w="12036628"/><text x="72.3964%" y="79.50"></text></g><g><title>glfw::Glfw::create_window_intern (136,311,249 samples, 0.15%)</title><rect x="72.0235%" y="709" width="0.1523%" height="15" fill="rgb(238,181,32)" fg:x="64466553261" fg:w="136311249"/><text x="72.2735%" y="719.50"></text></g><g><title>glfw::with_c_str (136,311,249 samples, 0.15%)</title><rect x="72.0235%" y="693" width="0.1523%" height="15" fill="rgb(224,113,18)" fg:x="64466553261" fg:w="136311249"/><text x="72.2735%" y="703.50"></text></g><g><title>glfw::Glfw::create_window_intern::{{closure}} (136,311,249 samples, 0.15%)</title><rect x="72.0235%" y="677" width="0.1523%" height="15" fill="rgb(240,229,28)" fg:x="64466553261" fg:w="136311249"/><text x="72.2735%" y="687.50"></text></g><g><title>glfwCreateWindow (136,311,249 samples, 0.15%)</title><rect x="72.0235%" y="661" width="0.1523%" height="15" fill="rgb(250,185,3)" fg:x="64466553261" fg:w="136311249"/><text x="72.2735%" y="671.50"></text></g><g><title>[libglfw.so.3.4] (136,311,249 samples, 0.15%)</title><rect x="72.0235%" y="645" width="0.1523%" height="15" fill="rgb(212,59,25)" fg:x="64466553261" fg:w="136311249"/><text x="72.2735%" y="655.50"></text></g><g><title>[libglfw.so.3.4] (136,311,249 samples, 0.15%)</title><rect x="72.0235%" y="629" width="0.1523%" height="15" fill="rgb(221,87,20)" fg:x="64466553261" fg:w="136311249"/><text x="72.2735%" y="639.50"></text></g><g><title>libdecor_frame_commit (37,833,191 samples, 0.04%)</title><rect x="72.1335%" y="613" width="0.0423%" height="15" fill="rgb(213,74,28)" fg:x="64565031319" fg:w="37833191"/><text x="72.3835%" y="623.50"></text></g><g><title>[libdecor-gtk.so] (37,833,191 samples, 0.04%)</title><rect x="72.1335%" y="597" width="0.0423%" height="15" fill="rgb(224,132,34)" fg:x="64565031319" fg:w="37833191"/><text x="72.3835%" y="607.50"></text></g><g><title>[libdecor-gtk.so] (37,833,191 samples, 0.04%)</title><rect x="72.1335%" y="581" width="0.0423%" height="15" fill="rgb(222,101,24)" fg:x="64565031319" fg:w="37833191"/><text x="72.3835%" y="591.50"></text></g><g><title>[libdecor-gtk.so] (37,833,191 samples, 0.04%)</title><rect x="72.1335%" y="565" width="0.0423%" height="15" fill="rgb(254,142,4)" fg:x="64565031319" fg:w="37833191"/><text x="72.3835%" y="575.50"></text></g><g><title>gtk_widget_get_preferred_width (26,290,002 samples, 0.03%)</title><rect x="72.1464%" y="549" width="0.0294%" height="15" fill="rgb(230,229,49)" fg:x="64576574508" fg:w="26290002"/><text x="72.3964%" y="559.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (26,290,002 samples, 0.03%)</title><rect x="72.1464%" y="533" width="0.0294%" height="15" fill="rgb(238,70,47)" fg:x="64576574508" fg:w="26290002"/><text x="72.3964%" y="543.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (26,290,002 samples, 0.03%)</title><rect x="72.1464%" y="517" width="0.0294%" height="15" fill="rgb(231,160,17)" fg:x="64576574508" fg:w="26290002"/><text x="72.3964%" y="527.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (26,290,002 samples, 0.03%)</title><rect x="72.1464%" y="501" width="0.0294%" height="15" fill="rgb(218,68,53)" fg:x="64576574508" fg:w="26290002"/><text x="72.3964%" y="511.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (26,290,002 samples, 0.03%)</title><rect x="72.1464%" y="485" width="0.0294%" height="15" fill="rgb(236,111,10)" fg:x="64576574508" fg:w="26290002"/><text x="72.3964%" y="495.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (26,290,002 samples, 0.03%)</title><rect x="72.1464%" y="469" width="0.0294%" height="15" fill="rgb(224,34,41)" fg:x="64576574508" fg:w="26290002"/><text x="72.3964%" y="479.50"></text></g><g><title>gtk_widget_get_preferred_width (14,253,374 samples, 0.02%)</title><rect x="72.1598%" y="453" width="0.0159%" height="15" fill="rgb(241,118,19)" fg:x="64588611136" fg:w="14253374"/><text x="72.4098%" y="463.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (14,253,374 samples, 0.02%)</title><rect x="72.1598%" y="437" width="0.0159%" height="15" fill="rgb(238,129,25)" fg:x="64588611136" fg:w="14253374"/><text x="72.4098%" y="447.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (14,253,374 samples, 0.02%)</title><rect x="72.1598%" y="421" width="0.0159%" height="15" fill="rgb(238,22,31)" fg:x="64588611136" fg:w="14253374"/><text x="72.4098%" y="431.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (14,253,374 samples, 0.02%)</title><rect x="72.1598%" y="405" width="0.0159%" height="15" fill="rgb(222,174,48)" fg:x="64588611136" fg:w="14253374"/><text x="72.4098%" y="415.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (14,253,374 samples, 0.02%)</title><rect x="72.1598%" y="389" width="0.0159%" height="15" fill="rgb(206,152,40)" fg:x="64588611136" fg:w="14253374"/><text x="72.4098%" y="399.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (14,253,374 samples, 0.02%)</title><rect x="72.1598%" y="373" width="0.0159%" height="15" fill="rgb(218,99,54)" fg:x="64588611136" fg:w="14253374"/><text x="72.4098%" y="383.50"></text></g><g><title>gtk_widget_get_preferred_width (14,253,374 samples, 0.02%)</title><rect x="72.1598%" y="357" width="0.0159%" height="15" fill="rgb(220,174,26)" fg:x="64588611136" fg:w="14253374"/><text x="72.4098%" y="367.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (14,253,374 samples, 0.02%)</title><rect x="72.1598%" y="341" width="0.0159%" height="15" fill="rgb(245,116,9)" fg:x="64588611136" fg:w="14253374"/><text x="72.4098%" y="351.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (14,253,374 samples, 0.02%)</title><rect x="72.1598%" y="325" width="0.0159%" height="15" fill="rgb(209,72,35)" fg:x="64588611136" fg:w="14253374"/><text x="72.4098%" y="335.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (14,253,374 samples, 0.02%)</title><rect x="72.1598%" y="309" width="0.0159%" height="15" fill="rgb(226,126,21)" fg:x="64588611136" fg:w="14253374"/><text x="72.4098%" y="319.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (14,253,374 samples, 0.02%)</title><rect x="72.1598%" y="293" width="0.0159%" height="15" fill="rgb(227,192,1)" fg:x="64588611136" fg:w="14253374"/><text x="72.4098%" y="303.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (14,253,374 samples, 0.02%)</title><rect x="72.1598%" y="277" width="0.0159%" height="15" fill="rgb(237,180,29)" fg:x="64588611136" fg:w="14253374"/><text x="72.4098%" y="287.50"></text></g><g><title>pango_context_get_metrics (14,253,374 samples, 0.02%)</title><rect x="72.1598%" y="261" width="0.0159%" height="15" fill="rgb(230,197,35)" fg:x="64588611136" fg:w="14253374"/><text x="72.4098%" y="271.50"></text></g><g><title>[libpangoft2-1.0.so.0.5600.4] (14,253,374 samples, 0.02%)</title><rect x="72.1598%" y="245" width="0.0159%" height="15" fill="rgb(246,193,31)" fg:x="64588611136" fg:w="14253374"/><text x="72.4098%" y="255.50"></text></g><g><title>realloc (145,454,161 samples, 0.16%)</title><rect x="72.1863%" y="709" width="0.1625%" height="15" fill="rgb(241,36,4)" fg:x="64612340230" fg:w="145454161"/><text x="72.4363%" y="719.50"></text></g><g><title>[libc.so.6] (140,896,893 samples, 0.16%)</title><rect x="72.1914%" y="693" width="0.1574%" height="15" fill="rgb(241,130,17)" fg:x="64616897498" fg:w="140896893"/><text x="72.4414%" y="703.50"></text></g><g><title>rust_ui::render::text::TextRenderer::get_or_create_atlas (140,896,893 samples, 0.16%)</title><rect x="72.1914%" y="677" width="0.1574%" height="15" fill="rgb(206,137,32)" fg:x="64616897498" fg:w="140896893"/><text x="72.4414%" y="687.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (9,297,153 samples, 0.01%)</title><rect x="72.3756%" y="245" width="0.0104%" height="15" fill="rgb(237,228,51)" fg:x="64781778366" fg:w="9297153"/><text x="72.6256%" y="255.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (9,297,153 samples, 0.01%)</title><rect x="72.3756%" y="229" width="0.0104%" height="15" fill="rgb(243,6,42)" fg:x="64781778366" fg:w="9297153"/><text x="72.6256%" y="239.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (9,297,153 samples, 0.01%)</title><rect x="72.3756%" y="213" width="0.0104%" height="15" fill="rgb(251,74,28)" fg:x="64781778366" fg:w="9297153"/><text x="72.6256%" y="223.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (9,297,153 samples, 0.01%)</title><rect x="72.3756%" y="197" width="0.0104%" height="15" fill="rgb(218,20,49)" fg:x="64781778366" fg:w="9297153"/><text x="72.6256%" y="207.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (9,297,153 samples, 0.01%)</title><rect x="72.3756%" y="181" width="0.0104%" height="15" fill="rgb(238,28,14)" fg:x="64781778366" fg:w="9297153"/><text x="72.6256%" y="191.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (9,297,153 samples, 0.01%)</title><rect x="72.3756%" y="165" width="0.0104%" height="15" fill="rgb(229,40,46)" fg:x="64781778366" fg:w="9297153"/><text x="72.6256%" y="175.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (9,297,153 samples, 0.01%)</title><rect x="72.3756%" y="149" width="0.0104%" height="15" fill="rgb(244,195,20)" fg:x="64781778366" fg:w="9297153"/><text x="72.6256%" y="159.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (9,297,153 samples, 0.01%)</title><rect x="72.3756%" y="133" width="0.0104%" height="15" fill="rgb(253,56,35)" fg:x="64781778366" fg:w="9297153"/><text x="72.6256%" y="143.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (9,297,153 samples, 0.01%)</title><rect x="72.3756%" y="117" width="0.0104%" height="15" fill="rgb(210,149,44)" fg:x="64781778366" fg:w="9297153"/><text x="72.6256%" y="127.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (14,018,095 samples, 0.02%)</title><rect x="72.3756%" y="261" width="0.0157%" height="15" fill="rgb(240,135,12)" fg:x="64781778366" fg:w="14018095"/><text x="72.6256%" y="271.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (18,724,029 samples, 0.02%)</title><rect x="72.3756%" y="277" width="0.0209%" height="15" fill="rgb(251,24,50)" fg:x="64781778366" fg:w="18724029"/><text x="72.6256%" y="287.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (23,376,198 samples, 0.03%)</title><rect x="72.3756%" y="325" width="0.0261%" height="15" fill="rgb(243,200,47)" fg:x="64781778366" fg:w="23376198"/><text x="72.6256%" y="335.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (23,376,198 samples, 0.03%)</title><rect x="72.3756%" y="309" width="0.0261%" height="15" fill="rgb(224,166,26)" fg:x="64781778366" fg:w="23376198"/><text x="72.6256%" y="319.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (23,376,198 samples, 0.03%)</title><rect x="72.3756%" y="293" width="0.0261%" height="15" fill="rgb(233,0,47)" fg:x="64781778366" fg:w="23376198"/><text x="72.6256%" y="303.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (28,059,088 samples, 0.03%)</title><rect x="72.3756%" y="341" width="0.0313%" height="15" fill="rgb(253,80,5)" fg:x="64781778366" fg:w="28059088"/><text x="72.6256%" y="351.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (36,865,794 samples, 0.04%)</title><rect x="72.3708%" y="357" width="0.0412%" height="15" fill="rgb(214,133,25)" fg:x="64777395685" fg:w="36865794"/><text x="72.6208%" y="367.50"></text></g><g><title>g_object_set (50,346,217 samples, 0.06%)</title><rect x="72.3607%" y="597" width="0.0562%" height="15" fill="rgb(209,27,14)" fg:x="64768431249" fg:w="50346217"/><text x="72.6107%" y="607.50"></text></g><g><title>g_object_set_valist (50,346,217 samples, 0.06%)</title><rect x="72.3607%" y="581" width="0.0562%" height="15" fill="rgb(219,102,51)" fg:x="64768431249" fg:w="50346217"/><text x="72.6107%" y="591.50"></text></g><g><title>[libgobject-2.0.so.0.8400.4] (50,346,217 samples, 0.06%)</title><rect x="72.3607%" y="565" width="0.0562%" height="15" fill="rgb(237,18,16)" fg:x="64768431249" fg:w="50346217"/><text x="72.6107%" y="575.50"></text></g><g><title>[libgobject-2.0.so.0.8400.4] (50,346,217 samples, 0.06%)</title><rect x="72.3607%" y="549" width="0.0562%" height="15" fill="rgb(241,85,17)" fg:x="64768431249" fg:w="50346217"/><text x="72.6107%" y="559.50"></text></g><g><title>g_signal_emit (50,346,217 samples, 0.06%)</title><rect x="72.3607%" y="533" width="0.0562%" height="15" fill="rgb(236,90,42)" fg:x="64768431249" fg:w="50346217"/><text x="72.6107%" y="543.50"></text></g><g><title>g_signal_emit_valist (50,346,217 samples, 0.06%)</title><rect x="72.3607%" y="517" width="0.0562%" height="15" fill="rgb(249,57,21)" fg:x="64768431249" fg:w="50346217"/><text x="72.6107%" y="527.50"></text></g><g><title>[libgobject-2.0.so.0.8400.4] (50,346,217 samples, 0.06%)</title><rect x="72.3607%" y="501" width="0.0562%" height="15" fill="rgb(243,12,36)" fg:x="64768431249" fg:w="50346217"/><text x="72.6107%" y="511.50"></text></g><g><title>[libgobject-2.0.so.0.8400.4] (50,346,217 samples, 0.06%)</title><rect x="72.3607%" y="485" width="0.0562%" height="15" fill="rgb(253,128,47)" fg:x="64768431249" fg:w="50346217"/><text x="72.6107%" y="495.50"></text></g><g><title>g_closure_invoke (50,346,217 samples, 0.06%)</title><rect x="72.3607%" y="469" width="0.0562%" height="15" fill="rgb(207,33,20)" fg:x="64768431249" fg:w="50346217"/><text x="72.6107%" y="479.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (50,346,217 samples, 0.06%)</title><rect x="72.3607%" y="453" width="0.0562%" height="15" fill="rgb(233,215,35)" fg:x="64768431249" fg:w="50346217"/><text x="72.6107%" y="463.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (50,346,217 samples, 0.06%)</title><rect x="72.3607%" y="437" width="0.0562%" height="15" fill="rgb(249,188,52)" fg:x="64768431249" fg:w="50346217"/><text x="72.6107%" y="447.50"></text></g><g><title>gtk_css_provider_load_from_resource (45,977,175 samples, 0.05%)</title><rect x="72.3656%" y="421" width="0.0514%" height="15" fill="rgb(225,12,32)" fg:x="64772800291" fg:w="45977175"/><text x="72.6156%" y="431.50"></text></g><g><title>gtk_css_provider_load_from_file (45,977,175 samples, 0.05%)</title><rect x="72.3656%" y="405" width="0.0514%" height="15" fill="rgb(247,98,14)" fg:x="64772800291" fg:w="45977175"/><text x="72.6156%" y="415.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (45,977,175 samples, 0.05%)</title><rect x="72.3656%" y="389" width="0.0514%" height="15" fill="rgb(247,219,48)" fg:x="64772800291" fg:w="45977175"/><text x="72.6156%" y="399.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (41,381,781 samples, 0.05%)</title><rect x="72.3708%" y="373" width="0.0462%" height="15" fill="rgb(253,60,48)" fg:x="64777395685" fg:w="41381781"/><text x="72.6208%" y="383.50"></text></g><g><title>_IO_fread (32,946,886 samples, 0.04%)</title><rect x="72.4260%" y="453" width="0.0368%" height="15" fill="rgb(245,15,52)" fg:x="64826873481" fg:w="32946886"/><text x="72.6760%" y="463.50"></text></g><g><title>[libgdk-3.so.0.2418.32] (48,810,829 samples, 0.05%)</title><rect x="72.4170%" y="549" width="0.0545%" height="15" fill="rgb(220,133,28)" fg:x="64818777466" fg:w="48810829"/><text x="72.6670%" y="559.50"></text></g><g><title>gdk_wayland_display_set_cursor_theme (44,675,921 samples, 0.05%)</title><rect x="72.4216%" y="533" width="0.0499%" height="15" fill="rgb(217,180,4)" fg:x="64822912374" fg:w="44675921"/><text x="72.6716%" y="543.50"></text></g><g><title>wl_cursor_theme_load (44,675,921 samples, 0.05%)</title><rect x="72.4216%" y="517" width="0.0499%" height="15" fill="rgb(251,24,1)" fg:x="64822912374" fg:w="44675921"/><text x="72.6716%" y="527.50"></text></g><g><title>[libwayland-cursor.so.0.24.0] (44,675,921 samples, 0.05%)</title><rect x="72.4216%" y="501" width="0.0499%" height="15" fill="rgb(212,185,49)" fg:x="64822912374" fg:w="44675921"/><text x="72.6716%" y="511.50"></text></g><g><title>[libwayland-cursor.so.0.24.0] (44,675,921 samples, 0.05%)</title><rect x="72.4216%" y="485" width="0.0499%" height="15" fill="rgb(215,175,22)" fg:x="64822912374" fg:w="44675921"/><text x="72.6716%" y="495.50"></text></g><g><title>[libwayland-cursor.so.0.24.0] (44,675,921 samples, 0.05%)</title><rect x="72.4216%" y="469" width="0.0499%" height="15" fill="rgb(250,205,14)" fg:x="64822912374" fg:w="44675921"/><text x="72.6716%" y="479.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,885,961 samples, 0.01%)</title><rect x="72.4940%" y="181" width="0.0144%" height="15" fill="rgb(225,211,22)" fg:x="64887716488" fg:w="12885961"/><text x="72.7440%" y="191.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,885,961 samples, 0.01%)</title><rect x="72.4940%" y="165" width="0.0144%" height="15" fill="rgb(251,179,42)" fg:x="64887716488" fg:w="12885961"/><text x="72.7440%" y="175.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,885,961 samples, 0.01%)</title><rect x="72.4940%" y="149" width="0.0144%" height="15" fill="rgb(208,216,51)" fg:x="64887716488" fg:w="12885961"/><text x="72.7440%" y="159.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,885,961 samples, 0.01%)</title><rect x="72.4940%" y="133" width="0.0144%" height="15" fill="rgb(235,36,11)" fg:x="64887716488" fg:w="12885961"/><text x="72.7440%" y="143.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,885,961 samples, 0.01%)</title><rect x="72.4940%" y="117" width="0.0144%" height="15" fill="rgb(213,189,28)" fg:x="64887716488" fg:w="12885961"/><text x="72.7440%" y="127.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,885,961 samples, 0.01%)</title><rect x="72.4940%" y="101" width="0.0144%" height="15" fill="rgb(227,203,42)" fg:x="64887716488" fg:w="12885961"/><text x="72.7440%" y="111.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,885,961 samples, 0.01%)</title><rect x="72.4940%" y="85" width="0.0144%" height="15" fill="rgb(244,72,36)" fg:x="64887716488" fg:w="12885961"/><text x="72.7440%" y="95.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,885,961 samples, 0.01%)</title><rect x="72.4940%" y="69" width="0.0144%" height="15" fill="rgb(213,53,17)" fg:x="64887716488" fg:w="12885961"/><text x="72.7440%" y="79.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,885,961 samples, 0.01%)</title><rect x="72.4940%" y="53" width="0.0144%" height="15" fill="rgb(207,167,3)" fg:x="64887716488" fg:w="12885961"/><text x="72.7440%" y="63.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (12,885,961 samples, 0.01%)</title><rect x="72.4940%" y="37" width="0.0144%" height="15" fill="rgb(216,98,30)" fg:x="64887716488" fg:w="12885961"/><text x="72.7440%" y="47.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (17,204,388 samples, 0.02%)</title><rect x="72.4940%" y="213" width="0.0192%" height="15" fill="rgb(236,123,15)" fg:x="64887716488" fg:w="17204388"/><text x="72.7440%" y="223.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (17,204,388 samples, 0.02%)</title><rect x="72.4940%" y="197" width="0.0192%" height="15" fill="rgb(248,81,50)" fg:x="64887716488" fg:w="17204388"/><text x="72.7440%" y="207.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (21,393,962 samples, 0.02%)</title><rect x="72.4940%" y="261" width="0.0239%" height="15" fill="rgb(214,120,4)" fg:x="64887716488" fg:w="21393962"/><text x="72.7440%" y="271.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (21,393,962 samples, 0.02%)</title><rect x="72.4940%" y="245" width="0.0239%" height="15" fill="rgb(208,179,34)" fg:x="64887716488" fg:w="21393962"/><text x="72.7440%" y="255.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (21,393,962 samples, 0.02%)</title><rect x="72.4940%" y="229" width="0.0239%" height="15" fill="rgb(227,140,7)" fg:x="64887716488" fg:w="21393962"/><text x="72.7440%" y="239.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (29,782,996 samples, 0.03%)</title><rect x="72.4894%" y="293" width="0.0333%" height="15" fill="rgb(214,22,6)" fg:x="64883605280" fg:w="29782996"/><text x="72.7394%" y="303.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (25,671,788 samples, 0.03%)</title><rect x="72.4940%" y="277" width="0.0287%" height="15" fill="rgb(207,137,27)" fg:x="64887716488" fg:w="25671788"/><text x="72.7440%" y="287.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (33,822,668 samples, 0.04%)</title><rect x="72.4894%" y="309" width="0.0378%" height="15" fill="rgb(210,8,46)" fg:x="64883605280" fg:w="33822668"/><text x="72.7394%" y="319.50"></text></g><g><title>gtk_init_check (102,739,066 samples, 0.11%)</title><rect x="72.4170%" y="597" width="0.1148%" height="15" fill="rgb(240,16,54)" fg:x="64818777466" fg:w="102739066"/><text x="72.6670%" y="607.50"></text></g><g><title>gdk_display_manager_open_display (102,739,066 samples, 0.11%)</title><rect x="72.4170%" y="581" width="0.1148%" height="15" fill="rgb(211,209,29)" fg:x="64818777466" fg:w="102739066"/><text x="72.6670%" y="591.50"></text></g><g><title>[libgdk-3.so.0.2418.32] (102,739,066 samples, 0.11%)</title><rect x="72.4170%" y="565" width="0.1148%" height="15" fill="rgb(226,228,24)" fg:x="64818777466" fg:w="102739066"/><text x="72.6670%" y="575.50"></text></g><g><title>g_signal_emit_by_name (50,174,260 samples, 0.06%)</title><rect x="72.4757%" y="549" width="0.0561%" height="15" fill="rgb(222,84,9)" fg:x="64871342272" fg:w="50174260"/><text x="72.7257%" y="559.50"></text></g><g><title>[libgobject-2.0.so.0.8400.4] (50,174,260 samples, 0.06%)</title><rect x="72.4757%" y="533" width="0.0561%" height="15" fill="rgb(234,203,30)" fg:x="64871342272" fg:w="50174260"/><text x="72.7257%" y="543.50"></text></g><g><title>g_signal_emit (46,064,151 samples, 0.05%)</title><rect x="72.4803%" y="517" width="0.0515%" height="15" fill="rgb(238,109,14)" fg:x="64875452381" fg:w="46064151"/><text x="72.7303%" y="527.50"></text></g><g><title>g_signal_emit_valist (46,064,151 samples, 0.05%)</title><rect x="72.4803%" y="501" width="0.0515%" height="15" fill="rgb(233,206,34)" fg:x="64875452381" fg:w="46064151"/><text x="72.7303%" y="511.50"></text></g><g><title>[libgobject-2.0.so.0.8400.4] (46,064,151 samples, 0.05%)</title><rect x="72.4803%" y="485" width="0.0515%" height="15" fill="rgb(220,167,47)" fg:x="64875452381" fg:w="46064151"/><text x="72.7303%" y="495.50"></text></g><g><title>g_cclosure_marshal_VOID__OBJECTv (46,064,151 samples, 0.05%)</title><rect x="72.4803%" y="469" width="0.0515%" height="15" fill="rgb(238,105,10)" fg:x="64875452381" fg:w="46064151"/><text x="72.7303%" y="479.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (46,064,151 samples, 0.05%)</title><rect x="72.4803%" y="453" width="0.0515%" height="15" fill="rgb(213,227,17)" fg:x="64875452381" fg:w="46064151"/><text x="72.7303%" y="463.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (46,064,151 samples, 0.05%)</title><rect x="72.4803%" y="437" width="0.0515%" height="15" fill="rgb(217,132,38)" fg:x="64875452381" fg:w="46064151"/><text x="72.7303%" y="447.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (46,064,151 samples, 0.05%)</title><rect x="72.4803%" y="421" width="0.0515%" height="15" fill="rgb(242,146,4)" fg:x="64875452381" fg:w="46064151"/><text x="72.7303%" y="431.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (46,064,151 samples, 0.05%)</title><rect x="72.4803%" y="405" width="0.0515%" height="15" fill="rgb(212,61,9)" fg:x="64875452381" fg:w="46064151"/><text x="72.7303%" y="415.50"></text></g><g><title>gtk_css_provider_load_from_resource (46,064,151 samples, 0.05%)</title><rect x="72.4803%" y="389" width="0.0515%" height="15" fill="rgb(247,126,22)" fg:x="64875452381" fg:w="46064151"/><text x="72.7303%" y="399.50"></text></g><g><title>gtk_css_provider_load_from_file (42,043,006 samples, 0.05%)</title><rect x="72.4848%" y="373" width="0.0470%" height="15" fill="rgb(220,196,2)" fg:x="64879473526" fg:w="42043006"/><text x="72.7348%" y="383.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (42,043,006 samples, 0.05%)</title><rect x="72.4848%" y="357" width="0.0470%" height="15" fill="rgb(208,46,4)" fg:x="64879473526" fg:w="42043006"/><text x="72.7348%" y="367.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (37,911,252 samples, 0.04%)</title><rect x="72.4894%" y="341" width="0.0424%" height="15" fill="rgb(252,104,46)" fg:x="64883605280" fg:w="37911252"/><text x="72.7394%" y="351.50"></text></g><g><title>[libgtk-3.so.0.2418.32] (37,911,252 samples, 0.04%)</title><rect x="72.4894%" y="325" width="0.0424%" height="15" fill="rgb(237,152,48)" fg:x="64883605280" fg:w="37911252"/><text x="72.7394%" y="335.50"></text></g><g><title>[libdecor-gtk.so] (163,874,173 samples, 0.18%)</title><rect x="72.3607%" y="613" width="0.1831%" height="15" fill="rgb(221,59,37)" fg:x="64768431249" fg:w="163874173"/><text x="72.6107%" y="623.50"></text></g><g><title>wl_display_roundtrip_queue (10,788,890 samples, 0.01%)</title><rect x="72.5318%" y="597" width="0.0121%" height="15" fill="rgb(209,202,51)" fg:x="64921516532" fg:w="10788890"/><text x="72.7818%" y="607.50"></text></g><g><title>wl_display_dispatch_queue (10,788,890 samples, 0.01%)</title><rect x="72.5318%" y="581" width="0.0121%" height="15" fill="rgb(228,81,30)" fg:x="64921516532" fg:w="10788890"/><text x="72.7818%" y="591.50"></text></g><g><title>wl_display_dispatch_queue_timeout (10,788,890 samples, 0.01%)</title><rect x="72.5318%" y="565" width="0.0121%" height="15" fill="rgb(227,42,39)" fg:x="64921516532" fg:w="10788890"/><text x="72.7818%" y="575.50"></text></g><g><title>wl_display_dispatch_queue_pending (10,788,890 samples, 0.01%)</title><rect x="72.5318%" y="549" width="0.0121%" height="15" fill="rgb(221,26,2)" fg:x="64921516532" fg:w="10788890"/><text x="72.7818%" y="559.50"></text></g><g><title>[libwayland-client.so.0.24.0] (10,788,890 samples, 0.01%)</title><rect x="72.5318%" y="533" width="0.0121%" height="15" fill="rgb(254,61,31)" fg:x="64921516532" fg:w="10788890"/><text x="72.7818%" y="543.50"></text></g><g><title>[libwayland-client.so.0.24.0] (10,788,890 samples, 0.01%)</title><rect x="72.5318%" y="517" width="0.0121%" height="15" fill="rgb(222,173,38)" fg:x="64921516532" fg:w="10788890"/><text x="72.7818%" y="527.50"></text></g><g><title>ffi_call (10,788,890 samples, 0.01%)</title><rect x="72.5318%" y="501" width="0.0121%" height="15" fill="rgb(218,50,12)" fg:x="64921516532" fg:w="10788890"/><text x="72.7818%" y="511.50"></text></g><g><title>[libffi.so.8.2.0] (10,788,890 samples, 0.01%)</title><rect x="72.5318%" y="485" width="0.0121%" height="15" fill="rgb(223,88,40)" fg:x="64921516532" fg:w="10788890"/><text x="72.7818%" y="495.50"></text></g><g><title>[libffi.so.8.2.0] (10,788,890 samples, 0.01%)</title><rect x="72.5318%" y="469" width="0.0121%" height="15" fill="rgb(237,54,19)" fg:x="64921516532" fg:w="10788890"/><text x="72.7818%" y="479.50"></text></g><g><title>[libglfw.so.3.4] (10,788,890 samples, 0.01%)</title><rect x="72.5318%" y="453" width="0.0121%" height="15" fill="rgb(251,129,25)" fg:x="64921516532" fg:w="10788890"/><text x="72.7818%" y="463.50"></text></g><g><title>[ld-linux-x86-64.so.2] (33,458,550 samples, 0.04%)</title><rect x="72.5438%" y="437" width="0.0374%" height="15" fill="rgb(238,97,19)" fg:x="64932305422" fg:w="33458550"/><text x="72.7938%" y="447.50"></text></g><g><title>[ld-linux-x86-64.so.2] (33,458,550 samples, 0.04%)</title><rect x="72.5438%" y="421" width="0.0374%" height="15" fill="rgb(240,169,18)" fg:x="64932305422" fg:w="33458550"/><text x="72.7938%" y="431.50"></text></g><g><title>[ld-linux-x86-64.so.2] (33,458,550 samples, 0.04%)</title><rect x="72.5438%" y="405" width="0.0374%" height="15" fill="rgb(230,187,49)" fg:x="64932305422" fg:w="33458550"/><text x="72.7938%" y="415.50"></text></g><g><title>libdecor_new (198,699,717 samples, 0.22%)</title><rect x="72.3607%" y="629" width="0.2220%" height="15" fill="rgb(209,44,26)" fg:x="64768431249" fg:w="198699717"/><text x="72.6107%" y="639.50"></text></g><g><title>dlopen (34,825,544 samples, 0.04%)</title><rect x="72.5438%" y="613" width="0.0389%" height="15" fill="rgb(244,0,6)" fg:x="64932305422" fg:w="34825544"/><text x="72.7938%" y="623.50"></text></g><g><title>[libc.so.6] (34,825,544 samples, 0.04%)</title><rect x="72.5438%" y="597" width="0.0389%" height="15" fill="rgb(248,18,21)" fg:x="64932305422" fg:w="34825544"/><text x="72.7938%" y="607.50"></text></g><g><title>[ld-linux-x86-64.so.2] (34,825,544 samples, 0.04%)</title><rect x="72.5438%" y="581" width="0.0389%" height="15" fill="rgb(245,180,19)" fg:x="64932305422" fg:w="34825544"/><text x="72.7938%" y="591.50"></text></g><g><title>_dl_catch_exception (34,825,544 samples, 0.04%)</title><rect x="72.5438%" y="565" width="0.0389%" height="15" fill="rgb(252,118,36)" fg:x="64932305422" fg:w="34825544"/><text x="72.7938%" y="575.50"></text></g><g><title>[libc.so.6] (34,825,544 samples, 0.04%)</title><rect x="72.5438%" y="549" width="0.0389%" height="15" fill="rgb(210,224,19)" fg:x="64932305422" fg:w="34825544"/><text x="72.7938%" y="559.50"></text></g><g><title>[ld-linux-x86-64.so.2] (34,825,544 samples, 0.04%)</title><rect x="72.5438%" y="533" width="0.0389%" height="15" fill="rgb(218,30,24)" fg:x="64932305422" fg:w="34825544"/><text x="72.7938%" y="543.50"></text></g><g><title>_dl_catch_exception (34,825,544 samples, 0.04%)</title><rect x="72.5438%" y="517" width="0.0389%" height="15" fill="rgb(219,75,50)" fg:x="64932305422" fg:w="34825544"/><text x="72.7938%" y="527.50"></text></g><g><title>[ld-linux-x86-64.so.2] (34,825,544 samples, 0.04%)</title><rect x="72.5438%" y="501" width="0.0389%" height="15" fill="rgb(234,72,50)" fg:x="64932305422" fg:w="34825544"/><text x="72.7938%" y="511.50"></text></g><g><title>_dl_catch_exception (34,825,544 samples, 0.04%)</title><rect x="72.5438%" y="485" width="0.0389%" height="15" fill="rgb(219,100,48)" fg:x="64932305422" fg:w="34825544"/><text x="72.7938%" y="495.50"></text></g><g><title>[ld-linux-x86-64.so.2] (34,825,544 samples, 0.04%)</title><rect x="72.5438%" y="469" width="0.0389%" height="15" fill="rgb(253,5,41)" fg:x="64932305422" fg:w="34825544"/><text x="72.7938%" y="479.50"></text></g><g><title>[ld-linux-x86-64.so.2] (34,825,544 samples, 0.04%)</title><rect x="72.5438%" y="453" width="0.0389%" height="15" fill="rgb(247,181,11)" fg:x="64932305422" fg:w="34825544"/><text x="72.7938%" y="463.50"></text></g><g><title>wl_cursor_theme_load (201,284,385 samples, 0.22%)</title><rect x="72.5827%" y="629" width="0.2249%" height="15" fill="rgb(222,223,25)" fg:x="64967130966" fg:w="201284385"/><text x="72.8327%" y="639.50"></text></g><g><title>[libwayland-cursor.so.0.24.0] (201,284,385 samples, 0.22%)</title><rect x="72.5827%" y="613" width="0.2249%" height="15" fill="rgb(214,198,28)" fg:x="64967130966" fg:w="201284385"/><text x="72.8327%" y="623.50"></text></g><g><title>[libwayland-cursor.so.0.24.0] (201,284,385 samples, 0.22%)</title><rect x="72.5827%" y="597" width="0.2249%" height="15" fill="rgb(230,46,43)" fg:x="64967130966" fg:w="201284385"/><text x="72.8327%" y="607.50"></text></g><g><title>[libwayland-cursor.so.0.24.0] (201,284,385 samples, 0.22%)</title><rect x="72.5827%" y="581" width="0.2249%" height="15" fill="rgb(233,65,53)" fg:x="64967130966" fg:w="201284385"/><text x="72.8327%" y="591.50"></text></g><g><title>_IO_fread (179,924,477 samples, 0.20%)</title><rect x="72.6066%" y="565" width="0.2010%" height="15" fill="rgb(221,121,27)" fg:x="64988490874" fg:w="179924477"/><text x="72.8566%" y="575.50"></text></g><g><title>[libc.so.6] (21,606,272 samples, 0.02%)</title><rect x="72.7835%" y="549" width="0.0241%" height="15" fill="rgb(247,70,47)" fg:x="65146809079" fg:w="21606272"/><text x="73.0335%" y="559.50"></text></g><g><title>[libc.so.6] (13,263,123 samples, 0.01%)</title><rect x="72.7928%" y="533" width="0.0148%" height="15" fill="rgb(228,85,35)" fg:x="65155152228" fg:w="13263123"/><text x="73.0428%" y="543.50"></text></g><g><title>rust_ui::init_open_gl (410,179,707 samples, 0.46%)</title><rect x="72.3506%" y="709" width="0.4583%" height="15" fill="rgb(209,50,18)" fg:x="64759353642" fg:w="410179707"/><text x="72.6006%" y="719.50"></text></g><g><title>glfw::init (410,179,707 samples, 0.46%)</title><rect x="72.3506%" y="693" width="0.4583%" height="15" fill="rgb(250,19,35)" fg:x="64759353642" fg:w="410179707"/><text x="72.6006%" y="703.50"></text></g><g><title>glfw::init_no_callbacks (410,179,707 samples, 0.46%)</title><rect x="72.3506%" y="677" width="0.4583%" height="15" fill="rgb(253,107,29)" fg:x="64759353642" fg:w="410179707"/><text x="72.6006%" y="687.50"></text></g><g><title>glfwInit (410,179,707 samples, 0.46%)</title><rect x="72.3506%" y="661" width="0.4583%" height="15" fill="rgb(252,179,29)" fg:x="64759353642" fg:w="410179707"/><text x="72.6006%" y="671.50"></text></g><g><title>[libglfw.so.3.4] (410,179,707 samples, 0.46%)</title><rect x="72.3506%" y="645" width="0.4583%" height="15" fill="rgb(238,194,6)" fg:x="64759353642" fg:w="410179707"/><text x="72.6006%" y="655.50"></text></g><g><title>gl::BufferData (20,076,387 samples, 0.02%)</title><rect x="72.8140%" y="693" width="0.0224%" height="15" fill="rgb(238,164,29)" fg:x="65174142876" fg:w="20076387"/><text x="73.0640%" y="703.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (20,076,387 samples, 0.02%)</title><rect x="72.8140%" y="677" width="0.0224%" height="15" fill="rgb(224,25,9)" fg:x="65174142876" fg:w="20076387"/><text x="73.0640%" y="687.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (20,076,387 samples, 0.02%)</title><rect x="72.8140%" y="661" width="0.0224%" height="15" fill="rgb(244,153,23)" fg:x="65174142876" fg:w="20076387"/><text x="73.0640%" y="671.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (20,076,387 samples, 0.02%)</title><rect x="72.8140%" y="645" width="0.0224%" height="15" fill="rgb(212,203,14)" fg:x="65174142876" fg:w="20076387"/><text x="73.0640%" y="655.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (20,076,387 samples, 0.02%)</title><rect x="72.8140%" y="629" width="0.0224%" height="15" fill="rgb(220,164,20)" fg:x="65174142876" fg:w="20076387"/><text x="73.0640%" y="639.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (20,076,387 samples, 0.02%)</title><rect x="72.8140%" y="613" width="0.0224%" height="15" fill="rgb(222,203,48)" fg:x="65174142876" fg:w="20076387"/><text x="73.0640%" y="623.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (15,483,989 samples, 0.02%)</title><rect x="72.8191%" y="597" width="0.0173%" height="15" fill="rgb(215,159,22)" fg:x="65178735274" fg:w="15483989"/><text x="73.0691%" y="607.50"></text></g><g><title>gl::DrawArrays (15,253,797 samples, 0.02%)</title><rect x="72.8364%" y="693" width="0.0170%" height="15" fill="rgb(216,183,47)" fg:x="65194219263" fg:w="15253797"/><text x="73.0864%" y="703.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (15,253,797 samples, 0.02%)</title><rect x="72.8364%" y="677" width="0.0170%" height="15" fill="rgb(229,195,25)" fg:x="65194219263" fg:w="15253797"/><text x="73.0864%" y="687.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (15,253,797 samples, 0.02%)</title><rect x="72.8364%" y="661" width="0.0170%" height="15" fill="rgb(224,132,51)" fg:x="65194219263" fg:w="15253797"/><text x="73.0864%" y="671.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (15,253,797 samples, 0.02%)</title><rect x="72.8364%" y="645" width="0.0170%" height="15" fill="rgb(240,63,7)" fg:x="65194219263" fg:w="15253797"/><text x="73.0864%" y="655.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (15,253,797 samples, 0.02%)</title><rect x="72.8364%" y="629" width="0.0170%" height="15" fill="rgb(249,182,41)" fg:x="65194219263" fg:w="15253797"/><text x="73.0864%" y="639.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,471,281 samples, 0.01%)</title><rect x="72.8429%" y="613" width="0.0106%" height="15" fill="rgb(243,47,26)" fg:x="65200001779" fg:w="9471281"/><text x="73.0929%" y="623.50"></text></g><g><title>rust_ui::render::circle::CircleRenderer::draw_3d_oriented (49,283,590 samples, 0.06%)</title><rect x="72.8089%" y="709" width="0.0551%" height="15" fill="rgb(233,48,2)" fg:x="65169533349" fg:w="49283590"/><text x="73.0589%" y="719.50"></text></g><g><title>gl::BindVertexArray (11,268,021 samples, 0.01%)</title><rect x="72.8691%" y="693" width="0.0126%" height="15" fill="rgb(244,165,34)" fg:x="65223448361" fg:w="11268021"/><text x="73.1191%" y="703.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (11,268,021 samples, 0.01%)</title><rect x="72.8691%" y="677" width="0.0126%" height="15" fill="rgb(207,89,7)" fg:x="65223448361" fg:w="11268021"/><text x="73.1191%" y="687.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,439,887 samples, 0.01%)</title><rect x="72.8711%" y="661" width="0.0105%" height="15" fill="rgb(244,117,36)" fg:x="65225276495" fg:w="9439887"/><text x="73.1211%" y="671.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (9,439,887 samples, 0.01%)</title><rect x="72.8711%" y="645" width="0.0105%" height="15" fill="rgb(226,144,34)" fg:x="65225276495" fg:w="9439887"/><text x="73.1211%" y="655.50"></text></g><g><title>gl::DrawArrays (30,566,991 samples, 0.03%)</title><rect x="72.8817%" y="693" width="0.0342%" height="15" fill="rgb(213,23,19)" fg:x="65234716382" fg:w="30566991"/><text x="73.1317%" y="703.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (30,566,991 samples, 0.03%)</title><rect x="72.8817%" y="677" width="0.0342%" height="15" fill="rgb(217,75,12)" fg:x="65234716382" fg:w="30566991"/><text x="73.1317%" y="687.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (30,566,991 samples, 0.03%)</title><rect x="72.8817%" y="661" width="0.0342%" height="15" fill="rgb(224,159,17)" fg:x="65234716382" fg:w="30566991"/><text x="73.1317%" y="671.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (22,747,890 samples, 0.03%)</title><rect x="72.8904%" y="645" width="0.0254%" height="15" fill="rgb(217,118,1)" fg:x="65242535483" fg:w="22747890"/><text x="73.1404%" y="655.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (10,073,966 samples, 0.01%)</title><rect x="72.9262%" y="645" width="0.0113%" height="15" fill="rgb(232,180,48)" fg:x="65274581917" fg:w="10073966"/><text x="73.1762%" y="655.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (10,073,966 samples, 0.01%)</title><rect x="72.9262%" y="629" width="0.0113%" height="15" fill="rgb(230,27,33)" fg:x="65274581917" fg:w="10073966"/><text x="73.1762%" y="639.50"></text></g><g><title>rust_ui::shader::Shader::set_uniform (24,021,489 samples, 0.03%)</title><rect x="72.9158%" y="693" width="0.0268%" height="15" fill="rgb(205,31,21)" fg:x="65265283373" fg:w="24021489"/><text x="73.1658%" y="703.50"></text></g><g><title>rust_ui::shader::Shader::find (19,421,498 samples, 0.02%)</title><rect x="72.9210%" y="677" width="0.0217%" height="15" fill="rgb(253,59,4)" fg:x="65269883364" fg:w="19421498"/><text x="73.1710%" y="687.50"></text></g><g><title>gl::GetUniformLocation (19,421,498 samples, 0.02%)</title><rect x="72.9210%" y="661" width="0.0217%" height="15" fill="rgb(224,201,9)" fg:x="65269883364" fg:w="19421498"/><text x="73.1710%" y="671.50"></text></g><g><title>rust_ui::render::rect::RectRenderer::draw (81,154,261 samples, 0.09%)</title><rect x="72.8639%" y="709" width="0.0907%" height="15" fill="rgb(229,206,30)" fg:x="65218816939" fg:w="81154261"/><text x="73.1139%" y="719.50"></text></g><g><title>rust_ui::shader::Shader::use_shader (10,666,338 samples, 0.01%)</title><rect x="72.9427%" y="693" width="0.0119%" height="15" fill="rgb(212,67,47)" fg:x="65289304862" fg:w="10666338"/><text x="73.1927%" y="703.50"></text></g><g><title>gl::UseProgram (10,666,338 samples, 0.01%)</title><rect x="72.9427%" y="677" width="0.0119%" height="15" fill="rgb(211,96,50)" fg:x="65289304862" fg:w="10666338"/><text x="73.1927%" y="687.50"></text></g><g><title>[libnvidia-eglcore.so.580.82.09] (10,666,338 samples, 0.01%)</title><rect x="72.9427%" y="661" width="0.0119%" height="15" fill="rgb(252,114,18)" fg:x="65289304862" fg:w="10666338"/><text x="73.1927%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (152,858,649 samples, 0.17%)</title><rect x="72.9646%" y="629" width="0.1708%" height="15" fill="rgb(223,58,37)" fg:x="65308917882" fg:w="152858649"/><text x="73.2146%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (152,858,649 samples, 0.17%)</title><rect x="72.9646%" y="613" width="0.1708%" height="15" fill="rgb(237,70,4)" fg:x="65308917882" fg:w="152858649"/><text x="73.2146%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (152,858,649 samples, 0.17%)</title><rect x="72.9646%" y="597" width="0.1708%" height="15" fill="rgb(244,85,46)" fg:x="65308917882" fg:w="152858649"/><text x="73.2146%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (152,858,649 samples, 0.17%)</title><rect x="72.9646%" y="581" width="0.1708%" height="15" fill="rgb(223,39,52)" fg:x="65308917882" fg:w="152858649"/><text x="73.2146%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (152,858,649 samples, 0.17%)</title><rect x="72.9646%" y="565" width="0.1708%" height="15" fill="rgb(218,200,14)" fg:x="65308917882" fg:w="152858649"/><text x="73.2146%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (152,858,649 samples, 0.17%)</title><rect x="72.9646%" y="549" width="0.1708%" height="15" fill="rgb(208,171,16)" fg:x="65308917882" fg:w="152858649"/><text x="73.2146%" y="559.50"></text></g><g><title>alloc::alloc::alloc (152,858,649 samples, 0.17%)</title><rect x="72.9646%" y="533" width="0.1708%" height="15" fill="rgb(234,200,18)" fg:x="65308917882" fg:w="152858649"/><text x="73.2146%" y="543.50"></text></g><g><title>__rustc::__rdl_alloc (152,858,649 samples, 0.17%)</title><rect x="72.9646%" y="517" width="0.1708%" height="15" fill="rgb(228,45,11)" fg:x="65308917882" fg:w="152858649"/><text x="73.2146%" y="527.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (152,858,649 samples, 0.17%)</title><rect x="72.9646%" y="501" width="0.1708%" height="15" fill="rgb(237,182,11)" fg:x="65308917882" fg:w="152858649"/><text x="73.2146%" y="511.50"></text></g><g><title>[libc.so.6] (152,858,649 samples, 0.17%)</title><rect x="72.9646%" y="485" width="0.1708%" height="15" fill="rgb(241,175,49)" fg:x="65308917882" fg:w="152858649"/><text x="73.2146%" y="495.50"></text></g><g><title>[libc.so.6] (148,225,326 samples, 0.17%)</title><rect x="72.9698%" y="469" width="0.1656%" height="15" fill="rgb(247,38,35)" fg:x="65313551205" fg:w="148225326"/><text x="73.2198%" y="479.50"></text></g><g><title>[libc.so.6] (125,063,965 samples, 0.14%)</title><rect x="72.9956%" y="453" width="0.1397%" height="15" fill="rgb(228,39,49)" fg:x="65336712566" fg:w="125063965"/><text x="73.2456%" y="463.50"></text></g><g><title>[libc.so.6] (18,369,726 samples, 0.02%)</title><rect x="73.1148%" y="437" width="0.0205%" height="15" fill="rgb(226,101,26)" fg:x="65443406805" fg:w="18369726"/><text x="73.3648%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (166,797,327 samples, 0.19%)</title><rect x="72.9646%" y="693" width="0.1863%" height="15" fill="rgb(206,141,19)" fg:x="65308917882" fg:w="166797327"/><text x="73.2146%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (166,797,327 samples, 0.19%)</title><rect x="72.9646%" y="677" width="0.1863%" height="15" fill="rgb(211,200,13)" fg:x="65308917882" fg:w="166797327"/><text x="73.2146%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (166,797,327 samples, 0.19%)</title><rect x="72.9646%" y="661" width="0.1863%" height="15" fill="rgb(241,121,6)" fg:x="65308917882" fg:w="166797327"/><text x="73.2146%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (166,797,327 samples, 0.19%)</title><rect x="72.9646%" y="645" width="0.1863%" height="15" fill="rgb(234,221,29)" fg:x="65308917882" fg:w="166797327"/><text x="73.2146%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (13,938,678 samples, 0.02%)</title><rect x="73.1354%" y="629" width="0.0156%" height="15" fill="rgb(229,136,5)" fg:x="65461776531" fg:w="13938678"/><text x="73.3854%" y="639.50"></text></g><g><title>core::ptr::copy_nonoverlapping (13,938,678 samples, 0.02%)</title><rect x="73.1354%" y="613" width="0.0156%" height="15" fill="rgb(238,36,11)" fg:x="65461776531" fg:w="13938678"/><text x="73.3854%" y="623.50"></text></g><g><title>[libc.so.6] (13,938,678 samples, 0.02%)</title><rect x="73.1354%" y="597" width="0.0156%" height="15" fill="rgb(251,55,41)" fg:x="65461776531" fg:w="13938678"/><text x="73.3854%" y="607.50"></text></g><g><title>[libc.so.6] (179,993,573 samples, 0.20%)</title><rect x="73.1613%" y="485" width="0.2011%" height="15" fill="rgb(242,34,40)" fg:x="65484976758" fg:w="179993573"/><text x="73.4113%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (259,086,859 samples, 0.29%)</title><rect x="73.1613%" y="677" width="0.2895%" height="15" fill="rgb(215,42,17)" fg:x="65484976758" fg:w="259086859"/><text x="73.4113%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rust_ui::render::text::TextLine]&gt; (259,086,859 samples, 0.29%)</title><rect x="73.1613%" y="661" width="0.2895%" height="15" fill="rgb(207,44,46)" fg:x="65484976758" fg:w="259086859"/><text x="73.4113%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;rust_ui::render::text::TextLine&gt; (259,086,859 samples, 0.29%)</title><rect x="73.1613%" y="645" width="0.2895%" height="15" fill="rgb(211,206,28)" fg:x="65484976758" fg:w="259086859"/><text x="73.4113%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (259,086,859 samples, 0.29%)</title><rect x="73.1613%" y="629" width="0.2895%" height="15" fill="rgb(237,167,16)" fg:x="65484976758" fg:w="259086859"/><text x="73.4113%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (259,086,859 samples, 0.29%)</title><rect x="73.1613%" y="613" width="0.2895%" height="15" fill="rgb(233,66,6)" fg:x="65484976758" fg:w="259086859"/><text x="73.4113%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (259,086,859 samples, 0.29%)</title><rect x="73.1613%" y="597" width="0.2895%" height="15" fill="rgb(246,123,29)" fg:x="65484976758" fg:w="259086859"/><text x="73.4113%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (259,086,859 samples, 0.29%)</title><rect x="73.1613%" y="581" width="0.2895%" height="15" fill="rgb(209,62,40)" fg:x="65484976758" fg:w="259086859"/><text x="73.4113%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (259,086,859 samples, 0.29%)</title><rect x="73.1613%" y="565" width="0.2895%" height="15" fill="rgb(218,4,25)" fg:x="65484976758" fg:w="259086859"/><text x="73.4113%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (259,086,859 samples, 0.29%)</title><rect x="73.1613%" y="549" width="0.2895%" height="15" fill="rgb(253,91,49)" fg:x="65484976758" fg:w="259086859"/><text x="73.4113%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (259,086,859 samples, 0.29%)</title><rect x="73.1613%" y="533" width="0.2895%" height="15" fill="rgb(228,155,29)" fg:x="65484976758" fg:w="259086859"/><text x="73.4113%" y="543.50"></text></g><g><title>__rustc::__rdl_dealloc (259,086,859 samples, 0.29%)</title><rect x="73.1613%" y="517" width="0.2895%" height="15" fill="rgb(243,57,37)" fg:x="65484976758" fg:w="259086859"/><text x="73.4113%" y="527.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (259,086,859 samples, 0.29%)</title><rect x="73.1613%" y="501" width="0.2895%" height="15" fill="rgb(244,167,17)" fg:x="65484976758" fg:w="259086859"/><text x="73.4113%" y="511.50"></text></g><g><title>cfree (79,093,286 samples, 0.09%)</title><rect x="73.3624%" y="485" width="0.0884%" height="15" fill="rgb(207,181,38)" fg:x="65664970331" fg:w="79093286"/><text x="73.6124%" y="495.50"></text></g><g><title>[libc.so.6] (147,996,185 samples, 0.17%)</title><rect x="73.4507%" y="565" width="0.1653%" height="15" fill="rgb(211,8,23)" fg:x="65744063617" fg:w="147996185"/><text x="73.7007%" y="575.50"></text></g><g><title>[libc.so.6] (143,243,311 samples, 0.16%)</title><rect x="73.4560%" y="549" width="0.1600%" height="15" fill="rgb(235,11,44)" fg:x="65748816491" fg:w="143243311"/><text x="73.7060%" y="559.50"></text></g><g><title>[libc.so.6] (143,243,311 samples, 0.16%)</title><rect x="73.4560%" y="533" width="0.1600%" height="15" fill="rgb(248,18,52)" fg:x="65748816491" fg:w="143243311"/><text x="73.7060%" y="543.50"></text></g><g><title>[libc.so.6] (23,191,978 samples, 0.03%)</title><rect x="73.5902%" y="517" width="0.0259%" height="15" fill="rgb(208,4,7)" fg:x="65868867824" fg:w="23191978"/><text x="73.8402%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rust_ui::render::text::TextLine&gt;&gt; (411,693,604 samples, 0.46%)</title><rect x="73.1613%" y="693" width="0.4600%" height="15" fill="rgb(240,17,39)" fg:x="65484976758" fg:w="411693604"/><text x="73.4113%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;rust_ui::render::text::TextLine&gt;&gt; (152,606,745 samples, 0.17%)</title><rect x="73.4507%" y="677" width="0.1705%" height="15" fill="rgb(207,170,3)" fg:x="65744063617" fg:w="152606745"/><text x="73.7007%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (152,606,745 samples, 0.17%)</title><rect x="73.4507%" y="661" width="0.1705%" height="15" fill="rgb(236,100,52)" fg:x="65744063617" fg:w="152606745"/><text x="73.7007%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (152,606,745 samples, 0.17%)</title><rect x="73.4507%" y="645" width="0.1705%" height="15" fill="rgb(246,78,51)" fg:x="65744063617" fg:w="152606745"/><text x="73.7007%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (152,606,745 samples, 0.17%)</title><rect x="73.4507%" y="629" width="0.1705%" height="15" fill="rgb(211,17,15)" fg:x="65744063617" fg:w="152606745"/><text x="73.7007%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (152,606,745 samples, 0.17%)</title><rect x="73.4507%" y="613" width="0.1705%" height="15" fill="rgb(209,59,46)" fg:x="65744063617" fg:w="152606745"/><text x="73.7007%" y="623.50"></text></g><g><title>__rustc::__rdl_dealloc (152,606,745 samples, 0.17%)</title><rect x="73.4507%" y="597" width="0.1705%" height="15" fill="rgb(210,92,25)" fg:x="65744063617" fg:w="152606745"/><text x="73.7007%" y="607.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (152,606,745 samples, 0.17%)</title><rect x="73.4507%" y="581" width="0.1705%" height="15" fill="rgb(238,174,52)" fg:x="65744063617" fg:w="152606745"/><text x="73.7007%" y="591.50"></text></g><g><title>rust_ui::render::text::TextRenderer::layout_text (13,992,846 samples, 0.02%)</title><rect x="73.6212%" y="693" width="0.0156%" height="15" fill="rgb(230,73,7)" fg:x="65896670362" fg:w="13992846"/><text x="73.8712%" y="703.50"></text></g><g><title>rust_ui::render::renderer::measure_function (660,805,612 samples, 0.74%)</title><rect x="72.9598%" y="709" width="0.7383%" height="15" fill="rgb(243,124,40)" fg:x="65304611150" fg:w="660805612"/><text x="73.2098%" y="719.50"></text></g><g><title>rust_ui::render::text::total_size (54,753,554 samples, 0.06%)</title><rect x="73.6369%" y="693" width="0.0612%" height="15" fill="rgb(244,170,11)" fg:x="65910663208" fg:w="54753554"/><text x="73.8869%" y="703.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::max (50,301,755 samples, 0.06%)</title><rect x="73.6418%" y="677" width="0.0562%" height="15" fill="rgb(207,114,54)" fg:x="65915115007" fg:w="50301755"/><text x="73.8918%" y="687.50"></text></g><g><title>[libc.so.6] (18,655,181 samples, 0.02%)</title><rect x="73.7086%" y="533" width="0.0208%" height="15" fill="rgb(205,42,20)" fg:x="65974894484" fg:w="18655181"/><text x="73.9586%" y="543.50"></text></g><g><title>rust_ui::render::text::TextRenderer::draw_in_box_explicit (37,451,387 samples, 0.04%)</title><rect x="73.6980%" y="709" width="0.0418%" height="15" fill="rgb(230,30,28)" fg:x="65965416762" fg:w="37451387"/><text x="73.9480%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;rust_ui::render::text::TextLine&gt; (27,973,665 samples, 0.03%)</title><rect x="73.7086%" y="693" width="0.0313%" height="15" fill="rgb(205,73,54)" fg:x="65974894484" fg:w="27973665"/><text x="73.9586%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (27,973,665 samples, 0.03%)</title><rect x="73.7086%" y="677" width="0.0313%" height="15" fill="rgb(254,227,23)" fg:x="65974894484" fg:w="27973665"/><text x="73.9586%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (27,973,665 samples, 0.03%)</title><rect x="73.7086%" y="661" width="0.0313%" height="15" fill="rgb(228,202,34)" fg:x="65974894484" fg:w="27973665"/><text x="73.9586%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (27,973,665 samples, 0.03%)</title><rect x="73.7086%" y="645" width="0.0313%" height="15" fill="rgb(222,225,37)" fg:x="65974894484" fg:w="27973665"/><text x="73.9586%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27,973,665 samples, 0.03%)</title><rect x="73.7086%" y="629" width="0.0313%" height="15" fill="rgb(221,14,54)" fg:x="65974894484" fg:w="27973665"/><text x="73.9586%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (27,973,665 samples, 0.03%)</title><rect x="73.7086%" y="613" width="0.0313%" height="15" fill="rgb(254,102,2)" fg:x="65974894484" fg:w="27973665"/><text x="73.9586%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27,973,665 samples, 0.03%)</title><rect x="73.7086%" y="597" width="0.0313%" height="15" fill="rgb(232,104,17)" fg:x="65974894484" fg:w="27973665"/><text x="73.9586%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (27,973,665 samples, 0.03%)</title><rect x="73.7086%" y="581" width="0.0313%" height="15" fill="rgb(250,220,14)" fg:x="65974894484" fg:w="27973665"/><text x="73.9586%" y="591.50"></text></g><g><title>__rustc::__rdl_dealloc (27,973,665 samples, 0.03%)</title><rect x="73.7086%" y="565" width="0.0313%" height="15" fill="rgb(241,158,9)" fg:x="65974894484" fg:w="27973665"/><text x="73.9586%" y="575.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (27,973,665 samples, 0.03%)</title><rect x="73.7086%" y="549" width="0.0313%" height="15" fill="rgb(246,9,43)" fg:x="65974894484" fg:w="27973665"/><text x="73.9586%" y="559.50"></text></g><g><title>cfree (9,318,484 samples, 0.01%)</title><rect x="73.7295%" y="533" width="0.0104%" height="15" fill="rgb(206,73,33)" fg:x="65993549665" fg:w="9318484"/><text x="73.9795%" y="543.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (18,932,399 samples, 0.02%)</title><rect x="74.0112%" y="693" width="0.0212%" height="15" fill="rgb(222,79,8)" fg:x="66245694619" fg:w="18932399"/><text x="74.2612%" y="703.50"></text></g><g><title>core::str::validations::next_code_point (18,932,399 samples, 0.02%)</title><rect x="74.0112%" y="677" width="0.0212%" height="15" fill="rgb(234,8,54)" fg:x="66245694619" fg:w="18932399"/><text x="74.2612%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (23,484,919 samples, 0.03%)</title><rect x="74.0997%" y="677" width="0.0262%" height="15" fill="rgb(209,134,38)" fg:x="66324907682" fg:w="23484919"/><text x="74.3497%" y="687.50"></text></g><g><title>malloc (9,520,396 samples, 0.01%)</title><rect x="74.1153%" y="661" width="0.0106%" height="15" fill="rgb(230,127,29)" fg:x="66338872205" fg:w="9520396"/><text x="74.3653%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (107,000,491 samples, 0.12%)</title><rect x="74.0323%" y="693" width="0.1195%" height="15" fill="rgb(242,44,41)" fg:x="66264627018" fg:w="107000491"/><text x="74.2823%" y="703.50"></text></g><g><title>core::ptr::write (18,674,090 samples, 0.02%)</title><rect x="74.1310%" y="677" width="0.0209%" height="15" fill="rgb(222,56,43)" fg:x="66352953419" fg:w="18674090"/><text x="74.3810%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rust_ui::render::text::CharacterInstance&gt;&gt; (37,653,123 samples, 0.04%)</title><rect x="74.1519%" y="693" width="0.0421%" height="15" fill="rgb(238,39,47)" fg:x="66371627509" fg:w="37653123"/><text x="74.4019%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;rust_ui::render::text::CharacterInstance&gt;&gt; (37,653,123 samples, 0.04%)</title><rect x="74.1519%" y="677" width="0.0421%" height="15" fill="rgb(226,79,43)" fg:x="66371627509" fg:w="37653123"/><text x="74.4019%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37,653,123 samples, 0.04%)</title><rect x="74.1519%" y="661" width="0.0421%" height="15" fill="rgb(242,105,53)" fg:x="66371627509" fg:w="37653123"/><text x="74.4019%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (37,653,123 samples, 0.04%)</title><rect x="74.1519%" y="645" width="0.0421%" height="15" fill="rgb(251,132,46)" fg:x="66371627509" fg:w="37653123"/><text x="74.4019%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (37,653,123 samples, 0.04%)</title><rect x="74.1519%" y="629" width="0.0421%" height="15" fill="rgb(231,77,14)" fg:x="66371627509" fg:w="37653123"/><text x="74.4019%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (37,653,123 samples, 0.04%)</title><rect x="74.1519%" y="613" width="0.0421%" height="15" fill="rgb(240,135,9)" fg:x="66371627509" fg:w="37653123"/><text x="74.4019%" y="623.50"></text></g><g><title>__rustc::__rdl_dealloc (37,653,123 samples, 0.04%)</title><rect x="74.1519%" y="597" width="0.0421%" height="15" fill="rgb(248,109,14)" fg:x="66371627509" fg:w="37653123"/><text x="74.4019%" y="607.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (37,653,123 samples, 0.04%)</title><rect x="74.1519%" y="581" width="0.0421%" height="15" fill="rgb(227,146,52)" fg:x="66371627509" fg:w="37653123"/><text x="74.4019%" y="591.50"></text></g><g><title>[libc.so.6] (37,653,123 samples, 0.04%)</title><rect x="74.1519%" y="565" width="0.0421%" height="15" fill="rgb(232,54,3)" fg:x="66371627509" fg:w="37653123"/><text x="74.4019%" y="575.50"></text></g><g><title>[libc.so.6] (9,369,646 samples, 0.01%)</title><rect x="74.1835%" y="549" width="0.0105%" height="15" fill="rgb(229,201,43)" fg:x="66399910986" fg:w="9369646"/><text x="74.4335%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;rust_ui::render::text::Character,anyhow::Error&gt;&gt; (27,894,707 samples, 0.03%)</title><rect x="74.1939%" y="693" width="0.0312%" height="15" fill="rgb(252,161,33)" fg:x="66409280632" fg:w="27894707"/><text x="74.4439%" y="703.50"></text></g><g><title>rust_ui::render::text::TextRenderer::draw_line (452,936,680 samples, 0.51%)</title><rect x="73.7399%" y="709" width="0.5060%" height="15" fill="rgb(226,146,40)" fg:x="66002868149" fg:w="452936680"/><text x="73.9899%" y="719.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::floor (18,629,490 samples, 0.02%)</title><rect x="74.2251%" y="693" width="0.0208%" height="15" fill="rgb(219,47,25)" fg:x="66437175339" fg:w="18629490"/><text x="74.4751%" y="703.50"></text></g><g><title>core::f32::math::floor (18,629,490 samples, 0.02%)</title><rect x="74.2251%" y="677" width="0.0208%" height="15" fill="rgb(250,135,13)" fg:x="66437175339" fg:w="18629490"/><text x="74.4751%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (408,138,197 samples, 0.46%)</title><rect x="74.7877%" y="661" width="0.4560%" height="15" fill="rgb(219,229,18)" fg:x="66940720878" fg:w="408138197"/><text x="75.0377%" y="671.50"></text></g><g><title>rust_ui::render::text::TextRenderer::get_or_create_atlas (902,512,164 samples, 1.01%)</title><rect x="74.2459%" y="709" width="1.0083%" height="15" fill="rgb(217,152,27)" fg:x="66455804829" fg:w="902512164"/><text x="74.4959%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (417,596,115 samples, 0.47%)</title><rect x="74.7877%" y="693" width="0.4665%" height="15" fill="rgb(225,71,47)" fg:x="66940720878" fg:w="417596115"/><text x="75.0377%" y="703.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (417,596,115 samples, 0.47%)</title><rect x="74.7877%" y="677" width="0.4665%" height="15" fill="rgb(220,139,14)" fg:x="66940720878" fg:w="417596115"/><text x="75.0377%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9,457,918 samples, 0.01%)</title><rect x="75.2436%" y="661" width="0.0106%" height="15" fill="rgb(247,54,32)" fg:x="67348859075" fg:w="9457918"/><text x="75.4936%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (9,457,918 samples, 0.01%)</title><rect x="75.2436%" y="645" width="0.0106%" height="15" fill="rgb(252,131,39)" fg:x="67348859075" fg:w="9457918"/><text x="75.4936%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (9,479,654 samples, 0.01%)</title><rect x="75.2626%" y="693" width="0.0106%" height="15" fill="rgb(210,108,39)" fg:x="67365800924" fg:w="9479654"/><text x="75.5126%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (9,479,654 samples, 0.01%)</title><rect x="75.2626%" y="677" width="0.0106%" height="15" fill="rgb(205,23,29)" fg:x="67365800924" fg:w="9479654"/><text x="75.5126%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (9,479,654 samples, 0.01%)</title><rect x="75.2626%" y="661" width="0.0106%" height="15" fill="rgb(246,139,46)" fg:x="67365800924" fg:w="9479654"/><text x="75.5126%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,479,654 samples, 0.01%)</title><rect x="75.2626%" y="645" width="0.0106%" height="15" fill="rgb(250,81,26)" fg:x="67365800924" fg:w="9479654"/><text x="75.5126%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (9,479,654 samples, 0.01%)</title><rect x="75.2626%" y="629" width="0.0106%" height="15" fill="rgb(214,104,7)" fg:x="67365800924" fg:w="9479654"/><text x="75.5126%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9,479,654 samples, 0.01%)</title><rect x="75.2626%" y="613" width="0.0106%" height="15" fill="rgb(233,189,8)" fg:x="67365800924" fg:w="9479654"/><text x="75.5126%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (9,479,654 samples, 0.01%)</title><rect x="75.2626%" y="597" width="0.0106%" height="15" fill="rgb(228,141,17)" fg:x="67365800924" fg:w="9479654"/><text x="75.5126%" y="607.50"></text></g><g><title>__rustc::__rdl_dealloc (9,479,654 samples, 0.01%)</title><rect x="75.2626%" y="581" width="0.0106%" height="15" fill="rgb(247,157,1)" fg:x="67365800924" fg:w="9479654"/><text x="75.5126%" y="591.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (9,479,654 samples, 0.01%)</title><rect x="75.2626%" y="565" width="0.0106%" height="15" fill="rgb(249,225,5)" fg:x="67365800924" fg:w="9479654"/><text x="75.5126%" y="575.50"></text></g><g><title>cfree (9,479,654 samples, 0.01%)</title><rect x="75.2626%" y="549" width="0.0106%" height="15" fill="rgb(242,55,13)" fg:x="67365800924" fg:w="9479654"/><text x="75.5126%" y="559.50"></text></g><g><title>rust_ui::render::text::TextRenderer::layout_text (21,570,846 samples, 0.02%)</title><rect x="75.2542%" y="709" width="0.0241%" height="15" fill="rgb(230,49,50)" fg:x="67358316993" fg:w="21570846"/><text x="75.5042%" y="719.50"></text></g><g><title>[libc.so.6] (444,808,029 samples, 0.50%)</title><rect x="75.3452%" y="485" width="0.4969%" height="15" fill="rgb(241,111,38)" fg:x="67439718969" fg:w="444808029"/><text x="75.5952%" y="495.50"></text></g><g><title>[libc.so.6] (292,662,967 samples, 0.33%)</title><rect x="75.5151%" y="469" width="0.3270%" height="15" fill="rgb(252,155,4)" fg:x="67591864031" fg:w="292662967"/><text x="75.7651%" y="479.50"></text></g><g><title>[libc.so.6] (37,508,148 samples, 0.04%)</title><rect x="75.8002%" y="453" width="0.0419%" height="15" fill="rgb(212,69,32)" fg:x="67847018850" fg:w="37508148"/><text x="76.0502%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (486,672,012 samples, 0.54%)</title><rect x="75.3452%" y="693" width="0.5437%" height="15" fill="rgb(243,107,47)" fg:x="67439718969" fg:w="486672012"/><text x="75.5952%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (486,672,012 samples, 0.54%)</title><rect x="75.3452%" y="677" width="0.5437%" height="15" fill="rgb(247,130,12)" fg:x="67439718969" fg:w="486672012"/><text x="75.5952%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (486,672,012 samples, 0.54%)</title><rect x="75.3452%" y="661" width="0.5437%" height="15" fill="rgb(233,74,16)" fg:x="67439718969" fg:w="486672012"/><text x="75.5952%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (486,672,012 samples, 0.54%)</title><rect x="75.3452%" y="645" width="0.5437%" height="15" fill="rgb(208,58,18)" fg:x="67439718969" fg:w="486672012"/><text x="75.5952%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (486,672,012 samples, 0.54%)</title><rect x="75.3452%" y="629" width="0.5437%" height="15" fill="rgb(242,225,1)" fg:x="67439718969" fg:w="486672012"/><text x="75.5952%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (486,672,012 samples, 0.54%)</title><rect x="75.3452%" y="613" width="0.5437%" height="15" fill="rgb(249,39,40)" fg:x="67439718969" fg:w="486672012"/><text x="75.5952%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (486,672,012 samples, 0.54%)</title><rect x="75.3452%" y="597" width="0.5437%" height="15" fill="rgb(207,72,44)" fg:x="67439718969" fg:w="486672012"/><text x="75.5952%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (486,672,012 samples, 0.54%)</title><rect x="75.3452%" y="581" width="0.5437%" height="15" fill="rgb(215,193,12)" fg:x="67439718969" fg:w="486672012"/><text x="75.5952%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (486,672,012 samples, 0.54%)</title><rect x="75.3452%" y="565" width="0.5437%" height="15" fill="rgb(248,41,39)" fg:x="67439718969" fg:w="486672012"/><text x="75.5952%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (486,672,012 samples, 0.54%)</title><rect x="75.3452%" y="549" width="0.5437%" height="15" fill="rgb(253,85,4)" fg:x="67439718969" fg:w="486672012"/><text x="75.5952%" y="559.50"></text></g><g><title>alloc::alloc::alloc (486,672,012 samples, 0.54%)</title><rect x="75.3452%" y="533" width="0.5437%" height="15" fill="rgb(243,70,31)" fg:x="67439718969" fg:w="486672012"/><text x="75.5952%" y="543.50"></text></g><g><title>__rustc::__rdl_alloc (486,672,012 samples, 0.54%)</title><rect x="75.3452%" y="517" width="0.5437%" height="15" fill="rgb(253,195,26)" fg:x="67439718969" fg:w="486672012"/><text x="75.5952%" y="527.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (486,672,012 samples, 0.54%)</title><rect x="75.3452%" y="501" width="0.5437%" height="15" fill="rgb(243,42,11)" fg:x="67439718969" fg:w="486672012"/><text x="75.5952%" y="511.50"></text></g><g><title>malloc (41,863,983 samples, 0.05%)</title><rect x="75.8421%" y="485" width="0.0468%" height="15" fill="rgb(239,66,17)" fg:x="67884526998" fg:w="41863983"/><text x="76.0921%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (42,310,710 samples, 0.05%)</title><rect x="75.9308%" y="517" width="0.0473%" height="15" fill="rgb(217,132,21)" fg:x="67963941436" fg:w="42310710"/><text x="76.1808%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::set_ptr_and_cap (9,176,900 samples, 0.01%)</title><rect x="75.9781%" y="517" width="0.0103%" height="15" fill="rgb(252,202,21)" fg:x="68006252146" fg:w="9176900"/><text x="76.2281%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (594,051,905 samples, 0.66%)</title><rect x="76.0876%" y="501" width="0.6637%" height="15" fill="rgb(233,98,36)" fg:x="68104267770" fg:w="594051905"/><text x="76.3376%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (594,051,905 samples, 0.66%)</title><rect x="76.0876%" y="485" width="0.6637%" height="15" fill="rgb(216,153,54)" fg:x="68104267770" fg:w="594051905"/><text x="76.3376%" y="495.50"></text></g><g><title>alloc::alloc::realloc (589,589,826 samples, 0.66%)</title><rect x="76.0926%" y="469" width="0.6587%" height="15" fill="rgb(250,99,7)" fg:x="68108729849" fg:w="589589826"/><text x="76.3426%" y="479.50"></text></g><g><title>__rustc::__rdl_realloc (580,336,632 samples, 0.65%)</title><rect x="76.1029%" y="453" width="0.6484%" height="15" fill="rgb(207,56,50)" fg:x="68117983043" fg:w="580336632"/><text x="76.3529%" y="463.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (580,336,632 samples, 0.65%)</title><rect x="76.1029%" y="437" width="0.6484%" height="15" fill="rgb(244,61,34)" fg:x="68117983043" fg:w="580336632"/><text x="76.3529%" y="447.50"></text></g><g><title>realloc (561,753,811 samples, 0.63%)</title><rect x="76.1237%" y="421" width="0.6276%" height="15" fill="rgb(241,50,38)" fg:x="68136565864" fg:w="561753811"/><text x="76.3737%" y="431.50"></text></g><g><title>[libc.so.6] (321,429,507 samples, 0.36%)</title><rect x="76.3922%" y="405" width="0.3591%" height="15" fill="rgb(212,166,30)" fg:x="68376890168" fg:w="321429507"/><text x="76.6422%" y="415.50"></text></g><g><title>[libc.so.6] (223,758,854 samples, 0.25%)</title><rect x="76.5013%" y="389" width="0.2500%" height="15" fill="rgb(249,127,32)" fg:x="68474560821" fg:w="223758854"/><text x="76.7513%" y="399.50"></text></g><g><title>[libc.so.6] (46,620,032 samples, 0.05%)</title><rect x="76.6992%" y="373" width="0.0521%" height="15" fill="rgb(209,103,0)" fg:x="68651699643" fg:w="46620032"/><text x="76.9492%" y="383.50"></text></g><g><title>[libc.so.6] (28,254,624 samples, 0.03%)</title><rect x="76.7197%" y="357" width="0.0316%" height="15" fill="rgb(238,209,51)" fg:x="68670065051" fg:w="28254624"/><text x="76.9697%" y="367.50"></text></g><g><title>[libc.so.6] (231,854,646 samples, 0.26%)</title><rect x="76.9744%" y="485" width="0.2590%" height="15" fill="rgb(237,56,23)" fg:x="68898026776" fg:w="231854646"/><text x="77.2244%" y="495.50"></text></g><g><title>[libc.so.6] (42,071,890 samples, 0.05%)</title><rect x="77.1864%" y="469" width="0.0470%" height="15" fill="rgb(215,153,46)" fg:x="69087809532" fg:w="42071890"/><text x="77.4364%" y="479.50"></text></g><g><title>[libc.so.6] (436,212,973 samples, 0.49%)</title><rect x="76.7513%" y="501" width="0.4873%" height="15" fill="rgb(224,49,31)" fg:x="68698319675" fg:w="436212973"/><text x="77.0013%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (14,036,897 samples, 0.02%)</title><rect x="77.2386%" y="501" width="0.0157%" height="15" fill="rgb(250,18,42)" fg:x="69134532648" fg:w="14036897"/><text x="77.4886%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,239,978,532 samples, 1.39%)</title><rect x="75.9884%" y="517" width="1.3853%" height="15" fill="rgb(215,176,39)" fg:x="68015429046" fg:w="1239978532"/><text x="76.2384%" y="527.50"></text></g><g><title>malloc (106,838,033 samples, 0.12%)</title><rect x="77.2543%" y="501" width="0.1194%" height="15" fill="rgb(223,77,29)" fg:x="69148569545" fg:w="106838033"/><text x="77.5043%" y="511.50"></text></g><g><title>core::cmp::max (27,930,134 samples, 0.03%)</title><rect x="77.3789%" y="517" width="0.0312%" height="15" fill="rgb(234,94,52)" fg:x="69260082560" fg:w="27930134"/><text x="77.6289%" y="527.50"></text></g><g><title>core::cmp::Ord::max (27,930,134 samples, 0.03%)</title><rect x="77.3789%" y="501" width="0.0312%" height="15" fill="rgb(220,154,50)" fg:x="69260082560" fg:w="27930134"/><text x="77.6289%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,370,678,506 samples, 1.53%)</title><rect x="75.9100%" y="549" width="1.5314%" height="15" fill="rgb(212,11,10)" fg:x="67945309619" fg:w="1370678506"/><text x="76.1600%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,365,876,848 samples, 1.53%)</title><rect x="75.9154%" y="533" width="1.5260%" height="15" fill="rgb(205,166,19)" fg:x="67950111277" fg:w="1365876848"/><text x="76.1654%" y="543.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (27,975,431 samples, 0.03%)</title><rect x="77.4101%" y="517" width="0.0313%" height="15" fill="rgb(244,198,16)" fg:x="69288012694" fg:w="27975431"/><text x="77.6601%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,398,279,694 samples, 1.56%)</title><rect x="75.8995%" y="597" width="1.5622%" height="15" fill="rgb(219,69,12)" fg:x="67935894246" fg:w="1398279694"/><text x="76.1495%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,398,279,694 samples, 1.56%)</title><rect x="75.8995%" y="581" width="1.5622%" height="15" fill="rgb(245,30,7)" fg:x="67935894246" fg:w="1398279694"/><text x="76.1495%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,398,279,694 samples, 1.56%)</title><rect x="75.8995%" y="565" width="1.5622%" height="15" fill="rgb(218,221,48)" fg:x="67935894246" fg:w="1398279694"/><text x="76.1495%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (18,185,815 samples, 0.02%)</title><rect x="77.4414%" y="549" width="0.0203%" height="15" fill="rgb(216,66,15)" fg:x="69315988125" fg:w="18185815"/><text x="77.6914%" y="559.50"></text></g><g><title>core::ptr::copy_nonoverlapping (68,884,711 samples, 0.08%)</title><rect x="77.4617%" y="597" width="0.0770%" height="15" fill="rgb(226,122,50)" fg:x="69334173940" fg:w="68884711"/><text x="77.7117%" y="607.50"></text></g><g><title>[libc.so.6] (64,194,846 samples, 0.07%)</title><rect x="77.4669%" y="581" width="0.0717%" height="15" fill="rgb(239,156,16)" fg:x="69338863805" fg:w="64194846"/><text x="77.7169%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone_from (1,481,364,753 samples, 1.66%)</title><rect x="75.8889%" y="693" width="1.6550%" height="15" fill="rgb(224,27,38)" fg:x="67926390981" fg:w="1481364753"/><text x="76.1389%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone_from (1,481,364,753 samples, 1.66%)</title><rect x="75.8889%" y="677" width="1.6550%" height="15" fill="rgb(224,39,27)" fg:x="67926390981" fg:w="1481364753"/><text x="76.1389%" y="687.50"></text></g><g><title>&lt;[T] as alloc::slice::SpecCloneIntoVec&lt;T,A&gt;&gt;::clone_into (1,481,364,753 samples, 1.66%)</title><rect x="75.8889%" y="661" width="1.6550%" height="15" fill="rgb(215,92,29)" fg:x="67926390981" fg:w="1481364753"/><text x="76.1389%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,481,364,753 samples, 1.66%)</title><rect x="75.8889%" y="645" width="1.6550%" height="15" fill="rgb(207,159,16)" fg:x="67926390981" fg:w="1481364753"/><text x="76.1389%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,481,364,753 samples, 1.66%)</title><rect x="75.8889%" y="629" width="1.6550%" height="15" fill="rgb(238,163,47)" fg:x="67926390981" fg:w="1481364753"/><text x="76.1389%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,481,364,753 samples, 1.66%)</title><rect x="75.8889%" y="613" width="1.6550%" height="15" fill="rgb(219,91,49)" fg:x="67926390981" fg:w="1481364753"/><text x="76.1389%" y="623.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (40,619,562 samples, 0.05%)</title><rect x="77.5439%" y="693" width="0.0454%" height="15" fill="rgb(227,167,31)" fg:x="69407755734" fg:w="40619562"/><text x="77.7939%" y="703.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (36,860,961 samples, 0.04%)</title><rect x="77.5893%" y="693" width="0.0412%" height="15" fill="rgb(234,80,54)" fg:x="69448375296" fg:w="36860961"/><text x="77.8393%" y="703.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (36,860,961 samples, 0.04%)</title><rect x="77.5893%" y="677" width="0.0412%" height="15" fill="rgb(212,114,2)" fg:x="69448375296" fg:w="36860961"/><text x="77.8393%" y="687.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (36,860,961 samples, 0.04%)</title><rect x="77.5893%" y="661" width="0.0412%" height="15" fill="rgb(234,50,24)" fg:x="69448375296" fg:w="36860961"/><text x="77.8393%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (13,834,297 samples, 0.02%)</title><rect x="77.6150%" y="645" width="0.0155%" height="15" fill="rgb(221,68,8)" fg:x="69471401960" fg:w="13834297"/><text x="77.8650%" y="655.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (13,834,297 samples, 0.02%)</title><rect x="77.6150%" y="629" width="0.0155%" height="15" fill="rgb(254,180,31)" fg:x="69471401960" fg:w="13834297"/><text x="77.8650%" y="639.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (13,834,297 samples, 0.02%)</title><rect x="77.6150%" y="613" width="0.0155%" height="15" fill="rgb(247,130,50)" fg:x="69471401960" fg:w="13834297"/><text x="77.8650%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (9,268,486 samples, 0.01%)</title><rect x="77.6305%" y="629" width="0.0104%" height="15" fill="rgb(211,109,4)" fg:x="69485236257" fg:w="9268486"/><text x="77.8805%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::needs_to_grow (9,363,681 samples, 0.01%)</title><rect x="77.6618%" y="581" width="0.0105%" height="15" fill="rgb(238,50,21)" fg:x="69513272069" fg:w="9363681"/><text x="77.9118%" y="591.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9,401,763 samples, 0.01%)</title><rect x="77.6878%" y="549" width="0.0105%" height="15" fill="rgb(225,57,45)" fg:x="69536583215" fg:w="9401763"/><text x="77.9378%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (18,753,494 samples, 0.02%)</title><rect x="77.6983%" y="549" width="0.0210%" height="15" fill="rgb(209,196,50)" fg:x="69545984978" fg:w="18753494"/><text x="77.9483%" y="559.50"></text></g><g><title>alloc::raw_vec::layout_array (27,995,299 samples, 0.03%)</title><rect x="77.7193%" y="549" width="0.0313%" height="15" fill="rgb(242,140,13)" fg:x="69564738472" fg:w="27995299"/><text x="77.9693%" y="559.50"></text></g><g><title>core::alloc::layout::Layout::repeat (27,995,299 samples, 0.03%)</title><rect x="77.7193%" y="533" width="0.0313%" height="15" fill="rgb(217,111,7)" fg:x="69564738472" fg:w="27995299"/><text x="77.9693%" y="543.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (18,822,176 samples, 0.02%)</title><rect x="77.7295%" y="517" width="0.0210%" height="15" fill="rgb(253,193,51)" fg:x="69573911595" fg:w="18822176"/><text x="77.9795%" y="527.50"></text></g><g><title>core::alloc::layout::Layout::size_rounded_up_to_custom_align (18,822,176 samples, 0.02%)</title><rect x="77.7295%" y="501" width="0.0210%" height="15" fill="rgb(252,70,29)" fg:x="69573911595" fg:w="18822176"/><text x="77.9795%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (74,727,162 samples, 0.08%)</title><rect x="77.6722%" y="581" width="0.0835%" height="15" fill="rgb(232,127,12)" fg:x="69522635750" fg:w="74727162"/><text x="77.9222%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (74,727,162 samples, 0.08%)</title><rect x="77.6722%" y="565" width="0.0835%" height="15" fill="rgb(211,180,21)" fg:x="69522635750" fg:w="74727162"/><text x="77.9222%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (18,412,482 samples, 0.02%)</title><rect x="77.7971%" y="565" width="0.0206%" height="15" fill="rgb(229,72,13)" fg:x="69634388395" fg:w="18412482"/><text x="78.0471%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (18,412,482 samples, 0.02%)</title><rect x="77.7971%" y="549" width="0.0206%" height="15" fill="rgb(240,211,49)" fg:x="69634388395" fg:w="18412482"/><text x="78.0471%" y="559.50"></text></g><g><title>alloc::alloc::realloc (18,412,482 samples, 0.02%)</title><rect x="77.7971%" y="533" width="0.0206%" height="15" fill="rgb(219,149,40)" fg:x="69634388395" fg:w="18412482"/><text x="78.0471%" y="543.50"></text></g><g><title>__rustc::__rdl_realloc (18,412,482 samples, 0.02%)</title><rect x="77.7971%" y="517" width="0.0206%" height="15" fill="rgb(210,127,46)" fg:x="69634388395" fg:w="18412482"/><text x="78.0471%" y="527.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (18,412,482 samples, 0.02%)</title><rect x="77.7971%" y="501" width="0.0206%" height="15" fill="rgb(220,106,7)" fg:x="69634388395" fg:w="18412482"/><text x="78.0471%" y="511.50"></text></g><g><title>[libc.so.6] (468,024,464 samples, 0.52%)</title><rect x="77.8177%" y="565" width="0.5229%" height="15" fill="rgb(249,31,22)" fg:x="69652800877" fg:w="468024464"/><text x="78.0677%" y="575.50"></text></g><g><title>[libc.so.6] (361,541,198 samples, 0.40%)</title><rect x="77.9366%" y="549" width="0.4039%" height="15" fill="rgb(253,1,49)" fg:x="69759284143" fg:w="361541198"/><text x="78.1866%" y="559.50"></text></g><g><title>[libc.so.6] (23,441,494 samples, 0.03%)</title><rect x="78.3144%" y="533" width="0.0262%" height="15" fill="rgb(227,144,33)" fg:x="70097383847" fg:w="23441494"/><text x="78.5644%" y="543.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (13,787,188 samples, 0.02%)</title><rect x="78.3406%" y="565" width="0.0154%" height="15" fill="rgb(249,163,44)" fg:x="70120825341" fg:w="13787188"/><text x="78.5906%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (687,246,280 samples, 0.77%)</title><rect x="77.6408%" y="629" width="0.7678%" height="15" fill="rgb(234,15,39)" fg:x="69494504743" fg:w="687246280"/><text x="77.8908%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (687,246,280 samples, 0.77%)</title><rect x="77.6408%" y="613" width="0.7678%" height="15" fill="rgb(207,66,16)" fg:x="69494504743" fg:w="687246280"/><text x="77.8908%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (687,246,280 samples, 0.77%)</title><rect x="77.6408%" y="597" width="0.7678%" height="15" fill="rgb(233,112,24)" fg:x="69494504743" fg:w="687246280"/><text x="77.8908%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (584,388,111 samples, 0.65%)</title><rect x="77.7557%" y="581" width="0.6529%" height="15" fill="rgb(230,90,22)" fg:x="69597362912" fg:w="584388111"/><text x="78.0057%" y="591.50"></text></g><g><title>malloc (47,138,494 samples, 0.05%)</title><rect x="78.3560%" y="565" width="0.0527%" height="15" fill="rgb(229,61,13)" fg:x="70134612529" fg:w="47138494"/><text x="78.6060%" y="575.50"></text></g><g><title>core::ptr::copy_nonoverlapping (129,557,117 samples, 0.14%)</title><rect x="78.4086%" y="629" width="0.1447%" height="15" fill="rgb(225,57,24)" fg:x="70181751023" fg:w="129557117"/><text x="78.6586%" y="639.50"></text></g><g><title>[libc.so.6] (46,371,190 samples, 0.05%)</title><rect x="78.5016%" y="613" width="0.0518%" height="15" fill="rgb(208,169,48)" fg:x="70264936950" fg:w="46371190"/><text x="78.7516%" y="623.50"></text></g><g><title>alloc::string::String::push_str (835,459,090 samples, 0.93%)</title><rect x="77.6305%" y="693" width="0.9334%" height="15" fill="rgb(244,218,51)" fg:x="69485236257" fg:w="835459090"/><text x="77.8805%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (835,459,090 samples, 0.93%)</title><rect x="77.6305%" y="677" width="0.9334%" height="15" fill="rgb(214,148,10)" fg:x="69485236257" fg:w="835459090"/><text x="77.8805%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (835,459,090 samples, 0.93%)</title><rect x="77.6305%" y="661" width="0.9334%" height="15" fill="rgb(225,174,27)" fg:x="69485236257" fg:w="835459090"/><text x="77.8805%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (835,459,090 samples, 0.93%)</title><rect x="77.6305%" y="645" width="0.9334%" height="15" fill="rgb(230,96,26)" fg:x="69485236257" fg:w="835459090"/><text x="77.8805%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (9,387,207 samples, 0.01%)</title><rect x="78.5534%" y="629" width="0.0105%" height="15" fill="rgb(232,10,30)" fg:x="70311308140" fg:w="9387207"/><text x="78.8034%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (32,257,543 samples, 0.04%)</title><rect x="78.5639%" y="693" width="0.0360%" height="15" fill="rgb(222,8,50)" fg:x="70320695347" fg:w="32257543"/><text x="78.8139%" y="703.50"></text></g><g><title>core::ptr::write (18,334,748 samples, 0.02%)</title><rect x="78.5794%" y="677" width="0.0205%" height="15" fill="rgb(213,81,27)" fg:x="70334618142" fg:w="18334748"/><text x="78.8294%" y="687.50"></text></g><g><title>[libc.so.6] (148,750,974 samples, 0.17%)</title><rect x="78.5999%" y="549" width="0.1662%" height="15" fill="rgb(245,50,10)" fg:x="70352952890" fg:w="148750974"/><text x="78.8499%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (186,124,234 samples, 0.21%)</title><rect x="78.5999%" y="613" width="0.2079%" height="15" fill="rgb(216,100,18)" fg:x="70352952890" fg:w="186124234"/><text x="78.8499%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (186,124,234 samples, 0.21%)</title><rect x="78.5999%" y="597" width="0.2079%" height="15" fill="rgb(236,147,54)" fg:x="70352952890" fg:w="186124234"/><text x="78.8499%" y="607.50"></text></g><g><title>__rustc::__rdl_dealloc (186,124,234 samples, 0.21%)</title><rect x="78.5999%" y="581" width="0.2079%" height="15" fill="rgb(205,143,26)" fg:x="70352952890" fg:w="186124234"/><text x="78.8499%" y="591.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (186,124,234 samples, 0.21%)</title><rect x="78.5999%" y="565" width="0.2079%" height="15" fill="rgb(236,26,9)" fg:x="70352952890" fg:w="186124234"/><text x="78.8499%" y="575.50"></text></g><g><title>cfree (37,373,260 samples, 0.04%)</title><rect x="78.7661%" y="549" width="0.0418%" height="15" fill="rgb(221,165,53)" fg:x="70501703864" fg:w="37373260"/><text x="79.0161%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (190,770,782 samples, 0.21%)</title><rect x="78.5999%" y="693" width="0.2131%" height="15" fill="rgb(214,110,17)" fg:x="70352952890" fg:w="190770782"/><text x="78.8499%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (190,770,782 samples, 0.21%)</title><rect x="78.5999%" y="677" width="0.2131%" height="15" fill="rgb(237,197,12)" fg:x="70352952890" fg:w="190770782"/><text x="78.8499%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (190,770,782 samples, 0.21%)</title><rect x="78.5999%" y="661" width="0.2131%" height="15" fill="rgb(205,84,17)" fg:x="70352952890" fg:w="190770782"/><text x="78.8499%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (190,770,782 samples, 0.21%)</title><rect x="78.5999%" y="645" width="0.2131%" height="15" fill="rgb(237,18,45)" fg:x="70352952890" fg:w="190770782"/><text x="78.8499%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (190,770,782 samples, 0.21%)</title><rect x="78.5999%" y="629" width="0.2131%" height="15" fill="rgb(221,87,14)" fg:x="70352952890" fg:w="190770782"/><text x="78.8499%" y="639.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (840,108,232 samples, 0.94%)</title><rect x="79.4100%" y="677" width="0.9386%" height="15" fill="rgb(238,186,15)" fg:x="71078098283" fg:w="840108232"/><text x="79.6600%" y="687.50"></text></g><g><title>core::str::validations::next_code_point (840,108,232 samples, 0.94%)</title><rect x="79.4100%" y="661" width="0.9386%" height="15" fill="rgb(208,115,11)" fg:x="71078098283" fg:w="840108232"/><text x="79.6600%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (381,095,373 samples, 0.43%)</title><rect x="79.9229%" y="645" width="0.4258%" height="15" fill="rgb(254,175,0)" fg:x="71537111142" fg:w="381095373"/><text x="80.1729%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (50,599,424 samples, 0.06%)</title><rect x="80.3486%" y="677" width="0.0565%" height="15" fill="rgb(227,24,42)" fg:x="71918206515" fg:w="50599424"/><text x="80.5986%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (50,599,424 samples, 0.06%)</title><rect x="80.3486%" y="661" width="0.0565%" height="15" fill="rgb(223,211,37)" fg:x="71918206515" fg:w="50599424"/><text x="80.5986%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (50,599,424 samples, 0.06%)</title><rect x="80.3486%" y="645" width="0.0565%" height="15" fill="rgb(235,49,27)" fg:x="71918206515" fg:w="50599424"/><text x="80.5986%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (50,599,424 samples, 0.06%)</title><rect x="80.3486%" y="629" width="0.0565%" height="15" fill="rgb(254,97,51)" fg:x="71918206515" fg:w="50599424"/><text x="80.5986%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (50,599,424 samples, 0.06%)</title><rect x="80.3486%" y="613" width="0.0565%" height="15" fill="rgb(249,51,40)" fg:x="71918206515" fg:w="50599424"/><text x="80.5986%" y="623.50"></text></g><g><title>alloc::alloc::realloc (50,599,424 samples, 0.06%)</title><rect x="80.3486%" y="597" width="0.0565%" height="15" fill="rgb(210,128,45)" fg:x="71918206515" fg:w="50599424"/><text x="80.5986%" y="607.50"></text></g><g><title>__rustc::__rdl_realloc (50,599,424 samples, 0.06%)</title><rect x="80.3486%" y="581" width="0.0565%" height="15" fill="rgb(224,137,50)" fg:x="71918206515" fg:w="50599424"/><text x="80.5986%" y="591.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (50,599,424 samples, 0.06%)</title><rect x="80.3486%" y="565" width="0.0565%" height="15" fill="rgb(242,15,9)" fg:x="71918206515" fg:w="50599424"/><text x="80.5986%" y="575.50"></text></g><g><title>[unknown] (50,599,424 samples, 0.06%)</title><rect x="80.3486%" y="549" width="0.0565%" height="15" fill="rgb(233,187,41)" fg:x="71918206515" fg:w="50599424"/><text x="80.5986%" y="559.50"></text></g><g><title>rust_ui::render::text::TextRenderer::get_or_create_atlas (50,599,424 samples, 0.06%)</title><rect x="80.3486%" y="533" width="0.0565%" height="15" fill="rgb(227,2,29)" fg:x="71918206515" fg:w="50599424"/><text x="80.5986%" y="543.50"></text></g><g><title>[libc.so.6] (119,783,558 samples, 0.13%)</title><rect x="80.4052%" y="661" width="0.1338%" height="15" fill="rgb(222,70,3)" fg:x="71968805939" fg:w="119783558"/><text x="80.6552%" y="671.50"></text></g><g><title>rust_ui::render::text::TextRenderer::get_or_create_atlas (119,783,558 samples, 0.13%)</title><rect x="80.4052%" y="645" width="0.1338%" height="15" fill="rgb(213,11,42)" fg:x="71968805939" fg:w="119783558"/><text x="80.6552%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (203,397,826 samples, 0.23%)</title><rect x="80.4052%" y="677" width="0.2272%" height="15" fill="rgb(225,150,9)" fg:x="71968805939" fg:w="203397826"/><text x="80.6552%" y="687.50"></text></g><g><title>[unknown] (83,614,268 samples, 0.09%)</title><rect x="80.5390%" y="661" width="0.0934%" height="15" fill="rgb(230,162,45)" fg:x="72088589497" fg:w="83614268"/><text x="80.7890%" y="671.50"></text></g><g><title>rust_ui::render::text::TextRenderer::get_or_create_atlas (83,614,268 samples, 0.09%)</title><rect x="80.5390%" y="645" width="0.0934%" height="15" fill="rgb(222,14,52)" fg:x="72088589497" fg:w="83614268"/><text x="80.7890%" y="655.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::max (105,074,296 samples, 0.12%)</title><rect x="80.6324%" y="677" width="0.1174%" height="15" fill="rgb(254,198,14)" fg:x="72172203765" fg:w="105074296"/><text x="80.8824%" y="687.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (14,128,160 samples, 0.02%)</title><rect x="80.7498%" y="677" width="0.0158%" height="15" fill="rgb(220,217,30)" fg:x="72277278061" fg:w="14128160"/><text x="80.9998%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (14,128,160 samples, 0.02%)</title><rect x="80.7498%" y="661" width="0.0158%" height="15" fill="rgb(215,146,41)" fg:x="72277278061" fg:w="14128160"/><text x="80.9998%" y="671.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (14,128,160 samples, 0.02%)</title><rect x="80.7498%" y="645" width="0.0158%" height="15" fill="rgb(217,27,36)" fg:x="72277278061" fg:w="14128160"/><text x="80.9998%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (14,128,160 samples, 0.02%)</title><rect x="80.7498%" y="629" width="0.0158%" height="15" fill="rgb(219,218,39)" fg:x="72277278061" fg:w="14128160"/><text x="80.9998%" y="639.50"></text></g><g><title>rust_ui::render::text::TextRenderer::measure_text_size (2,552,578,881 samples, 2.85%)</title><rect x="78.8130%" y="693" width="2.8518%" height="15" fill="rgb(219,4,42)" fg:x="70543723672" fg:w="2552578881"/><text x="79.0630%" y="703.50">ru..</text></g><g><title>rust_ui::render::text::TextRenderer::layout_text_explicit (804,896,332 samples, 0.90%)</title><rect x="80.7656%" y="677" width="0.8992%" height="15" fill="rgb(249,119,36)" fg:x="72291406221" fg:w="804896332"/><text x="81.0156%" y="687.50"></text></g><g><title>rust_ui::render::text::TextRenderer::measure_text_size (804,896,332 samples, 0.90%)</title><rect x="80.7656%" y="661" width="0.8992%" height="15" fill="rgb(209,23,33)" fg:x="72291406221" fg:w="804896332"/><text x="81.0156%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (27,531,135 samples, 0.03%)</title><rect x="81.6857%" y="677" width="0.0308%" height="15" fill="rgb(211,10,0)" fg:x="73115009867" fg:w="27531135"/><text x="81.9357%" y="687.50"></text></g><g><title>rust_ui::render::text::TextRenderer::layout_text_explicit (5,781,177,423 samples, 6.46%)</title><rect x="75.2783%" y="709" width="6.4589%" height="15" fill="rgb(208,99,37)" fg:x="67379887839" fg:w="5781177423"/><text x="75.5283%" y="719.50">rust_ui:..</text></g><g><title>rust_ui::render::text::split_preserve_leading_whitespace (64,762,709 samples, 0.07%)</title><rect x="81.6648%" y="693" width="0.0724%" height="15" fill="rgb(213,132,31)" fg:x="73096302553" fg:w="64762709"/><text x="81.9148%" y="703.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (18,524,260 samples, 0.02%)</title><rect x="81.7165%" y="677" width="0.0207%" height="15" fill="rgb(243,129,40)" fg:x="73142541002" fg:w="18524260"/><text x="81.9665%" y="687.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (18,524,260 samples, 0.02%)</title><rect x="81.7165%" y="661" width="0.0207%" height="15" fill="rgb(210,66,33)" fg:x="73142541002" fg:w="18524260"/><text x="81.9665%" y="671.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (18,524,260 samples, 0.02%)</title><rect x="81.7165%" y="645" width="0.0207%" height="15" fill="rgb(209,189,4)" fg:x="73142541002" fg:w="18524260"/><text x="81.9665%" y="655.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (13,870,779 samples, 0.02%)</title><rect x="81.7217%" y="629" width="0.0155%" height="15" fill="rgb(214,107,37)" fg:x="73147194483" fg:w="13870779"/><text x="81.9717%" y="639.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_utf8_char_boundary (13,870,779 samples, 0.02%)</title><rect x="81.7217%" y="613" width="0.0155%" height="15" fill="rgb(245,88,54)" fg:x="73147194483" fg:w="13870779"/><text x="81.9717%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (509,794,328 samples, 0.57%)</title><rect x="90.6350%" y="629" width="0.5696%" height="15" fill="rgb(205,146,20)" fg:x="81125265200" fg:w="509794328"/><text x="90.8850%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (935,513,189 samples, 1.05%)</title><rect x="90.1645%" y="645" width="1.0452%" height="15" fill="rgb(220,161,25)" fg:x="80704157513" fg:w="935513189"/><text x="90.4145%" y="655.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (158,135,790 samples, 0.18%)</title><rect x="92.4947%" y="597" width="0.1767%" height="15" fill="rgb(215,152,15)" fg:x="82789864875" fg:w="158135790"/><text x="92.7447%" y="607.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (158,135,790 samples, 0.18%)</title><rect x="92.4947%" y="581" width="0.1767%" height="15" fill="rgb(233,192,44)" fg:x="82789864875" fg:w="158135790"/><text x="92.7447%" y="591.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (158,135,790 samples, 0.18%)</title><rect x="92.4947%" y="565" width="0.1767%" height="15" fill="rgb(240,170,46)" fg:x="82789864875" fg:w="158135790"/><text x="92.7447%" y="575.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros (158,135,790 samples, 0.18%)</title><rect x="92.4947%" y="549" width="0.1767%" height="15" fill="rgb(207,104,33)" fg:x="82789864875" fg:w="158135790"/><text x="92.7447%" y="559.50"></text></g><g><title>core::intrinsics::likely (2,337,031,888 samples, 2.61%)</title><rect x="92.6714%" y="597" width="2.6110%" height="15" fill="rgb(219,21,39)" fg:x="82948000665" fg:w="2337031888"/><text x="92.9214%" y="607.50">co..</text></g><g><title>hashbrown::control::group::sse2::Group::load (13,869,357 samples, 0.02%)</title><rect x="95.2823%" y="597" width="0.0155%" height="15" fill="rgb(214,133,29)" fg:x="85285032553" fg:w="13869357"/><text x="95.5323%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (13,869,357 samples, 0.02%)</title><rect x="95.2823%" y="581" width="0.0155%" height="15" fill="rgb(226,93,6)" fg:x="85285032553" fg:w="13869357"/><text x="95.5323%" y="591.50"></text></g><g><title>core::ptr::copy_nonoverlapping (13,869,357 samples, 0.02%)</title><rect x="95.2823%" y="565" width="0.0155%" height="15" fill="rgb(252,222,34)" fg:x="85285032553" fg:w="13869357"/><text x="95.5323%" y="575.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (738,729,051 samples, 0.83%)</title><rect x="95.2978%" y="597" width="0.8253%" height="15" fill="rgb(252,92,48)" fg:x="85298901910" fg:w="738729051"/><text x="95.5478%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (738,729,051 samples, 0.83%)</title><rect x="95.2978%" y="581" width="0.8253%" height="15" fill="rgb(245,223,24)" fg:x="85298901910" fg:w="738729051"/><text x="95.5478%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (239,913,393 samples, 0.27%)</title><rect x="96.1232%" y="581" width="0.2680%" height="15" fill="rgb(205,176,3)" fg:x="86037630961" fg:w="239913393"/><text x="96.3732%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (239,913,393 samples, 0.27%)</title><rect x="96.1232%" y="565" width="0.2680%" height="15" fill="rgb(235,151,15)" fg:x="86037630961" fg:w="239913393"/><text x="96.3732%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (239,913,393 samples, 0.27%)</title><rect x="96.1232%" y="549" width="0.2680%" height="15" fill="rgb(237,209,11)" fg:x="86037630961" fg:w="239913393"/><text x="96.3732%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (353,050,809 samples, 0.39%)</title><rect x="96.1232%" y="597" width="0.3944%" height="15" fill="rgb(243,227,24)" fg:x="86037630961" fg:w="353050809"/><text x="96.3732%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (113,137,416 samples, 0.13%)</title><rect x="96.3912%" y="581" width="0.1264%" height="15" fill="rgb(239,193,16)" fg:x="86277544354" fg:w="113137416"/><text x="96.6412%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (113,137,416 samples, 0.13%)</title><rect x="96.3912%" y="565" width="0.1264%" height="15" fill="rgb(231,27,9)" fg:x="86277544354" fg:w="113137416"/><text x="96.6412%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (113,137,416 samples, 0.13%)</title><rect x="96.3912%" y="549" width="0.1264%" height="15" fill="rgb(219,169,10)" fg:x="86277544354" fg:w="113137416"/><text x="96.6412%" y="559.50"></text></g><g><title>rust_ui::render::text::TextRenderer::load_character (14,689,293,596 samples, 16.41%)</title><rect x="81.7372%" y="709" width="16.4112%" height="15" fill="rgb(244,229,43)" fg:x="73161065262" fg:w="14689293596"/><text x="81.9872%" y="719.50">rust_ui::render::text::Te..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7,758,500,149 samples, 8.67%)</title><rect x="89.4804%" y="693" width="8.6680%" height="15" fill="rgb(254,38,20)" fg:x="80091858709" fg:w="7758500149"/><text x="89.7304%" y="703.50">std::collect..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7,758,500,149 samples, 8.67%)</title><rect x="89.4804%" y="677" width="8.6680%" height="15" fill="rgb(250,47,30)" fg:x="80091858709" fg:w="7758500149"/><text x="89.7304%" y="687.50">hashbrown::m..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7,758,500,149 samples, 8.67%)</title><rect x="89.4804%" y="661" width="8.6680%" height="15" fill="rgb(224,124,36)" fg:x="80091858709" fg:w="7758500149"/><text x="89.7304%" y="671.50">hashbrown::m..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6,210,688,156 samples, 6.94%)</title><rect x="91.2097%" y="645" width="6.9387%" height="15" fill="rgb(246,68,51)" fg:x="81639670702" fg:w="6210688156"/><text x="91.4597%" y="655.50">hashbrown..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6,210,688,156 samples, 6.94%)</title><rect x="91.2097%" y="629" width="6.9387%" height="15" fill="rgb(253,43,49)" fg:x="81639670702" fg:w="6210688156"/><text x="91.4597%" y="639.50">hashbrown..</text></g><g><title>hashbrown::raw::RawTableInner::find_inner (6,210,688,156 samples, 6.94%)</title><rect x="91.2097%" y="613" width="6.9387%" height="15" fill="rgb(219,54,36)" fg:x="81639670702" fg:w="6210688156"/><text x="91.4597%" y="623.50">hashbrown..</text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (1,459,677,088 samples, 1.63%)</title><rect x="96.5176%" y="597" width="1.6308%" height="15" fill="rgb(227,133,34)" fg:x="86390681770" fg:w="1459677088"/><text x="96.7676%" y="607.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (572,834,734 samples, 0.64%)</title><rect x="98.5967%" y="693" width="0.6400%" height="15" fill="rgb(247,227,15)" fg:x="88251628266" fg:w="572834734"/><text x="98.8467%" y="703.50"></text></g><g><title>core::str::validations::next_code_point (572,834,734 samples, 0.64%)</title><rect x="98.5967%" y="677" width="0.6400%" height="15" fill="rgb(229,96,14)" fg:x="88251628266" fg:w="572834734"/><text x="98.8467%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (209,872,270 samples, 0.23%)</title><rect x="99.0022%" y="661" width="0.2345%" height="15" fill="rgb(220,79,17)" fg:x="88614590730" fg:w="209872270"/><text x="99.2522%" y="671.50"></text></g><g><title>rust_ui::render::text::TextRenderer::measure_text_size (1,555,726,202 samples, 1.74%)</title><rect x="98.1484%" y="709" width="1.7381%" height="15" fill="rgb(205,131,53)" fg:x="87850358858" fg:w="1555726202"/><text x="98.3984%" y="719.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::max (577,027,311 samples, 0.64%)</title><rect x="99.2418%" y="693" width="0.6447%" height="15" fill="rgb(209,50,29)" fg:x="88829057749" fg:w="577027311"/><text x="99.4918%" y="703.50"></text></g><g><title>core::str::&lt;impl str&gt;::starts_with (13,890,386 samples, 0.02%)</title><rect x="99.9075%" y="693" width="0.0155%" height="15" fill="rgb(245,86,46)" fg:x="89424876876" fg:w="13890386"/><text x="100.1575%" y="703.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::is_prefix_of (13,890,386 samples, 0.02%)</title><rect x="99.9075%" y="677" width="0.0155%" height="15" fill="rgb(235,66,46)" fg:x="89424876876" fg:w="13890386"/><text x="100.1575%" y="687.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_prefix_of (9,276,745 samples, 0.01%)</title><rect x="99.9126%" y="661" width="0.0104%" height="15" fill="rgb(232,148,31)" fg:x="89429490517" fg:w="9276745"/><text x="100.1626%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (9,276,745 samples, 0.01%)</title><rect x="99.9126%" y="645" width="0.0104%" height="15" fill="rgb(217,149,8)" fg:x="89429490517" fg:w="9276745"/><text x="100.1626%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (9,276,745 samples, 0.01%)</title><rect x="99.9126%" y="629" width="0.0104%" height="15" fill="rgb(209,183,11)" fg:x="89429490517" fg:w="9276745"/><text x="100.1626%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (9,276,745 samples, 0.01%)</title><rect x="99.9126%" y="613" width="0.0104%" height="15" fill="rgb(208,55,20)" fg:x="89429490517" fg:w="9276745"/><text x="100.1626%" y="623.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (9,276,745 samples, 0.01%)</title><rect x="99.9126%" y="597" width="0.0104%" height="15" fill="rgb(218,39,14)" fg:x="89429490517" fg:w="9276745"/><text x="100.1626%" y="607.50"></text></g><g><title>[libc.so.6] (9,276,745 samples, 0.01%)</title><rect x="99.9126%" y="581" width="0.0104%" height="15" fill="rgb(216,169,33)" fg:x="89429490517" fg:w="9276745"/><text x="100.1626%" y="591.50"></text></g><g><title>rust_ui::style::parse_style (32,564,320 samples, 0.04%)</title><rect x="99.8917%" y="709" width="0.0364%" height="15" fill="rgb(233,80,24)" fg:x="89410802250" fg:w="32564320"/><text x="100.1417%" y="719.50"></text></g><g><title>taffy::compute::flexbox::calculate_flex_item (25,121,657 samples, 0.03%)</title><rect x="99.9481%" y="709" width="0.0281%" height="15" fill="rgb(213,179,31)" fg:x="89461257138" fg:w="25121657"/><text x="100.1981%" y="719.50"></text></g><g><title>taffy::tree::traits::LayoutPartialTreeExt::perform_child_layout (20,316,114 samples, 0.02%)</title><rect x="99.9535%" y="693" width="0.0227%" height="15" fill="rgb(209,19,5)" fg:x="89466062681" fg:w="20316114"/><text x="100.2035%" y="703.50"></text></g><g><title>&lt;taffy::tree::taffy_tree::TaffyView&lt;NodeContext,MeasureFunction&gt; as taffy::tree::traits::LayoutPartialTree&gt;::compute_child_layout (20,316,114 samples, 0.02%)</title><rect x="99.9535%" y="677" width="0.0227%" height="15" fill="rgb(219,18,35)" fg:x="89466062681" fg:w="20316114"/><text x="100.2035%" y="687.50"></text></g><g><title>taffy::compute::compute_cached_layout (20,316,114 samples, 0.02%)</title><rect x="99.9535%" y="661" width="0.0227%" height="15" fill="rgb(209,169,16)" fg:x="89466062681" fg:w="20316114"/><text x="100.2035%" y="671.50"></text></g><g><title>taffy::compute::flexbox::compute_flexbox_layout (19,589,436 samples, 0.02%)</title><rect x="99.9543%" y="645" width="0.0219%" height="15" fill="rgb(245,90,51)" fg:x="89466789359" fg:w="19589436"/><text x="100.2043%" y="655.50"></text></g><g><title>taffy::compute::flexbox::compute_preliminary (19,589,436 samples, 0.02%)</title><rect x="99.9543%" y="629" width="0.0219%" height="15" fill="rgb(220,99,45)" fg:x="89466789359" fg:w="19589436"/><text x="100.2043%" y="639.50"></text></g><g><title>taffy::compute::flexbox::compute_flexbox_layout (14,136,245 samples, 0.02%)</title><rect x="99.9762%" y="709" width="0.0158%" height="15" fill="rgb(249,89,25)" fg:x="89486378795" fg:w="14136245"/><text x="100.2262%" y="719.50"></text></g><g><title>taffy::compute::flexbox::compute_preliminary (9,473,254 samples, 0.01%)</title><rect x="99.9814%" y="693" width="0.0106%" height="15" fill="rgb(239,193,0)" fg:x="89491041786" fg:w="9473254"/><text x="100.2314%" y="703.50"></text></g><g><title>taffy::compute::flexbox::compute_constants (9,473,254 samples, 0.01%)</title><rect x="99.9814%" y="677" width="0.0106%" height="15" fill="rgb(231,126,1)" fg:x="89491041786" fg:w="9473254"/><text x="100.2314%" y="687.50"></text></g><g><title>cad-frontend (89,483,376,476 samples, 99.97%)</title><rect x="0.0250%" y="725" width="99.9728%" height="15" fill="rgb(243,166,3)" fg:x="22406014" fg:w="89483376476"/><text x="0.2750%" y="735.50">cad-frontend</text></g><g><title>all (89,507,699,506 samples, 100%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(223,22,34)" fg:x="0" fg:w="89507699506"/><text x="0.2500%" y="751.50"></text></g></svg></svg>